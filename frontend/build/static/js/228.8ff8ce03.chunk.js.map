{"version":3,"file":"static/js/228.8ff8ce03.chunk.js","mappings":"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","sources":["pages/posting-templates/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Stack,\n  Grid,\n  Alert,\n  Button,\n  Container,\n  Card,\n  Divider,\n  MenuItem,\n  Typography,\n} from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useForm } from 'react-hook-form';\nimport { useSettingsContext } from '../../components/settings';\nimport FormProvider, { RHFTextField, RHFSelect } from '../../components/hook-form';\nimport AppTitle from '../../components/AppTitle';\n\nexport default function PostingTemplate() {\n  const { enqueueSnackbar } = useSnackbar();\n  const { themeStretch } = useSettingsContext();\n\n  const defaultValues = { postcard: 'none', headline: '', textColor: '', bgColor: '' };\n  const methods = useForm({ defaultValues });\n\n  const {\n    reset,\n    watch,\n    setError,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      console.log(data);\n      reset(defaultValues);\n      enqueueSnackbar('Guest added successfully!');\n    } catch (error) {\n      console.error(error);\n\n      reset();\n      setError('afterSubmit', { ...error, message: error.message || error });\n    }\n  };\n\n  const CURRENCIES = [\n    { value: 'none', label: 'Please Select' },\n    { value: 'USD', label: '$' },\n    { value: 'EUR', label: '€' },\n    { value: 'BTC', label: '฿' },\n    { value: 'JPY', label: '¥' },\n  ];\n\n  return (\n    <>\n      <AppTitle title=\"Posting Template\" />\n\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <Typography variant=\"h3\" component=\"h1\" paragraph>\n          Posting Template\n        </Typography>\n\n        <Card sx={{ bgcolor: 'background.lightPurple', p: 2, mb: 5 }}>\n          <Typography gutterBottom>\n            You can have up to 5 postcards posted per episode, promoting it on your social media &\n            on your guests&apos;. In this screen, you can edit the color & text of each\n            postcard&apos;s Headline.\n          </Typography>\n\n          <Typography gutterBottom>\n            Plus you can customize the Postcard posting schedule for your social media. This will be\n            the default for your Guest. But they can tailor their posting schedule for themselves.\n          </Typography>\n\n          <Typography>\n            Each postcard will automatically be updated with your Guest&apos;s name, topic title,\n            recording date & the Ask Page URL. What you&apos;ll see below is simply a template for\n            your headline customization.\n          </Typography>\n        </Card>\n\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n          {!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\n\n          <Grid container direction=\"row\" gap={5}>\n            <Stack gap={2} flex={1}>\n              <Typography variant=\"h4\" component=\"h4\" paragraph>\n                Select Postcard to Edit\n              </Typography>\n\n              <RHFSelect name=\"postcard\" label=\"Select Postcard\">\n                {CURRENCIES.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </RHFSelect>\n\n              <RHFTextField\n                name=\"headline\"\n                label=\"Headline Text\"\n                placeholder=\"Enter your headline text here\"\n              />\n              <RHFTextField name=\"textColor\" label=\"Text Color\" placeholder=\"e.g #000000\" />\n              <RHFTextField name=\"bgColor\" label=\"Background Color\" placeholder=\"e.g #000000\" />\n\n              <Box>\n                <LoadingButton\n                  size=\"large\"\n                  type=\"submit\"\n                  shape=\"circular\"\n                  variant=\"outlined\"\n                  loading={isSubmitting}\n                  sx={{ display: 'block', mb: 2 }}\n                >\n                  SAVE CUSTOMIZATION\n                </LoadingButton>\n\n                <Button\n                  size=\"large\"\n                  type=\"button\"\n                  color=\"info\"\n                  shape=\"circular\"\n                  variant=\"contained\"\n                >\n                  CUSTOMIZE YOUR POSTING SCHEDULE\n                </Button>\n              </Box>\n            </Stack>\n\n            <Divider orientation=\"vertical\" flexItem />\n\n            <Grid item flex={1}>\n              <Typography variant=\"h4\" component=\"h4\" paragraph>\n                Postcard Preview\n              </Typography>\n              <Box>Preview</Box>\n            </Grid>\n          </Grid>\n        </FormProvider>\n      </Container>\n    </>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["PostingTemplate","enqueueSnackbar","useSnackbar","themeStretch","useSettingsContext","defaultValues","postcard","headline","textColor","bgColor","methods","useForm","reset","setError","watch","handleSubmit","formState","errors","isSubmitting","onSubmit","data","console","log","error","message","title","maxWidth","variant","component","paragraph","sx","bgcolor","p","mb","gutterBottom","afterSubmit","severity","container","direction","gap","flex","name","label","value","map","option","placeholder","size","type","shape","loading","display","color","orientation","flexItem","item","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined"],"sourceRoot":""}