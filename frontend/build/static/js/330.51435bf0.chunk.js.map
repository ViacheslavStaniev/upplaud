{"version":3,"file":"static/js/330.51435bf0.chunk.js","mappings":"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","sources":["components/Accordian.js","components/TextEditor.js","pages/dashboard/layouts/PollAudioRecord.js","pages/layouts/SuggestionModal.js","pages/dashboard/layouts/PollSharingImage.js","pages/dashboard/NewAutomation.js","components/CopyText.js","pages/dashboard/layouts/AutomationCongrats.js","pages/dashboard/layouts/PreviewAutomationVideo.js","pages/dashboard/layouts/SocialPostingItem.js","pages/layouts/CustomUpload.js","pages/layouts/HeadshotImage.js","utils/common.js"],"sourcesContent":["import { Collapse } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\n\nexport default function Accordian({ items = [], defaultActive = '', marginBottom = true }) {\n  return (\n    <Collapse\n      items={items}\n      bordered={false}\n      className={`bg-F7F3F9 ${marginBottom ? 'mb-2' : ''}`}\n      defaultActiveKey={defaultActive ? [defaultActive] : []}\n      expandIcon={({ isActive }) => (isActive ? <MinusOutlined /> : <PlusOutlined />)}\n    />\n  );\n}\n","import { Form } from 'antd';\nimport ReactQuill from 'react-quill';\n\nexport default function TextEditor({ name, ...params }) {\n  const toolbarOptions = [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n    ['link', 'image'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n  ];\n\n  return (\n    <Form.Item name={name} {...params?.formItemParams}>\n      <ReactQuill theme=\"snow\" modules={{ toolbar: toolbarOptions }} {...params} />\n    </Form.Item>\n  );\n}\n","import RecordRTC from 'recordrtc';\nimport Simplebar from 'simplebar-react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { FILE_TYPE } from '../../../utils/types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useEffect, useState } from 'react';\nimport { uploadAudio, deleteFile } from '../../../reducers/fileSlice';\nimport { Spin, List, Form, Input, Button, Typography, Modal, Select, Popconfirm } from 'antd';\n\nconst { Paragraph } = Typography;\n\nexport default function PollAudioRecord() {\n  const form = Form.useFormInstance();\n  const [state, setState] = useState({\n    blob: null,\n    open: false,\n    audioName: '',\n    timeLeft: 120,\n    recorder: null,\n    audioDuration: 0,\n    isRecording: false,\n    recordingStartedAt: null,\n  });\n\n  const updateState = (newState) => setState((prevState) => ({ ...prevState, ...newState }));\n\n  const {\n    blob,\n    open,\n    audioName,\n    timeLeft,\n    audioDuration,\n    recorder,\n    isRecording,\n    recordingStartedAt,\n  } = state;\n\n  // Redux States\n  const dispatch = useDispatch();\n  const { files, isLoading, isUploading } = useSelector(({ files }) => files);\n  const audios = files.filter(({ type }) => type === FILE_TYPE.AUDIO);\n\n  const getAudioFileName = () => {\n    const localeTimeStr = new Date()\n      .toLocaleString()\n      .replaceAll(',', '')\n      .replaceAll(':', '')\n      .replaceAll('/', '')\n      .replaceAll(' ', '_');\n    return `Recording_${localeTimeStr}.webm`;\n  };\n\n  // Start Recording\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({ audio: { echoCancellation: true } }).then((stream) => {\n      const recordObj = new RecordRTC(stream, {\n        type: 'audio',\n        bufferSize: 4096,\n        sampleRate: 44100,\n        audioBitsPerSecond: 128000,\n      });\n      recordObj.stream = stream;\n      recordObj.startRecording();\n      updateState({ isRecording: true, recorder: recordObj, recordingStartedAt: Date.now() });\n    });\n  };\n\n  // Stop Recording\n  const stopRecording = useCallback(() => {\n    if (window.interval) clearInterval(window.interval);\n\n    recorder.stopRecording(() => {\n      const audioBlob = new Blob([recorder.getBlob()], { type: 'audio/webm' });\n      recorder.stream.stop();\n\n      const audioDuration = Math.floor((Date.now() - recordingStartedAt) / 1000);\n\n      updateState({\n        audioDuration,\n        recorder: null,\n        blob: audioBlob,\n        isRecording: false,\n        audioName: getAudioFileName(),\n      });\n    });\n  }, [recorder, recordingStartedAt]);\n\n  // Save Recording\n  const onSaveRecording = async () => {\n    const formData = new FormData();\n    formData.append('duration', audioDuration);\n    formData.append('audio', blob, audioName || getAudioFileName());\n\n    dispatch(uploadAudio(formData));\n    updateState({ blob: null, audioName: '' });\n  };\n\n  useEffect(() => {\n    if (recordingStartedAt) {\n      window.interval = setInterval(() => {\n        const timeLeft = 120 - Math.floor((Date.now() - recordingStartedAt) / 1000);\n        if (timeLeft <= 0) stopRecording();\n        else updateState({ timeLeft });\n      }, 1000);\n    }\n  }, [recordingStartedAt, stopRecording]);\n\n  // Seconds to mm:ss\n  const secondsToMinutes = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes < 10 ? `0${minutes}` : minutes} :${\n      remainingSeconds < 10 ? `0${remainingSeconds}` : remainingSeconds\n    }`;\n  };\n\n  return (\n    <>\n      <Form.Item name=\"audioDuration\" hidden />\n\n      <div className=\"flex-item gap-2 mb-2\">\n        <Form.Item name=\"audio\" label=\"Audio\" className=\"w-40 m-0\">\n          <Select\n            loading={isLoading}\n            disabled={isLoading}\n            className=\"minw-200px\"\n            placeholder=\"Select an Audio\"\n            options={audios.map(({ _id, name, duration = 0 }) => ({\n              label: name,\n              value: _id,\n              duration,\n            }))}\n            onChange={(value, { duration }) => form.setFieldValue('audioDuration', duration)}\n          />\n        </Form.Item>\n\n        <Button type=\"link\" icon={<PlusOutlined />} onClick={() => updateState({ open: true })}>\n          ADD/MANAGE AUDIOS\n        </Button>\n      </div>\n\n      <Modal\n        centered\n        width={600}\n        open={open}\n        footer={false}\n        maskClosable={false}\n        title=\"Add/Manage Audios\"\n        onCancel={() => updateState({ blob: null, open: false })}\n      >\n        <Paragraph strong className=\"m-0\">\n          Record New Audio\n        </Paragraph>\n        <Paragraph type=\"secondary\">\n          Max 2 minutes. The recording will auto stop after two minutes.\n        </Paragraph>\n        <Spin spinning={isLoading} tip=\"Uploading...\">\n          <audio src={blob ? URL.createObjectURL(blob) : ''} controls className=\"w-100 mb-1\" />\n\n          {blob && (\n            <Form.Item label=\"File Name (Optional)\">\n              <Input\n                value={audioName}\n                disabled={isRecording}\n                placeholder=\"Enter file name\"\n                onChange={(e) => updateState({ audioName: e.target.value })}\n              />\n            </Form.Item>\n          )}\n\n          <div className=\"flex-item gap-1 mb-1\">\n            <Button htmlType=\"button\" onClick={startRecording} loading={isRecording}>\n              {isRecording ? (\n                <>\n                  Recording... <span>{secondsToMinutes(timeLeft)}</span>{' '}\n                </>\n              ) : (\n                'Start Recording'\n              )}\n            </Button>\n\n            <Button htmlType=\"button\" onClick={stopRecording} disabled={!isRecording}>\n              Stop Recording\n            </Button>\n\n            <Button\n              type=\"primary\"\n              htmlType=\"button\"\n              loading={isUploading}\n              onClick={onSaveRecording}\n              disabled={!blob || isRecording}\n            >\n              Save Recording\n            </Button>\n          </div>\n        </Spin>\n\n        <Simplebar style={{ maxHeight: 420, paddingRight: 10 }}>\n          <List\n            footer={false}\n            bordered={false}\n            loading={isLoading}\n            dataSource={audios}\n            header=\"Available Audios\"\n            renderItem={({ _id, name }, i) => (\n              <List.Item\n                actions={[\n                  <Popconfirm\n                    key=\"delete\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Delete\"\n                    onConfirm={() => dispatch(deleteFile(_id))}\n                    description=\"Are you sure to delete this Audio?\"\n                  >\n                    <Button danger size=\"small\">\n                      Delete\n                    </Button>\n                  </Popconfirm>,\n                ]}\n              >\n                <List.Item.Meta title={`${i + 1}. ${name}`} style={{ alignItems: 'center' }} />\n              </List.Item>\n            )}\n          />\n        </Simplebar>\n      </Modal>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport SimpleBar from 'simplebar-react';\nimport { Modal, List, Typography } from 'antd';\n\nSuggestionModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nexport default function SuggestionModal({ open, onCancel }) {\n  const suggestions = [\n    'BENEFIT TO VOTER:',\n    'Learn 3 mistakes to avoid...',\n    'Hear the juicy details',\n    'Ask Anything & Hear The Answer',\n    'Make our podcast perfect for you...',\n    'Have us discuss what you want to know',\n    'Hear some step by step instructions',\n    'Get free help from our guest speaker',\n  ];\n\n  return (\n    <Modal centered open={open} footer={false} title=\"Suggestions\" onCancel={onCancel}>\n      <SimpleBar style={{ maxHeight: 'calc(100vh - 200px)', paddingRight: 10 }}>\n        <List\n          header={false}\n          footer={false}\n          bordered={false}\n          dataSource={suggestions}\n          renderItem={(item, index) => (\n            <List.Item>\n              {index + 1}. <Typography.Text copyable>{item}</Typography.Text>\n            </List.Item>\n          )}\n        />\n      </SimpleBar>\n    </Modal>\n  );\n}\n","import { useState } from 'react';\nimport { FILE_TYPE } from '../../../utils/types';\nimport { getFullS3Url } from '../../../config-global';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuthContext } from '../../../auth/AuthProvider';\nimport { deleteFile, uploadImages, generatePollImage } from '../../../reducers/fileSlice';\nimport {\n  List,\n  Form,\n  Spin,\n  Modal,\n  Select,\n  Button,\n  Input,\n  Avatar,\n  Upload,\n  Tooltip,\n  Statistic,\n  Typography,\n  Popconfirm,\n  ColorPicker,\n  notification,\n} from 'antd';\nimport { PlusOutlined, InboxOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport Simplebar from 'simplebar-react';\nimport PollAudioRecord from './PollAudioRecord';\nimport Accordian from '../../../components/Accordian';\n// import CustomUpload from '../../layouts/CustomUpload';\nimport SuggestionModal from '../../layouts/SuggestionModal';\n\nconst { Option } = Select;\nconst { Dragger } = Upload;\nconst { Text, Paragraph } = Typography;\n\nexport default function PollSharingImage() {\n  const { user } = useAuthContext();\n\n  const form = Form.useFormInstance();\n  const audioDuration = Form.useWatch('audioDuration', form);\n  const socialShareFileSrc = Form.useWatch('socialShareFileSrc', form);\n\n  // Local States\n  const [countdownTime, setCountdownTime] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [showAddManageImages, setShowAddManageImages] = useState(false);\n  const [showPollImagePreview, setShowPollImagePreview] = useState(false);\n\n  // Redux States\n  const dispatch = useDispatch();\n  const { files, isLoading, isUploading } = useSelector((state) => state.files);\n  const images = files.filter(({ type }) => type === FILE_TYPE.IMAGE);\n\n  const getFormName = (name) => ['pollSharingImage', name];\n\n  const TextColorFormItem = ({ label, title, formType }) => {\n    return (\n      <div className=\"flex-item gap-2 mb-2\">\n        <Form.Item\n          label={label}\n          className=\"w-40 m-0\"\n          name={getFormName(`${formType}Text`)}\n          rules={[{ max: 45, message: 'Maximum 45 character are allowed.' }]}\n        >\n          <Input\n            maxLength={45}\n            placeholder=\"Enter the text here\"\n            suffix={\n              <Tooltip title=\"Show Suggestions\">\n                <Button\n                  type=\"text\"\n                  size=\"small\"\n                  icon={<QuestionCircleOutlined />}\n                  onClick={() => setShowSuggestions(true)}\n                />\n              </Tooltip>\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} BG COLOR`}\n          name={getFormName(`${formType}BgColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}BgColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} TEXT COLOR`}\n          name={getFormName(`${formType}TextColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}TextColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n      </div>\n    );\n  };\n\n  const onPollImageGenerateClick = async () => {\n    const formValues = form.getFieldsValue();\n\n    const { audio, guest, pollSharingImage, hostSpeakerLabel, guestSpeakerLabel } = formValues;\n\n    // user logo\n    const pollSharingImageInfo = {\n      ...pollSharingImage,\n      audio,\n      userLogo: guest?.picture || '',\n      showLogo: images.find(({ _id }) => _id === pollSharingImage.logo)?.s3Path,\n      host: {\n        fontColor: '#000000',\n        label: hostSpeakerLabel,\n        text: `${user.firstName} ${user.lastName} ${\n          user?.profile?.organization ? `(${user?.profile?.organization})` : ''\n        }`,\n      },\n      guest: {\n        fontColor: '#000000',\n        label: guestSpeakerLabel,\n        text: `${guest.fullName} ${guest.organization ? `(${guest.organization})` : ''}`,\n      },\n    };\n\n    if (!pollSharingImageInfo.userLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please upload your headshot image first.',\n      });\n    } else if (!pollSharingImageInfo.showLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please select a logo image',\n      });\n    }\n\n    setIsGenerating(true);\n    setCountdownTime(audioDuration || 60);\n\n    try {\n      const { imageS3Path, videoS3Path } = await generatePollImage(pollSharingImageInfo);\n\n      form.setFieldValue('pollImageSrc', imageS3Path);\n      if (videoS3Path) form.setFieldValue('socialShareFileSrc', videoS3Path);\n\n      notification.success({\n        message: 'Success',\n        description: 'Automation sharing image generated successfully',\n      });\n    } catch (error) {\n      console.error(error);\n      notification.error({\n        message: 'Error',\n        description: 'Something went wrong',\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const items = [\n    {\n      key: 'pollSharingImage',\n      label: 'Customize Automation Sharing Image',\n      children: (\n        <>\n          <div className=\"flex-item gap-2 mb-2\">\n            <Form.Item label=\"LOGO IMAGE FROM\" name={getFormName('logo')} className=\"w-40 m-0\">\n              <Select\n                loading={isLoading}\n                disabled={isLoading}\n                className=\"minw-200px\"\n                placeholder=\"Select an Image\"\n              >\n                {images.map(({ _id, name, s3Path }) => (\n                  <Option key={_id} value={_id}>\n                    <Avatar src={getFullS3Url(s3Path)} size={32} />\n                    <Text style={{ marginLeft: 5 }}>{name}</Text>\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n            <Button\n              type=\"link\"\n              icon={<PlusOutlined />}\n              onClick={() => setShowAddManageImages(true)}\n            >\n              ADD/MANAGE IMAGES\n            </Button>\n          </div>\n\n          <TextColorFormItem label=\"HEADLINE HOOK\" title=\"HEADLINE\" formType=\"header\" />\n          <TextColorFormItem label=\"FOOTER BENEFIT\" title=\"FOOTER\" formType=\"footer\" />\n\n          <PollAudioRecord name={getFormName('audio')} />\n\n          <div className=\"flex-item gap-2 mt-4\">\n            <Button danger type=\"primary\" loading={isGenerating} onClick={onPollImageGenerateClick}>\n              Generate Video Invitation Post\n            </Button>\n            {/* <CustomUpload\n              cropShape=\"rect\"\n              aspect={1.91 / 1}\n              onComplete={(value) => form.setFieldValue('pollImageSrc', value)}\n            >\n              <Button type=\"primary\">UPLOAD YOUR OWN</Button>\n            </CustomUpload> */}\n\n            <Button\n              type=\"default\"\n              disabled={!socialShareFileSrc}\n              onClick={() => setShowPollImagePreview(true)}\n            >\n              Preview Video Invitation Post\n            </Button>\n\n            {/* <Image\n              style={{ display: 'none' }}\n              src={getFullS3Url(pollImageSrc)}\n              preview={{\n                visible: showPollImagePreview,\n                onVisibleChange: (value) => setShowPollImagePreview(value),\n              }}\n            /> */}\n            <Modal\n              centered\n              width={'50%'}\n              footer={false}\n              open={showPollImagePreview}\n              title=\"Preview Video Invitation Post\"\n              onCancel={() => setShowPollImagePreview(false)}\n            >\n              <video\n                src={getFullS3Url(socialShareFileSrc)}\n                controls\n                style={{ width: '100%', height: 'auto' }}\n              />\n            </Modal>\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  const uploadProps = {\n    name: 'file',\n    multiple: true,\n    showUploadList: false,\n    accept: '.png, .gif, .jpeg, .jpg',\n    customRequest: async ({ file }) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = async () => {\n        const imageData = reader.result.split(',')[1];\n        const requestBody = {\n          images: [\n            {\n              name: file.name,\n              imageData: `data:${file.type};base64,${imageData}`,\n            },\n          ],\n        };\n        dispatch(uploadImages(requestBody));\n      };\n    },\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    },\n  };\n\n  return (\n    <>\n      <Accordian items={items} defaultActive=\"pollSharingImage\" />\n\n      <SuggestionModal open={showSuggestions} onCancel={() => setShowSuggestions(false)} />\n\n      <Modal\n        centered\n        footer={false}\n        title=\"Add/Manage Images\"\n        open={showAddManageImages}\n        onCancel={() => setShowAddManageImages(false)}\n      >\n        <Paragraph>Add New Image</Paragraph>\n        <Spin spinning={isUploading} tip=\"Uploading...\">\n          <Dragger {...uploadProps}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n            <p className=\"ant-upload-hint\">Supported file types: PNG/JPG/JPEG</p>\n          </Dragger>\n        </Spin>\n\n        <Simplebar style={{ maxHeight: 420, paddingRight: 10 }}>\n          <List\n            footer={false}\n            bordered={false}\n            loading={isLoading}\n            dataSource={images}\n            header=\"Available Images\"\n            renderItem={({ _id, name, s3Path }) => (\n              <List.Item\n                actions={[\n                  <Popconfirm\n                    key=\"delete\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Delete Image\"\n                    onConfirm={() => dispatch(deleteFile(_id))}\n                    description=\"Are you sure to delete this image?\"\n                  >\n                    <Button danger size=\"small\">\n                      Delete\n                    </Button>\n                  </Popconfirm>,\n                ]}\n              >\n                <List.Item.Meta\n                  title={name}\n                  style={{ alignItems: 'center' }}\n                  avatar={<Avatar src={getFullS3Url(s3Path)} />}\n                />\n              </List.Item>\n            )}\n          />\n        </Simplebar>\n      </Modal>\n\n      <Modal\n        centered\n        footer={false}\n        destroyOnClose\n        closable={false}\n        keyboard={false}\n        open={isGenerating}\n        maskClosable={false}\n        title=\"Video is getting Generated...\"\n      >\n        <Paragraph className=\"mt-2\">\n          Please wait while we generate your video. This may take a few minutes.\n        </Paragraph>\n\n        <Statistic.Countdown\n          format=\"mm:ss\"\n          title=\"Estimated Time:\"\n          className=\"text-center wait-countdown\"\n          value={Date.now() + countdownTime * 3 * 1000}\n          onFinish={() => setCountdownTime(audioDuration || 60)}\n        />\n      </Modal>\n    </>\n  );\n}\n","import dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport { getFiles } from '../../reducers/fileSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAuthContext } from '../../auth/AuthProvider';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { GUEST_TYPE, POLL_STATUS } from '../../utils/types';\nimport { pollTypeOptions, getPollType, getSocialsItems } from '../../utils/common';\nimport { addGuest, fetchGuest, updateGuest, updateState } from '../../reducers/guestsSlice';\nimport {\n  Row,\n  Col,\n  List,\n  Form,\n  Space,\n  Input,\n  Radio,\n  Steps,\n  Button,\n  Switch,\n  DatePicker,\n  Typography,\n} from 'antd';\nimport AppTitle from '../../components/AppTitle';\nimport TextEditor from '../../components/TextEditor';\nimport HeadshotImage from '../layouts/HeadshotImage';\nimport PollSharingImage from './layouts/PollSharingImage';\nimport SocialPostingItem from './layouts/SocialPostingItem';\nimport AutomationCongrats from './layouts/AutomationCongrats';\n\nconst { Text, Title, Paragraph } = Typography;\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\n\nconst hostInfoFields = [\n  {\n    label: 'FULL NAME',\n    name: ['guest', 'fullName'],\n    rules: [{ required: true }],\n  },\n  {\n    label: 'CELL PHONE',\n    name: ['guest', 'phone'],\n  },\n  {\n    label: 'EMAIL ADDRESS',\n    name: ['guest', 'email'],\n    rules: [{ required: true }],\n  },\n  {\n    name: ['guest', 'about'],\n    label: 'BIO OR SOCIAL URL',\n  },\n  {\n    name: ['guest', 'jobTitle'],\n    label: 'JOB TITLE',\n  },\n  {\n    name: ['guest', 'organization'],\n    label: 'ORGANIZATION',\n  },\n];\n\nconst topicLabels = ['TOPIC OR STORY1', 'TOPIC OR STORY2'];\n\nconst pollInfoFields = [\n  {\n    name: 'hostSpeakerLabel',\n    label: 'YOUR SPEAKER LABEL',\n  },\n  {\n    name: 'guestSpeakerLabel',\n    label: 'THEIR SPEAKER LABEL',\n  },\n  {\n    name: 'hostOfferUrl',\n    label: 'YOUR REWARD URL',\n  },\n  {\n    name: 'guestOfferUrl',\n    label: 'THEIR REWARD URL',\n  },\n  {\n    required: true,\n    name: 'presentationName',\n    label: 'Name of presentation or podcast',\n  },\n];\n\nconst getGuesUsertObj = (userObj = null) => {\n  return {\n    email: userObj?.email,\n    phone: userObj ? userObj.profile?.phone : '',\n    about: userObj ? userObj?.profile?.about : '',\n    picture: userObj ? userObj?.profile?.picture : '',\n    jobTitle: userObj ? userObj?.profile?.jobTitle : '',\n    organization: userObj ? userObj?.profile?.organization : '',\n    fullName: userObj ? `${userObj?.firstName} ${userObj?.lastName}` : '',\n  };\n};\n\nconst getPostSharingImageInfo = (obj) => {\n  const { logo, header = null, footer = null } = obj || {};\n\n  return {\n    logo,\n    headerText: (header && header?.text) || '',\n    headerBgColor: (header && header?.bgColor) || '#1677FF',\n    headerTextColor: (header && header.textColor) || '#FFFFFF',\n    footerText: (footer && footer?.text) || '',\n    footerBgColor: (footer && footer?.bgColor) || '#1677FF',\n    footerTextColor: (footer && footer?.textColor) || '#FFFFFF',\n  };\n};\n\nexport default function NewAutomation({ isGuestAcceptance = false }) {\n  const { id } = useParams();\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useAuthContext();\n\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const isNew = id === undefined; // new automation\n  const guestTypeValue = Form.useWatch('guestType', form);\n  const isSoloSession = guestTypeValue === SOLO_SESSION;\n  const { guest, error, isLoading, isPublished, isPublishing } = useSelector(\n    (state) => state.guests\n  );\n\n  const {\n    audio = null,\n    socials = [],\n    guest: guestUser,\n    pollImageSrc = '',\n    pollImageInfo = null,\n    hostOfferUrl = null,\n    guestOfferUrl = null,\n    recordingDate = null,\n    presentationName = '',\n    guestType = HOST_GUEST,\n    hostSpeakerLabel = '',\n    guestSpeakerLabel = '',\n    socialShareFileSrc = '',\n    potentialTopics = ['', ''],\n    startHostAutomation = false,\n    emailTemplate = {\n      subject: '[PRESENTATION_NAME] NEXT STEPS',\n      body: `<blockquote>Hi [GUEST_FIRSTNAME], it's [USER_FULLNAME]. (To reach me, please reply all.) I use Upplaud to grow my audience; you can use it at no cost to reach more people too:</blockquote><blockquote>Can we post on our LinkedIn &amp; Facebook about [PODCAST / PRESENTATION NAME] before we do it? Upplaud makes it easy &amp; engaging. (See your private link &amp; password at the end.)</blockquote><blockquote>Here's how Upplaud grows our audience:</blockquote><blockquote>Instead of guessing what others want to know from both of us... Let's ask them! I chose 2 possible topics for our connections to vote on. They can even suggest their own topics privately.</blockquote><blockquote>I've already setup everything, including voting invitation posts for our Facebook &amp; LinkedIn. (It doesn't matter how active you are: Influencers on social media love engaging like this, and will share you with more people!)</blockquote><blockquote>We can also share our Upplaud voting page through email &amp; elsewhere. All you need to do is click the Grow Audience link below. It only takes a few seconds to connect your LinkedIn and/or Facebook to Upplaud. (I've connected mine already.)</blockquote><blockquote>Thanks for doing this now (and not procrastinating!) Every day counts to grow our audience: More time for more votes, more shares &amp; more results.</blockquote><blockquote>The link to click is below my name (be sure to reference your Private Password, to securely connect your social media). I'm excited to grow together.</blockquote><blockquote><br></blockquote><blockquote>Thanks again, see you soon. - [USER_FIRSTNAME]</blockquote><p><br></p>`,\n    },\n  } = guest || {};\n  console.log('guest', guest);\n\n  // Default Socials Items\n  const defaultSocials = getSocialsItems(user?.socialAccounts || []);\n\n  useEffect(() => {\n    // Get files\n    dispatch(getFiles());\n\n    if (!isNew && id) dispatch(fetchGuest(id));\n\n    if (isNew) dispatch(updateState({ guest: null, isPublished: false }));\n\n    return () => dispatch(updateState({ guest: null }));\n  }, [isNew, id, dispatch]);\n\n  useEffect(() => {\n    guest && form.resetFields();\n\n    return () => form.resetFields();\n  }, [guest, form]);\n\n  useEffect(() => {\n    const { email, phone, about, picture, fullName } = getGuesUsertObj(\n      isSoloSession ? user : guestUser\n    );\n\n    form.setFieldsValue({ guest: { email, phone, about, picture, fullName } });\n  }, [user, guestUser, form, isSoloSession]);\n\n  // Handle Error\n  useEffect(() => {\n    if (error && error.status === 403) navigate('/403');\n\n    return () => dispatch(updateState({ error: null }));\n  }, [error, navigate, dispatch]);\n\n  const initialValues = {\n    guestType,\n    pollImageSrc,\n    hostOfferUrl,\n    emailTemplate,\n    guestOfferUrl,\n    potentialTopics,\n    presentationName,\n    hostSpeakerLabel,\n    guestSpeakerLabel,\n    socialShareFileSrc,\n    startHostAutomation,\n    audio: audio?._id || null,\n    audioDuration: audio?.duration || 0,\n    guest: getGuesUsertObj(guestUser),\n    socials: socials.length > 0 ? socials : defaultSocials,\n    pollSharingImage: getPostSharingImageInfo(pollImageInfo),\n    recordingDate: recordingDate ? dayjs(recordingDate, 'YYYY/MM/DD') : null,\n  };\n\n  const onFormSubmit = (status) => {\n    form\n      .validateFields()\n      .then((values) => {\n        values.status = status;\n        values.recordingDate = dayjs(values?.recordingDate).format();\n\n        if (isNew) {\n          dispatch(addGuest(values));\n        } else {\n          dispatch(updateGuest(id, values));\n        }\n      })\n      .catch(console.log);\n  };\n\n  const stepItems = [\n    {\n      title: 'Got your info',\n      className: 'pointer-none',\n      content: <span>current-user-details</span>,\n    },\n    {\n      title: 'Guest info',\n      content: (\n        <>\n          <Title level={5}>{getPollType(guestTypeValue)?.text}</Title>\n\n          {hostInfoFields.map(({ label, name, rules = null }) => (\n            <Form.Item key={label} name={name} label={label} rules={isSoloSession ? null : rules}>\n              <Input placeholder={label} disabled={isSoloSession} />\n            </Form.Item>\n          ))}\n\n          <Form.Item name={['guest', 'picture']} label=\"HEADSHOT IMAGE\" className=\"m-0\">\n            <HeadshotImage\n              picture={Form.useWatch(['guest', 'picture'], form)}\n              onChange={(picture) => form.setFieldValue(['guest', 'picture'], picture)}\n            />\n          </Form.Item>\n        </>\n      ),\n    },\n    {\n      title: 'Topics info',\n      content: (\n        <>\n          <Title level={5}>Automation Info</Title>\n\n          {topicLabels.map((label, index) => (\n            <Form.Item\n              key={index}\n              label={label}\n              rules={[{ required: true }]}\n              name={['potentialTopics', index]}\n            >\n              <Input placeholder={label} />\n            </Form.Item>\n          ))}\n\n          {pollInfoFields.map(({ name, label, required = false }, i) => {\n            return (\n              <Form.Item\n                key={label}\n                name={name}\n                label={label}\n                rules={[{ required }]}\n                className={pollInfoFields.length - 1 === i ? 'm-0' : ''}\n              >\n                <Input placeholder={label} />\n              </Form.Item>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: 'Voter invites',\n      content: (\n        <>\n          <PollSharingImage />\n          <SocialPostingItem />\n        </>\n      ),\n    },\n    {\n      title: 'Guest invites',\n      content: (\n        <Row gutter={[24]}>\n          <Col span={18}>\n            <Title level={4} className=\"mt-0\">\n              Invite Email\n            </Title>\n\n            <Paragraph strong className=\"mb-1\">\n              Subject\n            </Paragraph>\n            <Form.Item name={['emailTemplate', 'subject']} wrapperCol={24}>\n              <Input placeholder=\"Subject\" />\n            </Form.Item>\n\n            <Paragraph strong className=\"mb-1\">\n              Body\n            </Paragraph>\n            <TextEditor\n              name={['emailTemplate', 'body']}\n              placeholder=\"Enter your text here...\"\n              formItemParams={{ className: 'm-0', wrapperCol: 24 }}\n            />\n          </Col>\n          <Col span={6}>\n            <Title level={5} className=\"mt-0\">\n              Short Codes\n            </Title>\n\n            <List\n              bordered\n              size=\"small\"\n              itemLayout=\"horizontal\"\n              renderItem={(item) => <List.Item>{item}</List.Item>}\n              dataSource={[\n                '[USER_FIRSTNAME]',\n                '[USER_LASTNAME]',\n                '[USER_FULLNAME]',\n                '[GUEST_FIRSTNAME]',\n                '[GUEST_LASTNAME]',\n                '[GUEST_FULLNAME]',\n                '[PRESENTATION_NAME]',\n              ]}\n            />\n          </Col>\n        </Row>\n      ),\n    },\n    {\n      title: 'UPPLAUD LAUNCH',\n      content: (\n        <>\n          <Form.Item\n            className=\"w-50 mt-4\"\n            name=\"recordingDate\"\n            label=\"Automation End Date\"\n            rules={[{ required: true }]}\n          >\n            <DatePicker\n              className=\"w-75 ml-0\"\n              disabledDate={(d) =>\n                d && (d < dayjs().subtract(1, 'day') || d > dayjs().add(1, 'years'))\n              }\n            />\n          </Form.Item>\n\n          <div className=\"flex-item\">\n            <Form.Item\n              className=\"m-0\"\n              valuePropName=\"checked\"\n              label=\"POSTING STARTS NOW\"\n              name=\"startHostAutomation\"\n              labelCol={{ span: 20 }}\n            >\n              <Switch disabled={isSoloSession} />\n            </Form.Item>\n            <Text type=\"secondary\" className=\"ml-1\">\n              Start when they starts\n            </Text>\n          </div>\n\n          <Space size={20} className=\"mt-4\">\n            <Button onClick={() => setCurrentStep((c) => c - 1)}>Back</Button>\n\n            <Button\n              loading={isLoading && !isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.DRAFT)}\n            >\n              SAVE DRAFT\n            </Button>\n            <Button\n              type=\"primary\"\n              loading={isLoading && isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.PUBLISHED)}\n            >\n              LAUNCH AUTOMATION\n            </Button>\n          </Space>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"automation-form\">\n      {!isGuestAcceptance && <AppTitle title={`${isNew ? 'New' : 'Update'} Automation`} />}\n\n      <div className=\"add-guest\">\n        <Title className=\"m-0\">NEW UPPLAUD AUTOMATION</Title>\n\n        {!isPublished && (\n          <Title level={5} className=\"fw-400\" type=\"secondary\">\n            Pull in more interest when your upplaud automation is posted automatically.\n          </Title>\n        )}\n      </div>\n\n      {!isPublished && (\n        <Form\n          form={form}\n          size=\"large\"\n          labelWrap={true}\n          labelAlign=\"left\"\n          layout=\"horizontal\"\n          // requiredMark={false}\n          labelCol={{ span: 7 }}\n          wrapperCol={{ span: 17 }}\n          initialValues={initialValues}\n        >\n          <Form.Item hidden name=\"pollImageSrc\" label=\"Poll Image\">\n            <Input placeholder=\"Poll Image\" />\n          </Form.Item>\n\n          <Form.Item hidden name=\"socialShareFileSrc\" label=\"Social Share File\">\n            <Input placeholder=\"Social Share File\" />\n          </Form.Item>\n\n          <Form.Item name=\"guestType\" className=\"mb-1\">\n            <Radio.Group options={pollTypeOptions} />\n          </Form.Item>\n\n          <Title level={4} className=\"mt-0\">\n            Quick Steps:\n          </Title>\n          <Steps current={currentStep} items={stepItems} onChange={setCurrentStep} />\n\n          {stepItems.map((item, index) => (\n            <div\n              key={index}\n              className=\"mt-2 mb-2\"\n              style={{ display: currentStep === index ? 'block' : 'none' }}\n            >\n              {item?.content}\n            </div>\n          ))}\n\n          {/* <div className=\"mt-2 mb-2\">{stepItems[currentStep]?.content}</div> */}\n\n          {currentStep !== stepItems.length - 1 && (\n            <div className=\"flex-item gap-1 flex-center\">\n              {currentStep < stepItems.length - 1 && (\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    // form\n                    //   .validateFields()\n                    //   .then(() => setCurrentStep((c) => c + 1))\n                    //   .catch(console.log);\n                    setCurrentStep((c) => c + 1);\n                  }}\n                >\n                  Next Step\n                </Button>\n              )}\n\n              {currentStep > 1 && (\n                <Button onClick={() => setCurrentStep((c) => c - 1)}>Back</Button>\n              )}\n            </div>\n          )}\n        </Form>\n      )}\n\n      {isPublished && (\n        <AutomationCongrats\n          guest={guest}\n          showActionBtns\n          onGoBack={() => dispatch(updateState({ isPublished: false }))}\n        />\n      )}\n    </div>\n  );\n}\n","import { Typography } from 'antd';\nimport PropTypes from 'prop-types';\n\nCopyText.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default function CopyText({ text = '', className = '', onCopy = () => {} }) {\n  return (\n    <div className={`p-1 br-5px bg-sky-6 border-sky-1 ${className}`}>\n      <Typography.Paragraph ellipsis copyable={{ onCopy }} className=\"m-0 flex-item space-between\">\n        {text}\n      </Typography.Paragraph>\n    </div>\n  );\n}\n","import { Button, Typography } from 'antd';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\nimport { SOCIAL_TITLES } from '../../../utils/types';\nimport { ArrowLeftOutlined, CheckOutlined } from '@ant-design/icons';\nimport CopyText from '../../../components/CopyText';\nimport PreviewAutomationVideo from './PreviewAutomationVideo';\n\nconst { Title } = Typography;\n\nexport default function AutomationCongrats({ guest, showActionBtns = false, onGoBack = () => {} }) {\n  const navigate = useNavigate();\n  const startHostAutomation = guest?.startHostAutomation || false;\n\n  const connectedSocials = (guest?.socials || []).reduce((acc, item) => {\n    if (!item || !item.isConnected) return acc;\n\n    const { type, subType } = item;\n\n    return [...acc, `${SOCIAL_TITLES[type]} ${subType}`];\n  }, []);\n\n  return (\n    <div className=\"mt-2 bg-F7F3F9 p-3 br-5px\">\n      <Title level={3}>👏 Congrats, your new Upplaud is ready to pull in new interest!</Title>\n      <Title level={5}>\n        Voters will be directed to:{' '}\n        <Link target=\"_blank\" to={`/vote/${guest?._id}`}>\n          Voting Page\n        </Link>\n      </Title>\n\n      <Title level={5}>You've connected:</Title>\n      <ul>\n        {connectedSocials.map((item, key) => (\n          <li key={key} className=\"capitalize\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n      <Title level={5}>\n        Preview your voter invitation video:{' '}\n        <PreviewAutomationVideo className=\"ml-1\" socialShareFileSrc={guest?.socialShareFileSrc} />{' '}\n      </Title>\n\n      <Title level={5} className=\"mb-1\">\n        Your guest will be invited to connect here:{' '}\n        <Link target=\"_blank\" to={`/guest-acceptance/${guest?._id}`}>\n          Guest Invitation Page\n        </Link>\n      </Title>\n      <Title level={5} className=\"mt-0\">\n        Their private invite password is:{' '}\n        <CopyText text={guest?.password} className=\"d-inline-block w-125px ml-1\" />\n      </Title>\n\n      <Title level={4}>\n        We'll start posting{' '}\n        {startHostAutomation ? 'when your guest connects their social media.' : 'later today!'}\n      </Title>\n\n      {showActionBtns && (\n        <>\n          <Button type=\"default\" size=\"large\" onClick={onGoBack} icon={<ArrowLeftOutlined />}>\n            Go back to make any changes.\n          </Button>\n\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            className=\"d-block mt-2\"\n            icon={<CheckOutlined />}\n            onClick={() => navigate(PATH_DASHBOARD.dashboard.automations)}\n          >\n            CONFIRM YOUR NEW UPPLAUD & SEE YOUR OTHER AUTOMATIONS\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { Modal, Typography } from 'antd';\nimport { getFullS3Url } from '../../../config-global';\n\nexport default function PreviewAutomationVideo({\n  text = '',\n  className = '',\n  socialShareFileSrc = '',\n}) {\n  const [openVideoPreview, setOpenVideoPreview] = useState(false);\n\n  return (\n    <>\n      <Typography.Link className={className} onClick={() => setOpenVideoPreview(true)}>\n        {text || 'Preview Video'}\n      </Typography.Link>\n\n      <Modal\n        centered\n        width={'50%'}\n        footer={false}\n        open={openVideoPreview}\n        title=\"Preview Video Invitation Post\"\n        onCancel={() => setOpenVideoPreview(false)}\n      >\n        <video\n          controls\n          src={getFullS3Url(socialShareFileSrc)}\n          style={{ width: '100%', height: 'auto' }}\n        />\n      </Modal>\n    </>\n  );\n}\n","import Accordian from '../../../components/Accordian';\nimport { getSocialLabel } from '../../../utils/common';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Select, Form, Alert, Tooltip } from 'antd';\n\nexport default function SocialPostingItem() {\n  const form = Form.useFormInstance();\n  const socialItems = Form.useWatch('socials', form) || [];\n\n  const postingOptions = [4, 3, 2, 1].map((value) => ({\n    value,\n    label: `Post [${value}x] monthly`,\n  }));\n\n  // Update Socials\n  const onChangeSet = (_id, field, value) => {\n    const items = socialItems.map((item) =>\n      item._id === _id ? { ...item, [field]: value } : item\n    );\n\n    form.setFieldValue('socials', items);\n  };\n\n  const hasSocials = socialItems.length > 0;\n  const items = [\n    {\n      key: 'social',\n      label: 'Confirm Socials & Posting Frequency',\n      children: (\n        <div className=\"flex-item gap-1 flex-column align-baseline\">\n          <Form.Item name=\"socials\" hidden>\n            <input />\n          </Form.Item>\n\n          {hasSocials &&\n            socialItems.map(\n              ({ _id, type, subType, subTypeName = '', isActive, frequency, isConnected }) => (\n                <div key={_id} className=\"flex-item gap-1 flex-auto\">\n                  <Checkbox\n                    checked={isActive}\n                    className=\"uppercase\"\n                    disabled={!isConnected}\n                    onChange={(e) => onChangeSet(_id, 'isActive', e.target.checked)}\n                  >\n                    {getSocialLabel(type, subType, subTypeName)}\n                  </Checkbox>\n                  <Select\n                    size=\"small\"\n                    defaultValue={4}\n                    value={frequency}\n                    placeholder=\"Select\"\n                    disabled={!isConnected}\n                    options={postingOptions}\n                    style={{ minWidth: 200 }}\n                    onChange={(value) => onChangeSet(_id, 'frequency', value)}\n                  />\n\n                  {!isConnected && (\n                    <Tooltip\n                      color=\"red\"\n                      arrow={false}\n                      title=\"Please connect your social account to enable this automation.\"\n                    >\n                      <Button\n                        danger\n                        type=\"text\"\n                        size=\"small\"\n                        shape=\"circle\"\n                        icon={<InfoCircleOutlined />}\n                      >\n                        Account Disconnected{' '}\n                      </Button>\n                    </Tooltip>\n                  )}\n                </div>\n              )\n            )}\n\n          {!hasSocials && (\n            <Alert\n              showIcon\n              style={{ fontWeight: 600 }}\n              message=\"No social media accounts found. Please connect your social media accounts first.\"\n            />\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  return <Accordian items={items} defaultActive=\"social\" marginBottom={false} />;\n}\n","import ImgCrop from 'antd-img-crop';\nimport { useState } from 'react';\nimport { Spin, Upload, message } from 'antd';\nimport { uploadAndGetS3Path } from '../../reducers/fileSlice';\n\nexport default function CustomUpload({ onComplete, children, cropShape = 'round', aspect = 1 }) {\n  const [isUploading, setIsUploading] = useState(false);\n\n  const beforeUpload = (file) => {\n    if (!['image/png', 'image/jpg', 'image/jpeg'].includes(file.type.toLowerCase())) {\n      message.error('You can only upload JPG/PNG file!');\n      return false;\n    }\n\n    return true;\n  };\n\n  const props = {\n    name: 'file',\n    beforeUpload,\n    multiple: false,\n    showUploadList: false,\n    accept: '.png, .jpeg, .jpg',\n    customRequest: ({ file }) => {\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n        try {\n          setIsUploading(true);\n          const result = await uploadAndGetS3Path({ imageData: reader.result });\n          setIsUploading(false);\n          onComplete(result?.s3Path);\n        } catch (error) {\n          console.log(error);\n          setIsUploading(false);\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n  };\n\n  return (\n    <ImgCrop\n      showReset\n      rotationSlider\n      aspect={aspect}\n      modalOk=\"Upload\"\n      cropShape={cropShape}\n      fillColor=\"transparent\"\n      beforeCrop={beforeUpload}\n    >\n      <Upload {...props}>\n        <Spin spinning={isUploading}>{children}</Spin>\n      </Upload>\n    </ImgCrop>\n  );\n}\n","import { Button, Avatar } from 'antd';\nimport CustomUpload from './CustomUpload';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { getFullS3Url } from '../../config-global';\n\nexport default function HeadshotImage({ picture = '', onChange }) {\n  const pictureUrl = picture\n    ? picture.startsWith('http')\n      ? picture\n      : getFullS3Url(picture)\n    : null;\n\n  return (\n    <div className=\"flex-item\">\n      {pictureUrl && <Avatar size=\"large\" src={pictureUrl} />}\n\n      <CustomUpload onComplete={onChange}>\n        <Button icon={<UploadOutlined />}>Click to {pictureUrl ? 'Change' : 'Upload'}</Button>\n      </CustomUpload>\n    </div>\n  );\n}\n","import * as ExcelJS from 'exceljs';\nimport { GUEST_TYPE, SOCIAL_TITLES, SOCIAL_TYPE, SOCIAL_SUB_TYPE } from './types';\n\nconst { FACEBOOK } = SOCIAL_TYPE;\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\nconst { PROFILE, PAGE, GROUP } = SOCIAL_SUB_TYPE;\n\nconst colors = [\n  '##E91E63',\n  '#673AB7',\n  '#2196F3',\n  '#00BCD4',\n  '#FF9800',\n  '#8BC34A',\n  '#009688',\n  '#FF5722',\n  '#607D8B',\n  '#F44336',\n];\nexport const getRandomColor = () => colors[Math.floor(Math.random() * colors.length)];\n\nexport const getDateString = (timestamp) => new Date(timestamp).toDateString();\n\nexport const pollTypeOptions = [\n  { key: HOST_GUEST, value: HOST_GUEST, label: 'JOINT SESSION', text: 'Their Info' },\n  { key: SOLO_SESSION, value: SOLO_SESSION, label: 'SOLO SESSION', text: 'Your Info' },\n  // { key: GUEST_SPEAKER, value: GUEST_SPEAKER, label: \"I'M A GUEST SPEAKER\", text: 'Host Info' },\n];\n\nexport const getPollType = (key = HOST_GUEST) => pollTypeOptions.find((item) => item.key === key);\n\nexport const getSocialTitle = (type) => SOCIAL_TITLES[type];\n\nexport const getSocialLabel = (type, subType, subTypeName = '') => {\n  const title = getSocialTitle(type);\n\n  if (subType === PROFILE) {\n    return `YOUR ${title} PROFILE`;\n  } else if (subType === PAGE) {\n    return `YOUR ${title} PAGE: ${subTypeName}`;\n  } else if (subType === GROUP) {\n    return `YOUR ${title} GROUP: ${subTypeName}`;\n  }\n\n  return '';\n};\n\nexport const getSocialsItems = (socialAccounts = []) => {\n  return socialAccounts.reduce((items, item) => {\n    if (!item?.isConnected) return items;\n\n    const { type, socialId, page, group } = item;\n\n    const getSocialItem = (subType, subTypeId, subTypeName = '', frequency = 4) => {\n      return {\n        type,\n        subType,\n        frequency,\n        subTypeId,\n        subTypeName,\n        isActive: false,\n        _id: `${type}_${subType}`,\n        isConnected: (subTypeId || '').toString().length > 0,\n      };\n    };\n\n    const getSubTypeName = (item) =>\n      item?.accounts.find(({ id }) => id === item?.socialId)?.name || '';\n\n    const newItems = [\n      ...items,\n      getSocialItem(PROFILE, socialId),\n      getSocialItem(PAGE, page?.socialId, getSubTypeName(page)),\n    ];\n\n    return type === FACEBOOK\n      ? [...newItems, getSocialItem(GROUP, group?.socialId, getSubTypeName(page))]\n      : newItems;\n  }, []);\n};\n\n// download votes\nexport const downloadVotes = (votes) => {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet('Voting Data');\n\n  const { questionnaireAnswers = [] } = votes[0] || {};\n  const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n  sheet.columns = [\n    { header: 'Selected Topic', key: 'topic' },\n    { header: 'Voter Name', key: 'voter_name' },\n    { header: 'Voter Email', key: 'voter_email' },\n    { header: 'Voter Cell Phone', key: 'voter_cellphone' },\n    { header: 'User Suggested', key: 'isSuggestion' },\n    { header: 'Suggested Topic', key: 'suggested_topic' },\n    { header: 'Suggested Speaker', key: 'suggested_speaker' },\n    { header: `Question 1: ${quest1?.question}`, key: 'quest1' },\n    { header: `Question 2: ${quest2?.question}`, key: 'quest2' },\n    { header: 'Referral 1', key: 'quest2_referral1' },\n    { header: 'Referral 2', key: 'quest2_referral2' },\n    { header: 'Name', key: 'quest2_name' },\n    { header: 'Email', key: 'quest2_email' },\n    { header: `Question 3: ${quest3?.question}`, key: 'quest3' },\n    { header: `Question 4: ${quest4?.question}`, key: 'quest4' },\n    { header: 'Timestamp', key: 'timestamp' },\n  ];\n\n  votes.forEach((vote) => {\n    const { selectedTopic, voter, isSuggestion, suggestions, createdAt, questionnaireAnswers } =\n      vote;\n\n    const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n    sheet.addRow({\n      topic: selectedTopic?.topic || 'Other',\n      voter_name: voter?.name || '--',\n      voter_email: voter?.email || '--',\n      voter_cellphone: voter?.cell_phone || '--',\n      isSuggestion: isSuggestion ? 'Yes' : 'No',\n      suggested_topic: suggestions?.topic || '--',\n      suggested_speaker: suggestions?.speaker || '--',\n      quest1: quest1 ? quest1?.answers || '--' : '--',\n      quest2: quest2?.answers ? `Comment: ${quest2?.answers?.comment || '--'}` : '--',\n      quest2_referral1: quest2?.answers?.referral1 || '--',\n      quest2_referral2: quest2?.answers?.referral2 || '--',\n      quest2_name: quest2?.answers?.name || '--',\n      quest2_email: quest2?.answers?.email || '--',\n      quest3: quest3 ? quest3?.answers?.answer || '--' : '--',\n      quest4: quest4 ? (quest4?.doneSharing ? 'Yes' : 'No') : '--',\n      timestamp: new Date(createdAt).toLocaleString(),\n    });\n  });\n\n  workbook.xlsx.writeBuffer().then((buffer) => {\n    const blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'VotingData.xlsx';\n    a.click();\n  });\n};\n"],"names":["Accordian","_ref","items","defaultActive","marginBottom","_jsx","Collapse","bordered","className","concat","defaultActiveKey","expandIcon","_ref2","isActive","MinusOutlined","PlusOutlined","TextEditor","name","params","Form","Item","formItemParams","children","ReactQuill","theme","modules","toolbar","header","list","script","indent","direction","color","background","font","align","Paragraph","Typography","PollAudioRecord","form","useFormInstance","state","setState","useState","blob","open","audioName","timeLeft","recorder","audioDuration","isRecording","recordingStartedAt","updateState","newState","prevState","dispatch","useDispatch","files","isLoading","isUploading","useSelector","audios","filter","type","FILE_TYPE","AUDIO","getAudioFileName","localeTimeStr","Date","toLocaleString","replaceAll","stopRecording","useCallback","window","interval","clearInterval","audioBlob","Blob","getBlob","stream","stop","Math","floor","now","useEffect","setInterval","_jsxs","_Fragment","hidden","label","Select","loading","disabled","placeholder","options","map","_ref3","_id","duration","value","onChange","_ref4","setFieldValue","Button","icon","onClick","Modal","centered","width","footer","maskClosable","title","onCancel","strong","Spin","spinning","tip","src","URL","createObjectURL","controls","Input","e","target","htmlType","startRecording","navigator","mediaDevices","getUserMedia","audio","echoCancellation","then","recordObj","RecordRTC","bufferSize","sampleRate","audioBitsPerSecond","seconds","minutes","remainingSeconds","secondsToMinutes","async","formData","FormData","append","uploadAudio","Simplebar","style","maxHeight","paddingRight","List","dataSource","renderItem","_ref5","i","actions","Popconfirm","okText","cancelText","onConfirm","deleteFile","description","danger","size","Meta","alignItems","SuggestionModal","SimpleBar","item","index","Text","copyable","Option","Dragger","Upload","PollSharingImage","user","useAuthContext","useWatch","socialShareFileSrc","countdownTime","setCountdownTime","isGenerating","setIsGenerating","showSuggestions","setShowSuggestions","showAddManageImages","setShowAddManageImages","showPollImagePreview","setShowPollImagePreview","images","IMAGE","getFormName","TextColorFormItem","formType","rules","max","message","maxLength","suffix","Tooltip","QuestionCircleOutlined","ColorPicker","showText","onChangeComplete","metaColor","toHexString","key","s3Path","Avatar","getFullS3Url","marginLeft","_images$find","_user$profile","_user$profile2","formValues","getFieldsValue","guest","pollSharingImage","hostSpeakerLabel","guestSpeakerLabel","pollSharingImageInfo","userLogo","picture","showLogo","find","logo","host","fontColor","text","firstName","lastName","profile","organization","fullName","notification","error","imageS3Path","videoS3Path","generatePollImage","success","console","height","uploadProps","multiple","showUploadList","accept","customRequest","file","reader","FileReader","readAsDataURL","onload","imageData","result","split","requestBody","uploadImages","onDrop","log","dataTransfer","InboxOutlined","_ref6","avatar","destroyOnClose","closable","keyboard","Statistic","Countdown","format","onFinish","Title","HOST_GUEST","SOLO_SESSION","GUEST_TYPE","hostInfoFields","required","topicLabels","pollInfoFields","getGuesUsertObj","_userObj$profile","_userObj$profile2","_userObj$profile3","_userObj$profile4","_userObj$profile5","userObj","arguments","length","undefined","email","phone","about","jobTitle","getPostSharingImageInfo","obj","headerText","headerBgColor","bgColor","headerTextColor","textColor","footerText","footerBgColor","footerTextColor","NewAutomation","_getPollType","isGuestAcceptance","id","useParams","useForm","navigate","useNavigate","currentStep","setCurrentStep","isNew","guestTypeValue","isSoloSession","isPublished","isPublishing","guests","socials","guestUser","pollImageSrc","pollImageInfo","hostOfferUrl","guestOfferUrl","recordingDate","presentationName","guestType","potentialTopics","startHostAutomation","emailTemplate","subject","body","defaultSocials","getSocialsItems","socialAccounts","getFiles","fetchGuest","resetFields","setFieldsValue","status","initialValues","dayjs","onFormSubmit","validateFields","values","addGuest","updateGuest","catch","stepItems","content","level","getPollType","HeadshotImage","SocialPostingItem","Row","gutter","Col","span","wrapperCol","itemLayout","DatePicker","disabledDate","d","subtract","add","valuePropName","labelCol","Switch","Space","c","POLL_STATUS","DRAFT","PUBLISHED","AppTitle","labelWrap","labelAlign","layout","Radio","pollTypeOptions","Steps","current","display","AutomationCongrats","showActionBtns","onGoBack","CopyText","onCopy","ellipsis","connectedSocials","reduce","acc","isConnected","subType","SOCIAL_TITLES","Link","to","PreviewAutomationVideo","password","ArrowLeftOutlined","CheckOutlined","PATH_DASHBOARD","dashboard","automations","openVideoPreview","setOpenVideoPreview","socialItems","postingOptions","onChangeSet","field","hasSocials","subTypeName","frequency","Checkbox","checked","getSocialLabel","defaultValue","minWidth","arrow","shape","InfoCircleOutlined","Alert","showIcon","fontWeight","CustomUpload","onComplete","cropShape","aspect","setIsUploading","beforeUpload","includes","toLowerCase","props","onloadend","uploadAndGetS3Path","ImgCrop","showReset","rotationSlider","modalOk","fillColor","beforeCrop","pictureUrl","startsWith","UploadOutlined","FACEBOOK","SOCIAL_TYPE","PROFILE","PAGE","GROUP","SOCIAL_SUB_TYPE","colors","getRandomColor","random","getDateString","timestamp","toDateString","getSocialTitle","socialId","page","group","getSocialItem","subTypeId","toString","getSubTypeName","_item$accounts$find","accounts","newItems","downloadVotes","votes","workbook","ExcelJS","sheet","addWorksheet","questionnaireAnswers","quest1","quest2","quest3","quest4","columns","question","forEach","vote","_quest2$answers","_quest2$answers2","_quest2$answers3","_quest2$answers4","_quest2$answers5","_quest3$answers","selectedTopic","voter","isSuggestion","suggestions","createdAt","addRow","topic","voter_name","voter_email","voter_cellphone","cell_phone","suggested_topic","suggested_speaker","speaker","answers","comment","quest2_referral1","referral1","quest2_referral2","referral2","quest2_name","quest2_email","answer","doneSharing","xlsx","writeBuffer","buffer","url","a","document","createElement","href","download","click"],"sourceRoot":""}