{"version":3,"file":"static/js/717.b8597473.chunk.js","mappings":"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","sources":["sections/auth/AuthRegisterForm.js","sections/auth/Register.js","pages/auth/RegisterPage.js"],"sourcesContent":["import { useState } from 'react';\nimport * as Yup from 'yup';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, IconButton, InputAdornment, Alert } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// auth\nimport { useAuthContext } from '../../auth/useAuthContext';\n// components\nimport Iconify from '../../components/iconify';\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function AuthRegisterForm() {\n  const { register } = useAuthContext();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().required('First name required'),\n    lastName: Yup.string().required('Last name required'),\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const defaultValues = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(RegisterSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors, isSubmitting, isSubmitSuccessful },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      if (register) {\n        await register(data.email, data.password, data.firstName, data.lastName);\n      }\n    } catch (error) {\n      console.error(error);\n      reset();\n      setError('afterSubmit', {\n        ...error,\n        message: error.message || error,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={2.5}>\n        {!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\n\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n          <RHFTextField name=\"firstName\" label=\"First name\" />\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\n        </Stack>\n\n        <RHFTextField name=\"email\" label=\"Email address\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                  <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting || isSubmitSuccessful}\n        >\n          Create account\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Typography, Link } from '@mui/material';\n// layouts\nimport LoginLayout from '../../layouts/login';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n//\nimport AuthWithSocial from './AuthWithSocial';\nimport AuthRegisterForm from './AuthRegisterForm';\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  return (\n    <LoginLayout title=\"Manage the job more effectively with Minimal\">\n      <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\n        <Typography variant=\"h4\">Get started absolutely free.</Typography>\n\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"body2\"> Already have an account? </Typography>\n\n          <Link component={RouterLink} to={PATH_AUTH.login} variant=\"subtitle2\">\n            Sign in\n          </Link>\n        </Stack>\n      </Stack>\n\n      <AuthRegisterForm />\n\n      <Typography\n        component=\"div\"\n        sx={{ color: 'text.secondary', mt: 3, typography: 'caption', textAlign: 'center' }}\n      >\n        {'By signing up, I agree to '}\n        <Link underline=\"always\" color=\"text.primary\">\n          Terms of Service\n        </Link>\n        {' and '}\n        <Link underline=\"always\" color=\"text.primary\">\n          Privacy Policy\n        </Link>\n        .\n      </Typography>\n\n      <AuthWithSocial />\n    </LoginLayout>\n  );\n}\n","import Register from '../../sections/auth/Register';\nimport AppTitle from '../../components/AppTitle';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <AppTitle title=\"Register\" />\n\n      <Register />\n    </>\n  );\n}\n"],"names":["AuthRegisterForm","register","useAuthContext","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","required","lastName","email","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","isSubmitting","isSubmitSuccessful","onSubmit","data","console","error","message","Stack","spacing","afterSubmit","Alert","severity","direction","xs","sm","name","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","icon","LoadingButton","fullWidth","size","variant","loading","Register","title","sx","mb","Typography","Link","component","RouterLink","to","PATH_AUTH","color","mt","typography","textAlign","underline","AuthWithSocial","RegisterPage","AppTitle"],"sourceRoot":""}