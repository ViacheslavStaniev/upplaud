{"version":3,"file":"static/js/26.5de6be7f.chunk.js","mappings":"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","sources":["components/TextEditor.js","pages/dashboard/layouts/PollAudioRecord.js","components/Accordian.js","pages/layouts/SuggestionModal.js","pages/dashboard/layouts/PollSharingImage.js","pages/dashboard/layouts/SocialPostingItem.js","pages/dashboard/NewAutomation.js","components/CopyText.js","pages/dashboard/layouts/AutomationCongrats.js","pages/layouts/CustomUpload.js","pages/layouts/HeadshotImage.js","utils/common.js"],"sourcesContent":["import { Form } from 'antd';\nimport ReactQuill from 'react-quill';\n\nexport default function TextEditor({ name, ...params }) {\n  const toolbarOptions = [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n    ['link', 'image'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n  ];\n\n  return (\n    <Form.Item name={name} {...params?.formItemParams}>\n      <ReactQuill theme=\"snow\" modules={{ toolbar: toolbarOptions }} {...params} />\n    </Form.Item>\n  );\n}\n","import RecordRTC from 'recordrtc';\nimport Simplebar from 'simplebar-react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { FILE_TYPE } from '../../../utils/types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useEffect, useState } from 'react';\nimport { uploadAudio, deleteFile } from '../../../reducers/fileSlice';\nimport { Spin, List, Form, Input, Button, Typography, Modal, Select, Popconfirm } from 'antd';\n\nconst { Paragraph } = Typography;\n\nexport default function PollAudioRecord() {\n  const form = Form.useFormInstance();\n  const [state, setState] = useState({\n    blob: null,\n    open: false,\n    audioName: '',\n    timeLeft: 120,\n    recorder: null,\n    audioDuration: 0,\n    isRecording: false,\n    recordingStartedAt: null,\n  });\n\n  const updateState = (newState) => setState((prevState) => ({ ...prevState, ...newState }));\n\n  const {\n    blob,\n    open,\n    audioName,\n    timeLeft,\n    audioDuration,\n    recorder,\n    isRecording,\n    recordingStartedAt,\n  } = state;\n\n  // Redux States\n  const dispatch = useDispatch();\n  const { files, isLoading, isUploading } = useSelector(({ files }) => files);\n  const audios = files.filter(({ type }) => type === FILE_TYPE.AUDIO);\n\n  const getAudioFileName = () => {\n    const localeTimeStr = new Date()\n      .toLocaleString()\n      .replaceAll(',', '')\n      .replaceAll(':', '')\n      .replaceAll('/', '')\n      .replaceAll(' ', '_');\n    return `Recording_${localeTimeStr}.webm`;\n  };\n\n  // Start Recording\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({ audio: { echoCancellation: true } }).then((stream) => {\n      const recordObj = new RecordRTC(stream, {\n        type: 'audio',\n        bufferSize: 4096,\n        sampleRate: 44100,\n        audioBitsPerSecond: 128000,\n      });\n      recordObj.stream = stream;\n      recordObj.startRecording();\n      updateState({ isRecording: true, recorder: recordObj, recordingStartedAt: Date.now() });\n    });\n  };\n\n  // Stop Recording\n  const stopRecording = useCallback(() => {\n    if (window.interval) clearInterval(window.interval);\n\n    recorder.stopRecording(() => {\n      const audioBlob = new Blob([recorder.getBlob()], { type: 'audio/webm' });\n      recorder.stream.stop();\n\n      const audioDuration = Math.floor((Date.now() - recordingStartedAt) / 1000);\n\n      updateState({\n        audioDuration,\n        recorder: null,\n        blob: audioBlob,\n        isRecording: false,\n        audioName: getAudioFileName(),\n      });\n    });\n  }, [recorder, recordingStartedAt]);\n\n  // Save Recording\n  const onSaveRecording = async () => {\n    const formData = new FormData();\n    formData.append('duration', audioDuration);\n    formData.append('audio', blob, audioName || getAudioFileName());\n\n    dispatch(uploadAudio(formData));\n    updateState({ blob: null, audioName: '' });\n  };\n\n  useEffect(() => {\n    if (recordingStartedAt) {\n      window.interval = setInterval(() => {\n        const timeLeft = 120 - Math.floor((Date.now() - recordingStartedAt) / 1000);\n        if (timeLeft <= 0) stopRecording();\n        else updateState({ timeLeft });\n      }, 1000);\n    }\n  }, [recordingStartedAt, stopRecording]);\n\n  // Seconds to mm:ss\n  const secondsToMinutes = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes < 10 ? `0${minutes}` : minutes} :${\n      remainingSeconds < 10 ? `0${remainingSeconds}` : remainingSeconds\n    }`;\n  };\n\n  return (\n    <>\n      <Form.Item name=\"audioDuration\" hidden />\n\n      <div className=\"flex-item gap-2 mb-2\">\n        <Form.Item name=\"audio\" label=\"Audio\" className=\"w-40 m-0\">\n          <Select\n            loading={isLoading}\n            disabled={isLoading}\n            className=\"minw-200px\"\n            placeholder=\"Select an Audio\"\n            options={audios.map(({ _id, name, duration = 0 }) => ({\n              label: name,\n              value: _id,\n              duration,\n            }))}\n            onChange={(value, { duration }) => form.setFieldValue('audioDuration', duration)}\n          />\n        </Form.Item>\n\n        <Button type=\"link\" icon={<PlusOutlined />} onClick={() => updateState({ open: true })}>\n          ADD/MANAGE AUDIOS\n        </Button>\n      </div>\n\n      <Modal\n        centered\n        width={600}\n        open={open}\n        footer={false}\n        maskClosable={false}\n        title=\"Add/Manage Audios\"\n        onCancel={() => updateState({ blob: null, open: false })}\n      >\n        <Paragraph strong className=\"m-0\">\n          Record New Audio\n        </Paragraph>\n        <Paragraph type=\"secondary\">\n          Max 2 minutes. The recording will auto stop after two minutes.\n        </Paragraph>\n        <Spin spinning={isLoading} tip=\"Uploading...\">\n          <audio src={blob ? URL.createObjectURL(blob) : ''} controls className=\"w-100 mb-1\" />\n\n          {blob && (\n            <Form.Item label=\"File Name (Optional)\">\n              <Input\n                value={audioName}\n                disabled={isRecording}\n                placeholder=\"Enter file name\"\n                onChange={(e) => updateState({ audioName: e.target.value })}\n              />\n            </Form.Item>\n          )}\n\n          <div className=\"flex-item gap-1 mb-1\">\n            <Button htmlType=\"button\" onClick={startRecording} loading={isRecording}>\n              {isRecording ? (\n                <>\n                  Recording... <span>{secondsToMinutes(timeLeft)}</span>{' '}\n                </>\n              ) : (\n                'Start Recording'\n              )}\n            </Button>\n\n            <Button htmlType=\"button\" onClick={stopRecording} disabled={!isRecording}>\n              Stop Recording\n            </Button>\n\n            <Button\n              type=\"primary\"\n              htmlType=\"button\"\n              loading={isUploading}\n              onClick={onSaveRecording}\n              disabled={!blob || isRecording}\n            >\n              Save Recording\n            </Button>\n          </div>\n        </Spin>\n\n        <Simplebar style={{ maxHeight: 420, paddingRight: 10 }}>\n          <List\n            footer={false}\n            bordered={false}\n            loading={isLoading}\n            dataSource={audios}\n            header=\"Available Audios\"\n            renderItem={({ _id, name }, i) => (\n              <List.Item\n                actions={[\n                  <Popconfirm\n                    key=\"delete\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Delete\"\n                    onConfirm={() => dispatch(deleteFile(_id))}\n                    description=\"Are you sure to delete this Audio?\"\n                  >\n                    <Button danger size=\"small\">\n                      Delete\n                    </Button>\n                  </Popconfirm>,\n                ]}\n              >\n                <List.Item.Meta title={`${i + 1}. ${name}`} style={{ alignItems: 'center' }} />\n              </List.Item>\n            )}\n          />\n        </Simplebar>\n      </Modal>\n    </>\n  );\n}\n","import { Collapse } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\n\nexport default function Accordian({ items = [], defaultActive = '', marginBottom = true }) {\n  return (\n    <Collapse\n      items={items}\n      bordered={false}\n      className={`bg-F7F3F9 ${marginBottom ? 'mb-2' : ''}`}\n      defaultActiveKey={defaultActive ? [defaultActive] : []}\n      expandIcon={({ isActive }) => (isActive ? <MinusOutlined /> : <PlusOutlined />)}\n    />\n  );\n}\n","import PropTypes from 'prop-types';\nimport SimpleBar from 'simplebar-react';\nimport { Modal, List, Typography } from 'antd';\n\nSuggestionModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nexport default function SuggestionModal({ open, onCancel }) {\n  const suggestions = [\n    'BENEFIT TO VOTER:',\n    'Learn 3 mistakes to avoid...',\n    'Hear the juicy details',\n    'Ask Anything & Hear The Answer',\n    'Make our podcast perfect for you...',\n    'Have us discuss what you want to know',\n    'Hear some step by step instructions',\n    'Get free help from our guest speaker',\n  ];\n\n  return (\n    <Modal centered open={open} footer={false} title=\"Suggestions\" onCancel={onCancel}>\n      <SimpleBar style={{ maxHeight: 'calc(100vh - 200px)', paddingRight: 10 }}>\n        <List\n          header={false}\n          footer={false}\n          bordered={false}\n          dataSource={suggestions}\n          renderItem={(item, index) => (\n            <List.Item>\n              {index + 1}. <Typography.Text copyable>{item}</Typography.Text>\n            </List.Item>\n          )}\n        />\n      </SimpleBar>\n    </Modal>\n  );\n}\n","import { useState } from 'react';\nimport { FILE_TYPE } from '../../../utils/types';\nimport { getFullS3Url } from '../../../config-global';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuthContext } from '../../../auth/AuthProvider';\nimport { deleteFile, uploadImages, generatePollImage } from '../../../reducers/fileSlice';\nimport {\n  List,\n  Form,\n  Spin,\n  Modal,\n  Select,\n  Button,\n  Input,\n  Avatar,\n  Upload,\n  Tooltip,\n  Statistic,\n  Typography,\n  Popconfirm,\n  ColorPicker,\n  notification,\n} from 'antd';\nimport { PlusOutlined, InboxOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport Simplebar from 'simplebar-react';\nimport PollAudioRecord from './PollAudioRecord';\nimport Accordian from '../../../components/Accordian';\n// import CustomUpload from '../../layouts/CustomUpload';\nimport SuggestionModal from '../../layouts/SuggestionModal';\n\nconst { Option } = Select;\nconst { Dragger } = Upload;\nconst { Text, Paragraph } = Typography;\n\nexport default function PollSharingImage() {\n  const { user } = useAuthContext();\n\n  const form = Form.useFormInstance();\n  const audioDuration = Form.useWatch('audioDuration', form);\n  const socialShareFileSrc = Form.useWatch('socialShareFileSrc', form);\n\n  // Local States\n  const [countdownTime, setCountdownTime] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [showAddManageImages, setShowAddManageImages] = useState(false);\n  const [showPollImagePreview, setShowPollImagePreview] = useState(false);\n\n  // Redux States\n  const dispatch = useDispatch();\n  const { files, isLoading, isUploading } = useSelector((state) => state.files);\n  const images = files.filter(({ type }) => type === FILE_TYPE.IMAGE);\n\n  const getFormName = (name) => ['pollSharingImage', name];\n\n  const TextColorFormItem = ({ label, title, formType }) => {\n    return (\n      <div className=\"flex-item gap-2 mb-2\">\n        <Form.Item\n          label={label}\n          className=\"w-40 m-0\"\n          name={getFormName(`${formType}Text`)}\n          rules={[{ max: 45, message: 'Maximum 45 character are allowed.' }]}\n        >\n          <Input\n            maxLength={45}\n            placeholder=\"Enter the text here\"\n            suffix={\n              <Tooltip title=\"Show Suggestions\">\n                <Button\n                  type=\"text\"\n                  size=\"small\"\n                  icon={<QuestionCircleOutlined />}\n                  onClick={() => setShowSuggestions(true)}\n                />\n              </Tooltip>\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} BG COLOR`}\n          name={getFormName(`${formType}BgColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}BgColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} TEXT COLOR`}\n          name={getFormName(`${formType}TextColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}TextColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n      </div>\n    );\n  };\n\n  const onPollImageGenerateClick = async () => {\n    const formValues = form.getFieldsValue();\n\n    const { audio, guest, pollSharingImage, hostSpeakerLabel, guestSpeakerLabel } = formValues;\n\n    // user logo\n    const pollSharingImageInfo = {\n      ...pollSharingImage,\n      audio,\n      userLogo: guest?.picture || '',\n      showLogo: images.find(({ _id }) => _id === pollSharingImage.logo)?.s3Path,\n      host: {\n        fontColor: '#000000',\n        label: hostSpeakerLabel,\n        text: `${user.firstName} ${user.lastName} ${\n          user?.profile?.organization ? `(${user?.profile?.organization})` : ''\n        }`,\n      },\n      guest: {\n        fontColor: '#000000',\n        label: guestSpeakerLabel,\n        text: `${guest.fullName} ${guest.organization ? `(${guest.organization})` : ''}`,\n      },\n    };\n\n    if (!pollSharingImageInfo.userLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please upload your headshot image first.',\n      });\n    } else if (!pollSharingImageInfo.showLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please select a logo image',\n      });\n    }\n\n    setIsGenerating(true);\n    setCountdownTime(audioDuration || 60);\n\n    try {\n      const { imageS3Path, videoS3Path } = await generatePollImage(pollSharingImageInfo);\n\n      form.setFieldValue('pollImageSrc', imageS3Path);\n      if (videoS3Path) form.setFieldValue('socialShareFileSrc', videoS3Path);\n\n      notification.success({\n        message: 'Success',\n        description: 'Automation sharing image generated successfully',\n      });\n    } catch (error) {\n      console.error(error);\n      notification.error({\n        message: 'Error',\n        description: 'Something went wrong',\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const items = [\n    {\n      key: 'pollSharingImage',\n      label: 'Customize Automation Sharing Image',\n      children: (\n        <>\n          <div className=\"flex-item gap-2 mb-2\">\n            <Form.Item label=\"LOGO IMAGE FROM\" name={getFormName('logo')} className=\"w-40 m-0\">\n              <Select\n                loading={isLoading}\n                disabled={isLoading}\n                className=\"minw-200px\"\n                placeholder=\"Select an Image\"\n              >\n                {images.map(({ _id, name, s3Path }) => (\n                  <Option key={_id} value={_id}>\n                    <Avatar src={getFullS3Url(s3Path)} size={32} />\n                    <Text style={{ marginLeft: 5 }}>{name}</Text>\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n            <Button\n              type=\"link\"\n              icon={<PlusOutlined />}\n              onClick={() => setShowAddManageImages(true)}\n            >\n              ADD/MANAGE IMAGES\n            </Button>\n          </div>\n\n          <TextColorFormItem label=\"HEADLINE HOOK\" title=\"HEADLINE\" formType=\"header\" />\n          <TextColorFormItem label=\"FOOTER BENEFIT\" title=\"FOOTER\" formType=\"footer\" />\n\n          <PollAudioRecord name={getFormName('audio')} />\n\n          <div className=\"flex-item gap-2 mt-4\">\n            <Button danger type=\"primary\" loading={isGenerating} onClick={onPollImageGenerateClick}>\n              Generate Video Invitation Post\n            </Button>\n            {/* <CustomUpload\n              cropShape=\"rect\"\n              aspect={1.91 / 1}\n              onComplete={(value) => form.setFieldValue('pollImageSrc', value)}\n            >\n              <Button type=\"primary\">UPLOAD YOUR OWN</Button>\n            </CustomUpload> */}\n\n            <Button\n              type=\"default\"\n              disabled={!socialShareFileSrc}\n              onClick={() => setShowPollImagePreview(true)}\n            >\n              Preview Video Invitation Post\n            </Button>\n\n            {/* <Image\n              style={{ display: 'none' }}\n              src={getFullS3Url(pollImageSrc)}\n              preview={{\n                visible: showPollImagePreview,\n                onVisibleChange: (value) => setShowPollImagePreview(value),\n              }}\n            /> */}\n            <Modal\n              centered\n              width={'50%'}\n              footer={false}\n              open={showPollImagePreview}\n              title=\"Preview Video Invitation Post\"\n              onCancel={() => setShowPollImagePreview(false)}\n            >\n              <video\n                src={getFullS3Url(socialShareFileSrc)}\n                controls\n                style={{ width: '100%', height: 'auto' }}\n              />\n            </Modal>\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  const uploadProps = {\n    name: 'file',\n    multiple: true,\n    showUploadList: false,\n    accept: '.png, .gif, .jpeg, .jpg',\n    customRequest: async ({ file }) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = async () => {\n        const imageData = reader.result.split(',')[1];\n        const requestBody = {\n          images: [\n            {\n              name: file.name,\n              imageData: `data:${file.type};base64,${imageData}`,\n            },\n          ],\n        };\n        dispatch(uploadImages(requestBody));\n      };\n    },\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    },\n  };\n\n  return (\n    <>\n      <Accordian items={items} defaultActive=\"pollSharingImage\" />\n\n      <SuggestionModal open={showSuggestions} onCancel={() => setShowSuggestions(false)} />\n\n      <Modal\n        centered\n        footer={false}\n        title=\"Add/Manage Images\"\n        open={showAddManageImages}\n        onCancel={() => setShowAddManageImages(false)}\n      >\n        <Paragraph>Add New Image</Paragraph>\n        <Spin spinning={isUploading} tip=\"Uploading...\">\n          <Dragger {...uploadProps}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n            <p className=\"ant-upload-hint\">Supported file types: PNG/JPG/JPEG</p>\n          </Dragger>\n        </Spin>\n\n        <Simplebar style={{ maxHeight: 420, paddingRight: 10 }}>\n          <List\n            footer={false}\n            bordered={false}\n            loading={isLoading}\n            dataSource={images}\n            header=\"Available Images\"\n            renderItem={({ _id, name, s3Path }) => (\n              <List.Item\n                actions={[\n                  <Popconfirm\n                    key=\"delete\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Delete Image\"\n                    onConfirm={() => dispatch(deleteFile(_id))}\n                    description=\"Are you sure to delete this image?\"\n                  >\n                    <Button danger size=\"small\">\n                      Delete\n                    </Button>\n                  </Popconfirm>,\n                ]}\n              >\n                <List.Item.Meta\n                  title={name}\n                  style={{ alignItems: 'center' }}\n                  avatar={<Avatar src={getFullS3Url(s3Path)} />}\n                />\n              </List.Item>\n            )}\n          />\n        </Simplebar>\n      </Modal>\n\n      <Modal\n        centered\n        footer={false}\n        destroyOnClose\n        closable={false}\n        keyboard={false}\n        open={isGenerating}\n        maskClosable={false}\n        title=\"Video is getting Generated...\"\n      >\n        <Paragraph className=\"mt-2\">\n          Please wait while we generate your video. This may take a few minutes.\n        </Paragraph>\n\n        <Statistic.Countdown\n          format=\"mm:ss\"\n          title=\"Estimated Time:\"\n          className=\"text-center wait-countdown\"\n          value={Date.now() + countdownTime * 3 * 1000}\n          onFinish={() => setCountdownTime(audioDuration || 60)}\n        />\n      </Modal>\n    </>\n  );\n}\n","import Accordian from '../../../components/Accordian';\nimport { getSocialLabel } from '../../../utils/common';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Select, Form, Alert, Tooltip } from 'antd';\n\nexport default function SocialPostingItem() {\n  const form = Form.useFormInstance();\n  const socialItems = Form.useWatch('socials', form) || [];\n\n  const postingOptions = [4, 3, 2, 1].map((value) => ({\n    value,\n    label: `Post [${value}x] monthly`,\n  }));\n\n  // Update Socials\n  const onChangeSet = (_id, field, value) => {\n    const items = socialItems.map((item) =>\n      item._id === _id ? { ...item, [field]: value } : item\n    );\n\n    form.setFieldValue('socials', items);\n  };\n\n  const hasSocials = socialItems.length > 0;\n  const items = [\n    {\n      key: 'social',\n      label: 'Confirm Socials & Posting Frequency',\n      children: (\n        <div className=\"flex-item gap-1 flex-column align-baseline\">\n          <Form.Item name=\"socials\" hidden>\n            <input />\n          </Form.Item>\n\n          {hasSocials &&\n            socialItems.map(\n              ({ _id, type, subType, subTypeName = '', isActive, frequency, isConnected }) => (\n                <div key={_id} className=\"flex-item gap-1 flex-auto\">\n                  <Checkbox\n                    checked={isActive}\n                    className=\"uppercase\"\n                    disabled={!isConnected}\n                    onChange={(e) => onChangeSet(_id, 'isActive', e.target.checked)}\n                  >\n                    {getSocialLabel(type, subType, subTypeName)}\n                  </Checkbox>\n                  <Select\n                    size=\"small\"\n                    defaultValue={4}\n                    value={frequency}\n                    placeholder=\"Select\"\n                    disabled={!isConnected}\n                    options={postingOptions}\n                    style={{ minWidth: 200 }}\n                    onChange={(value) => onChangeSet(_id, 'frequency', value)}\n                  />\n\n                  {!isConnected && (\n                    <Tooltip\n                      color=\"red\"\n                      arrow={false}\n                      title=\"Please connect your social account to enable this automation.\"\n                    >\n                      <Button\n                        danger\n                        type=\"text\"\n                        size=\"small\"\n                        shape=\"circle\"\n                        icon={<InfoCircleOutlined />}\n                      >\n                        Account Disconnected{' '}\n                      </Button>\n                    </Tooltip>\n                  )}\n                </div>\n              )\n            )}\n\n          {!hasSocials && (\n            <Alert\n              showIcon\n              style={{ fontWeight: 600 }}\n              message=\"No social media accounts found. Please connect your social media accounts first.\"\n            />\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  return <Accordian items={items} defaultActive=\"social\" marginBottom={false} />;\n}\n","import dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport { getFiles } from '../../reducers/fileSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAuthContext } from '../../auth/AuthProvider';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { GUEST_TYPE, POLL_STATUS } from '../../utils/types';\nimport { pollTypeOptions, getPollType, getSocialsItems } from '../../utils/common';\nimport { addGuest, fetchGuest, updateGuest, updateState } from '../../reducers/guestsSlice';\nimport {\n  Row,\n  Col,\n  List,\n  Form,\n  Space,\n  Input,\n  Radio,\n  Steps,\n  Button,\n  Switch,\n  DatePicker,\n  Typography,\n} from 'antd';\nimport AppTitle from '../../components/AppTitle';\nimport TextEditor from '../../components/TextEditor';\nimport HeadshotImage from '../layouts/HeadshotImage';\nimport PollSharingImage from './layouts/PollSharingImage';\nimport SocialPostingItem from './layouts/SocialPostingItem';\nimport AutomationCongrats from './layouts/AutomationCongrats';\n\nconst { Text, Title, Paragraph } = Typography;\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\n\nconst hostInfoFields = [\n  {\n    label: 'FULL NAME',\n    name: ['guest', 'fullName'],\n    rules: [{ required: true }],\n  },\n  {\n    label: 'CELL PHONE',\n    name: ['guest', 'phone'],\n  },\n  {\n    label: 'EMAIL ADDRESS',\n    name: ['guest', 'email'],\n    rules: [{ required: true }],\n  },\n  {\n    name: ['guest', 'about'],\n    label: 'BIO OR SOCIAL URL',\n  },\n  {\n    name: ['guest', 'jobTitle'],\n    label: 'JOB TITLE',\n  },\n  {\n    name: ['guest', 'organization'],\n    label: 'ORGANIZATION',\n  },\n];\n\nconst topicLabels = ['TOPIC OR STORY1', 'TOPIC OR STORY2'];\n\nconst pollInfoFields = [\n  {\n    name: 'hostSpeakerLabel',\n    label: 'YOUR SPEAKER LABEL',\n  },\n  {\n    name: 'guestSpeakerLabel',\n    label: 'THEIR SPEAKER LABEL',\n  },\n  {\n    name: 'hostOfferUrl',\n    label: 'YOUR REWARD URL',\n  },\n  {\n    name: 'guestOfferUrl',\n    label: 'THEIR REWARD URL',\n  },\n];\n\nconst getGuesUsertObj = (userObj = null) => {\n  return {\n    email: userObj?.email,\n    phone: userObj ? userObj.profile?.phone : '',\n    about: userObj ? userObj?.profile?.about : '',\n    picture: userObj ? userObj?.profile?.picture : '',\n    jobTitle: userObj ? userObj?.profile?.jobTitle : '',\n    organization: userObj ? userObj?.profile?.organization : '',\n    fullName: userObj ? `${userObj?.firstName} ${userObj?.lastName}` : '',\n  };\n};\n\nconst getPostSharingImageInfo = (obj) => {\n  const { logo, header = null, footer = null } = obj || {};\n\n  return {\n    logo,\n    headerText: (header && header?.text) || '',\n    headerBgColor: (header && header?.bgColor) || '#1677FF',\n    headerTextColor: (header && header.textColor) || '#FFFFFF',\n    footerText: (footer && footer?.text) || '',\n    footerBgColor: (footer && footer?.bgColor) || '#1677FF',\n    footerTextColor: (footer && footer?.textColor) || '#FFFFFF',\n  };\n};\n\nexport default function NewAutomation({ isGuestAcceptance = false }) {\n  const { id } = useParams();\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useAuthContext();\n\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const isNew = id === undefined; // new automation\n  const guestTypeValue = Form.useWatch('guestType', form);\n  const isSoloSession = guestTypeValue === SOLO_SESSION;\n  const { guest, error, isLoading, isPublished, isPublishing } = useSelector(\n    (state) => state.guests\n  );\n\n  const {\n    audio = null,\n    socials = [],\n    guest: guestUser,\n    pollImageSrc = '',\n    pollImageInfo = null,\n    hostOfferUrl = null,\n    guestOfferUrl = null,\n    recordingDate = null,\n    guestType = HOST_GUEST,\n    hostSpeakerLabel = '',\n    guestSpeakerLabel = '',\n    socialShareFileSrc = '',\n    potentialTopics = ['', ''],\n    startHostAutomation = false,\n    emailTemplate = {\n      subject: '[USER_FULLNAME] next steps',\n      body: `Hi [GUEST_FIRSTNAME], it's [USER_FULLNAME]. [CUSTOMIZE THE FOLLOWING PHRASING & REMOVE THIS RED TEXT: I'm looking forward to featuring you on my podcast, \"Branded Expert.\" Let's grow the audience even before we record. Here's how we'll increase your reach:\n      We should start building interest in what we'll talk about now itself. We don't have to finalize our talking points yet: Instead of guessing what others want to know from us... Let's ask them (using social media & email).\n      I chose 2 possible topics for our connections to vote on. They can even privately suggest their own topics for us.\n      I've already setup everything through a website called Upplaud. It'll post on our Facebook and LinkedIn, inviting our connections to vote. \n      It doesn't matter how active you are on social media: People on Facebook & LinkedIn love participating like this (and will even share you with others). We can even share our Upplaud through email, etc. \n      All you need to do is click the button below. Upplaud will post on our social media, inviting our connections to vote on the topics. (I've already connected my Facebook & LinkedIn.)\n      It only takes a few seconds to do. Thanks for doing it now: Every day counts to grow our audience interest. More time for more votes, more shares & more results.\n      The button to click is right below my name (be sure to save the Private Invite Password, since only you can connect & toggle your social media). I'm happy we're growing this together!\n      \n      Thanks, see you soon.\n      - [USER_FIRSTNAME]\n    `,\n    },\n  } = guest || {};\n  console.log('guest', guest);\n\n  // Default Socials Items\n  const defaultSocials = getSocialsItems(user?.socialAccounts || []);\n\n  useEffect(() => {\n    // Get files\n    dispatch(getFiles());\n\n    if (!isNew && id) dispatch(fetchGuest(id));\n\n    return () => dispatch(updateState({ guest: null }));\n  }, [isNew, id, dispatch]);\n\n  useEffect(() => {\n    guest && form.resetFields();\n\n    return () => form.resetFields();\n  }, [guest, form]);\n\n  useEffect(() => {\n    const { email, phone, about, picture, fullName } = getGuesUsertObj(\n      isSoloSession ? user : guestUser\n    );\n\n    form.setFieldsValue({ guest: { email, phone, about, picture, fullName } });\n  }, [user, guestUser, form, isSoloSession]);\n\n  // Handle Error\n  useEffect(() => {\n    if (error && error.status === 403) navigate('/403');\n\n    return () => dispatch(updateState({ error: null }));\n  }, [error, navigate, dispatch]);\n\n  const initialValues = {\n    guestType,\n    pollImageSrc,\n    hostOfferUrl,\n    emailTemplate,\n    guestOfferUrl,\n    potentialTopics,\n    hostSpeakerLabel,\n    guestSpeakerLabel,\n    socialShareFileSrc,\n    startHostAutomation,\n    audio: audio?._id || null,\n    audioDuration: audio?.duration || 0,\n    guest: getGuesUsertObj(guestUser),\n    socials: socials.length > 0 ? socials : defaultSocials,\n    pollSharingImage: getPostSharingImageInfo(pollImageInfo),\n    recordingDate: recordingDate ? dayjs(recordingDate, 'YYYY/MM/DD') : null,\n  };\n\n  const onFormSubmit = (status) => {\n    form\n      .validateFields()\n      .then((values) => {\n        values.status = status;\n        values.recordingDate = dayjs(values?.recordingDate).format();\n\n        if (isNew) {\n          dispatch(addGuest(values));\n        } else {\n          dispatch(updateGuest(id, values));\n        }\n      })\n      .catch(console.log);\n  };\n\n  const stepItems = [\n    {\n      title: 'Got your info',\n      className: 'pointer-none',\n      content: <span>current-user-details</span>,\n    },\n    {\n      title: 'Guest info',\n      content: (\n        <>\n          <Title level={5}>{getPollType(guestTypeValue)?.text}</Title>\n\n          {hostInfoFields.map(({ label, name, rules = null }) => (\n            <Form.Item key={label} name={name} label={label} rules={isSoloSession ? null : rules}>\n              <Input placeholder={label} disabled={isSoloSession} />\n            </Form.Item>\n          ))}\n\n          <Form.Item name={['guest', 'picture']} label=\"HEADSHOT IMAGE\" className=\"m-0\">\n            <HeadshotImage\n              picture={Form.useWatch(['guest', 'picture'], form)}\n              onChange={(picture) => form.setFieldValue(['guest', 'picture'], picture)}\n            />\n          </Form.Item>\n        </>\n      ),\n    },\n    {\n      title: 'Topics info',\n      content: (\n        <>\n          <Title level={5}>Automation Info</Title>\n\n          {topicLabels.map((label, index) => (\n            <Form.Item\n              key={index}\n              label={label}\n              rules={[{ required: true }]}\n              name={['potentialTopics', index]}\n            >\n              <Input placeholder={label} />\n            </Form.Item>\n          ))}\n\n          {pollInfoFields.map(({ name, label }, i) => {\n            return (\n              <Form.Item\n                key={label}\n                name={name}\n                label={label}\n                className={pollInfoFields.length - 1 === i ? 'm-0' : ''}\n              >\n                <Input placeholder={label} />\n              </Form.Item>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: 'Voter invites',\n      content: (\n        <>\n          <PollSharingImage />\n          <SocialPostingItem />\n        </>\n      ),\n    },\n    {\n      title: 'Guest invites',\n      content: (\n        <Row gutter={[24]}>\n          <Col span={18}>\n            <Title level={4} className=\"mt-0\">\n              Invite Email\n            </Title>\n\n            <Paragraph strong className=\"mb-1\">\n              Subject\n            </Paragraph>\n            <Form.Item name={['emailTemplate', 'subject']} wrapperCol={24}>\n              <Input placeholder=\"Subject\" />\n            </Form.Item>\n\n            <Paragraph strong className=\"mb-1\">\n              Body\n            </Paragraph>\n            <TextEditor\n              name={['emailTemplate', 'body']}\n              placeholder=\"Enter your text here...\"\n              formItemParams={{ className: 'm-0', wrapperCol: 24 }}\n            />\n          </Col>\n          <Col span={6}>\n            <Title level={5} className=\"mt-0\">\n              Short Codes\n            </Title>\n\n            <List\n              bordered\n              size=\"small\"\n              itemLayout=\"horizontal\"\n              renderItem={(item) => <List.Item>{item}</List.Item>}\n              dataSource={[\n                '[USER_FIRSTNAME]',\n                '[USER_LASTNAME]',\n                '[USER_FULLNAME]',\n                '[GUEST_FIRSTNAME]',\n                '[GUEST_LASTNAME]',\n                '[GUEST_FULLNAME]',\n              ]}\n            />\n          </Col>\n        </Row>\n      ),\n    },\n    {\n      title: 'UPPLAUD LAUNCH',\n      content: (\n        <>\n          <Form.Item\n            className=\"w-50 mt-4\"\n            name=\"recordingDate\"\n            label=\"Automation End Date\"\n            rules={[{ required: true }]}\n          >\n            <DatePicker\n              className=\"w-75 ml-0\"\n              disabledDate={(d) =>\n                d && (d < dayjs().subtract(1, 'day') || d > dayjs().add(1, 'years'))\n              }\n            />\n          </Form.Item>\n\n          <div className=\"flex-item\">\n            <Form.Item\n              className=\"m-0\"\n              valuePropName=\"checked\"\n              label=\"POSTING STARTS NOW\"\n              name=\"startHostAutomation\"\n              labelCol={{ span: 20 }}\n            >\n              <Switch disabled={isSoloSession} />\n            </Form.Item>\n            <Text type=\"secondary\" className=\"ml-1\">\n              Start when they starts\n            </Text>\n          </div>\n\n          <Space size={20} className=\"mt-4\">\n            <Button onClick={() => setCurrentStep((c) => c - 1)}>Back</Button>\n\n            <Button\n              loading={isLoading && !isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.DRAFT)}\n            >\n              SAVE DRAFT\n            </Button>\n            <Button\n              type=\"primary\"\n              loading={isLoading && isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.PUBLISHED)}\n            >\n              LAUNCH AUTOMATION\n            </Button>\n          </Space>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"automation-form\">\n      {!isGuestAcceptance && <AppTitle title={`${isNew ? 'New' : 'Update'} Automation`} />}\n\n      <div className=\"add-guest\">\n        <Title className=\"m-0\">NEW UPPLAUD AUTOMATION</Title>\n\n        {!isPublished && (\n          <Title level={5} className=\"fw-400\" type=\"secondary\">\n            Pull in more interest when your upplaud automation is posted automatically.\n          </Title>\n        )}\n      </div>\n\n      {!isPublished && (\n        <Form\n          form={form}\n          size=\"large\"\n          labelWrap={true}\n          labelAlign=\"left\"\n          layout=\"horizontal\"\n          // requiredMark={false}\n          labelCol={{ span: 7 }}\n          wrapperCol={{ span: 17 }}\n          initialValues={initialValues}\n        >\n          <Form.Item hidden name=\"pollImageSrc\" label=\"Poll Image\">\n            <Input placeholder=\"Poll Image\" />\n          </Form.Item>\n\n          <Form.Item hidden name=\"socialShareFileSrc\" label=\"Social Share File\">\n            <Input placeholder=\"Social Share File\" />\n          </Form.Item>\n\n          <Form.Item name=\"guestType\" className=\"mb-1\">\n            <Radio.Group options={pollTypeOptions} />\n          </Form.Item>\n\n          <Title level={4} className=\"mt-0\">\n            Quick Steps:\n          </Title>\n          <Steps current={currentStep} items={stepItems} onChange={setCurrentStep} />\n\n          {stepItems.map((item, index) => (\n            <div\n              key={index}\n              className=\"mt-2 mb-2\"\n              style={{ display: currentStep === index ? 'block' : 'none' }}\n            >\n              {item?.content}\n            </div>\n          ))}\n\n          {/* <div className=\"mt-2 mb-2\">{stepItems[currentStep]?.content}</div> */}\n\n          {currentStep !== stepItems.length - 1 && (\n            <div className=\"flex-item gap-1 flex-center\">\n              {currentStep < stepItems.length - 1 && (\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    // form\n                    //   .validateFields()\n                    //   .then(() => setCurrentStep((c) => c + 1))\n                    //   .catch(console.log);\n                    setCurrentStep((c) => c + 1);\n                  }}\n                >\n                  Next Step\n                </Button>\n              )}\n\n              {currentStep > 1 && (\n                <Button onClick={() => setCurrentStep((c) => c - 1)}>Back</Button>\n              )}\n            </div>\n          )}\n        </Form>\n      )}\n\n      {isPublished && (\n        <AutomationCongrats\n          guest={guest}\n          showActionBtns\n          onGoBack={() => dispatch(updateState({ isPublished: false }))}\n        />\n      )}\n    </div>\n  );\n}\n","import { Typography } from 'antd';\nimport PropTypes from 'prop-types';\n\nCopyText.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default function CopyText({ text = '', className = '', onCopy = () => {} }) {\n  return (\n    <div className={`p-1 br-5px bg-sky-6 border-sky-1 ${className}`}>\n      <Typography.Paragraph ellipsis copyable={{ onCopy }} className=\"m-0 flex-item space-between\">\n        {text}\n      </Typography.Paragraph>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { Modal, Button, Typography } from 'antd';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getFullS3Url } from '../../../config-global';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\nimport { SOCIAL_TITLES } from '../../../utils/types';\nimport { ArrowLeftOutlined, CheckOutlined, PlaySquareOutlined } from '@ant-design/icons';\nimport CopyText from '../../../components/CopyText';\n\nconst { Title } = Typography;\n\nexport default function AutomationCongrats({ guest, showActionBtns = false, onGoBack = () => {} }) {\n  const navigate = useNavigate();\n  const [openVideoPreview, setOpenVideoPreview] = useState(false);\n\n  const connectedSocials = (guest?.socials || []).reduce((acc, item) => {\n    if (!item || !item.isConnected) return acc;\n\n    const { type, subType } = item;\n\n    return [...acc, `${SOCIAL_TITLES[type]} ${subType}`];\n  }, []);\n\n  return (\n    <div className=\"mt-2 bg-F7F3F9 p-3 br-5px\">\n      <Title level={3}>👏 Congrats, your new Upplaud is ready to pull in new interest!</Title>\n      <Title level={5}>\n        Voters will be directed to:{' '}\n        <Link target=\"_blank\" to={`/vote/${guest?._id}`}>\n          Voting Page\n        </Link>\n      </Title>\n\n      <Title level={5}>You've connected:</Title>\n      <ul>\n        {connectedSocials.map((item, key) => (\n          <li key={key} className=\"capitalize\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n      <Title level={5}>\n        Preview your voter invitation video:{' '}\n        <Button\n          className=\"ml-1\"\n          icon={<PlaySquareOutlined />}\n          onClick={() => setOpenVideoPreview(true)}\n        >\n          Preview Video\n        </Button>\n      </Title>\n      <Title level={5} className=\"mb-1\">\n        Your guest will be invited to connect here:{' '}\n        <Link target=\"_blank\" to={`/guest-acceptance/${guest?._id}`}>\n          Guest Invitation Page\n        </Link>\n      </Title>\n      <Title level={5} className=\"mt-0\">\n        Their private invite password is:{' '}\n        <CopyText text={guest?.password} className=\"d-inline-block w-125px ml-1\" />\n      </Title>\n\n      <Title level={4}>\n        We'll start posting {'<when your guest connects their social media or> <later today!>'}\n      </Title>\n\n      {showActionBtns && (\n        <>\n          <Button\n            type=\"default\"\n            size=\"large\"\n            onClick={onGoBack}\n            icon={<ArrowLeftOutlined />}\n            // onClick={() => dispatch(updateState({ isPublished: false }))}\n          >\n            Go back to make any changes.\n          </Button>\n\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            className=\"d-block mt-2\"\n            icon={<CheckOutlined />}\n            onClick={() => navigate(PATH_DASHBOARD.dashboard.automations)}\n          >\n            CONFIRM YOUR NEW UPPLAUD & SEE YOUR OTHER AUTOMATIONS\n          </Button>\n        </>\n      )}\n\n      <Modal\n        centered\n        width={'50%'}\n        footer={false}\n        open={openVideoPreview}\n        title=\"Preview Video Invitation Post\"\n        onCancel={() => setOpenVideoPreview(false)}\n      >\n        <video\n          controls\n          style={{ width: '100%', height: 'auto' }}\n          src={getFullS3Url(guest?.socialShareFileSrc)}\n        />\n      </Modal>\n    </div>\n  );\n}\n","import ImgCrop from 'antd-img-crop';\nimport { useState } from 'react';\nimport { Spin, Upload, message } from 'antd';\nimport { uploadAndGetS3Path } from '../../reducers/fileSlice';\n\nexport default function CustomUpload({ onComplete, children, cropShape = 'round', aspect = 1 }) {\n  const [isUploading, setIsUploading] = useState(false);\n\n  const beforeUpload = (file) => {\n    if (!['image/png', 'image/jpg', 'image/jpeg'].includes(file.type.toLowerCase())) {\n      message.error('You can only upload JPG/PNG file!');\n      return false;\n    }\n\n    return true;\n  };\n\n  const props = {\n    name: 'file',\n    beforeUpload,\n    multiple: false,\n    showUploadList: false,\n    accept: '.png, .jpeg, .jpg',\n    customRequest: ({ file }) => {\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n        try {\n          setIsUploading(true);\n          const result = await uploadAndGetS3Path({ imageData: reader.result });\n          setIsUploading(false);\n          onComplete(result?.s3Path);\n        } catch (error) {\n          console.log(error);\n          setIsUploading(false);\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n  };\n\n  return (\n    <ImgCrop\n      showReset\n      rotationSlider\n      aspect={aspect}\n      modalOk=\"Upload\"\n      cropShape={cropShape}\n      fillColor=\"transparent\"\n      beforeCrop={beforeUpload}\n    >\n      <Upload {...props}>\n        <Spin spinning={isUploading}>{children}</Spin>\n      </Upload>\n    </ImgCrop>\n  );\n}\n","import { Button, Avatar } from 'antd';\nimport CustomUpload from './CustomUpload';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { getFullS3Url } from '../../config-global';\n\nexport default function HeadshotImage({ picture = '', onChange }) {\n  const pictureUrl = picture\n    ? picture.startsWith('http')\n      ? picture\n      : getFullS3Url(picture)\n    : null;\n\n  return (\n    <div className=\"flex-item\">\n      {pictureUrl && <Avatar size=\"large\" src={pictureUrl} />}\n\n      <CustomUpload onComplete={onChange}>\n        <Button icon={<UploadOutlined />}>Click to {pictureUrl ? 'Change' : 'Upload'}</Button>\n      </CustomUpload>\n    </div>\n  );\n}\n","import * as ExcelJS from 'exceljs';\nimport { GUEST_TYPE, SOCIAL_TITLES, SOCIAL_TYPE, SOCIAL_SUB_TYPE } from './types';\n\nconst { FACEBOOK } = SOCIAL_TYPE;\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\nconst { PROFILE, PAGE, GROUP } = SOCIAL_SUB_TYPE;\n\nconst colors = [\n  '##E91E63',\n  '#673AB7',\n  '#2196F3',\n  '#00BCD4',\n  '#FF9800',\n  '#8BC34A',\n  '#009688',\n  '#FF5722',\n  '#607D8B',\n  '#F44336',\n];\nexport const getRandomColor = () => colors[Math.floor(Math.random() * colors.length)];\n\nexport const getDateString = (timestamp) => new Date(timestamp).toDateString();\n\nexport const pollTypeOptions = [\n  { key: HOST_GUEST, value: HOST_GUEST, label: 'JOINT SESSION', text: 'Their Info' },\n  { key: SOLO_SESSION, value: SOLO_SESSION, label: 'SOLO SESSION', text: 'Your Info' },\n  // { key: GUEST_SPEAKER, value: GUEST_SPEAKER, label: \"I'M A GUEST SPEAKER\", text: 'Host Info' },\n];\n\nexport const getPollType = (key = HOST_GUEST) => pollTypeOptions.find((item) => item.key === key);\n\nexport const getSocialTitle = (type) => SOCIAL_TITLES[type];\n\nexport const getSocialLabel = (type, subType, subTypeName = '') => {\n  const title = getSocialTitle(type);\n\n  if (subType === PROFILE) {\n    return `YOUR ${title} PROFILE`;\n  } else if (subType === PAGE) {\n    return `YOUR ${title} PAGE: ${subTypeName}`;\n  } else if (subType === GROUP) {\n    return `YOUR ${title} GROUP: ${subTypeName}`;\n  }\n\n  return '';\n};\n\nexport const getSocialsItems = (socialAccounts = []) => {\n  return socialAccounts.reduce((items, item) => {\n    if (!item?.isConnected) return items;\n\n    const { type, socialId, page, group } = item;\n\n    const getSocialItem = (subType, subTypeId, subTypeName = '', frequency = 4) => {\n      return {\n        type,\n        subType,\n        frequency,\n        subTypeId,\n        subTypeName,\n        isActive: false,\n        _id: `${type}_${subType}`,\n        isConnected: (subTypeId || '').toString().length > 0,\n      };\n    };\n\n    const getSubTypeName = (item) =>\n      item?.accounts.find(({ id }) => id === item?.socialId)?.name || '';\n\n    const newItems = [\n      ...items,\n      getSocialItem(PROFILE, socialId),\n      getSocialItem(PAGE, page?.socialId, getSubTypeName(page)),\n    ];\n\n    return type === FACEBOOK\n      ? [...newItems, getSocialItem(GROUP, group?.socialId, getSubTypeName(page))]\n      : newItems;\n  }, []);\n};\n\n// download votes\nexport const downloadVotes = (votes) => {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet('Voting Data');\n\n  const { questionnaireAnswers = [] } = votes[0] || {};\n  const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n  sheet.columns = [\n    { header: 'Selected Topic', key: 'topic' },\n    { header: 'Voter Name', key: 'voter_name' },\n    { header: 'Voter Email', key: 'voter_email' },\n    { header: 'Voter Cell Phone', key: 'voter_cellphone' },\n    { header: 'User Suggested', key: 'isSuggestion' },\n    { header: 'Suggested Topic', key: 'suggested_topic' },\n    { header: 'Suggested Speaker', key: 'suggested_speaker' },\n    { header: `Question 1: ${quest1?.question}`, key: 'quest1' },\n    { header: `Question 2: ${quest2?.question}`, key: 'quest2' },\n    { header: 'Referral 1', key: 'quest2_referral1' },\n    { header: 'Referral 2', key: 'quest2_referral2' },\n    { header: 'Name', key: 'quest2_name' },\n    { header: 'Email', key: 'quest2_email' },\n    { header: `Question 3: ${quest3?.question}`, key: 'quest3' },\n    { header: `Question 4: ${quest4?.question}`, key: 'quest4' },\n    { header: 'Timestamp', key: 'timestamp' },\n  ];\n\n  votes.forEach((vote) => {\n    const { selectedTopic, voter, isSuggestion, suggestions, createdAt, questionnaireAnswers } =\n      vote;\n\n    const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n    sheet.addRow({\n      topic: selectedTopic?.topic || 'Other',\n      voter_name: voter?.name || '--',\n      voter_email: voter?.email || '--',\n      voter_cellphone: voter?.cell_phone || '--',\n      isSuggestion: isSuggestion ? 'Yes' : 'No',\n      suggested_topic: suggestions?.topic || '--',\n      suggested_speaker: suggestions?.speaker || '--',\n      quest1: quest1 ? quest1?.answers || '--' : '--',\n      quest2: quest2?.answers ? `Comment: ${quest2?.answers?.comment || '--'}` : '--',\n      quest2_referral1: quest2?.answers?.referral1 || '--',\n      quest2_referral2: quest2?.answers?.referral2 || '--',\n      quest2_name: quest2?.answers?.name || '--',\n      quest2_email: quest2?.answers?.email || '--',\n      quest3: quest3 ? quest3?.answers?.answer || '--' : '--',\n      quest4: quest4 ? (quest4?.doneSharing ? 'Yes' : 'No') : '--',\n      timestamp: new Date(createdAt).toLocaleString(),\n    });\n  });\n\n  workbook.xlsx.writeBuffer().then((buffer) => {\n    const blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'VotingData.xlsx';\n    a.click();\n  });\n};\n"],"names":["TextEditor","_ref","name","params","_objectWithoutProperties","_excluded","_jsx","Form","Item","_objectSpread","formItemParams","children","ReactQuill","theme","modules","toolbar","header","list","script","indent","direction","color","background","font","align","Paragraph","Typography","PollAudioRecord","form","useFormInstance","_useState","useState","blob","open","audioName","timeLeft","recorder","audioDuration","isRecording","recordingStartedAt","_useState2","_slicedToArray","state","setState","updateState","newState","prevState","dispatch","useDispatch","_useSelector","useSelector","files","isLoading","isUploading","audios","filter","_ref2","type","FILE_TYPE","AUDIO","getAudioFileName","localeTimeStr","Date","toLocaleString","replaceAll","concat","stopRecording","useCallback","window","interval","clearInterval","audioBlob","Blob","getBlob","stream","stop","Math","floor","now","onSaveRecording","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","wrap","_context","prev","next","FormData","append","uploadAudio","apply","arguments","useEffect","setInterval","_jsxs","_Fragment","hidden","className","label","Select","loading","disabled","placeholder","options","map","_ref4","_id","_ref4$duration","duration","value","onChange","_ref5","setFieldValue","Button","icon","PlusOutlined","onClick","Modal","centered","width","footer","maskClosable","title","onCancel","strong","Spin","spinning","tip","src","URL","createObjectURL","controls","Input","e","target","htmlType","navigator","mediaDevices","getUserMedia","audio","echoCancellation","then","recordObj","RecordRTC","bufferSize","sampleRate","audioBitsPerSecond","startRecording","seconds","minutes","remainingSeconds","secondsToMinutes","Simplebar","style","maxHeight","paddingRight","List","bordered","dataSource","renderItem","_ref6","i","actions","Popconfirm","okText","cancelText","onConfirm","deleteFile","description","danger","size","Meta","alignItems","Accordian","_ref$items","items","_ref$defaultActive","defaultActive","_ref$marginBottom","marginBottom","Collapse","defaultActiveKey","expandIcon","isActive","MinusOutlined","SuggestionModal","SimpleBar","item","index","Text","copyable","Option","Dragger","Upload","PollSharingImage","user","useAuthContext","useWatch","socialShareFileSrc","countdownTime","setCountdownTime","_useState3","_useState4","isGenerating","setIsGenerating","_useState5","_useState6","showSuggestions","setShowSuggestions","_useState7","_useState8","showAddManageImages","setShowAddManageImages","_useState9","_useState10","showPollImagePreview","setShowPollImagePreview","images","IMAGE","getFormName","TextColorFormItem","formType","rules","max","message","maxLength","suffix","Tooltip","QuestionCircleOutlined","ColorPicker","showText","onChangeComplete","metaColor","toHexString","onPollImageGenerateClick","_images$find","_user$profile","_user$profile2","formValues","guest","pollSharingImage","hostSpeakerLabel","guestSpeakerLabel","pollSharingImageInfo","_yield$generatePollIm","imageS3Path","videoS3Path","getFieldsValue","userLogo","picture","showLogo","find","logo","s3Path","host","fontColor","text","firstName","lastName","profile","organization","fullName","abrupt","notification","error","generatePollImage","sent","success","t0","console","finish","key","Avatar","getFullS3Url","marginLeft","height","uploadProps","multiple","showUploadList","accept","customRequest","_customRequest","_callee3","file","reader","_context3","FileReader","readAsDataURL","onload","_callee2","imageData","requestBody","_context2","result","split","uploadImages","_x","onDrop","log","dataTransfer","InboxOutlined","_ref8","avatar","destroyOnClose","closable","keyboard","Statistic","Countdown","format","onFinish","SocialPostingItem","socialItems","postingOptions","onChangeSet","field","_defineProperty","hasSocials","length","subType","_ref$subTypeName","subTypeName","frequency","isConnected","Checkbox","checked","getSocialLabel","defaultValue","minWidth","arrow","shape","InfoCircleOutlined","Alert","showIcon","fontWeight","Title","HOST_GUEST","GUEST_TYPE","SOLO_SESSION","hostInfoFields","required","topicLabels","pollInfoFields","getGuesUsertObj","_userObj$profile","_userObj$profile2","_userObj$profile3","_userObj$profile4","_userObj$profile5","userObj","undefined","email","phone","about","jobTitle","getPostSharingImageInfo","obj","_ref$header","_ref$footer","headerText","headerBgColor","bgColor","headerTextColor","textColor","footerText","footerBgColor","footerTextColor","NewAutomation","_getPollType","_ref2$isGuestAcceptan","isGuestAcceptance","id","useParams","_Form$useForm","useForm","navigate","useNavigate","currentStep","setCurrentStep","isNew","guestTypeValue","isSoloSession","guests","isPublished","isPublishing","_ref3$audio","_ref3$socials","socials","guestUser","_ref3$pollImageSrc","pollImageSrc","_ref3$pollImageInfo","pollImageInfo","_ref3$hostOfferUrl","hostOfferUrl","_ref3$guestOfferUrl","guestOfferUrl","_ref3$recordingDate","recordingDate","_ref3$guestType","guestType","_ref3$hostSpeakerLabe","_ref3$guestSpeakerLab","_ref3$socialShareFile","_ref3$potentialTopics","potentialTopics","_ref3$startHostAutoma","startHostAutomation","_ref3$emailTemplate","emailTemplate","subject","body","defaultSocials","getSocialsItems","socialAccounts","getFiles","fetchGuest","resetFields","_getGuesUsertObj","setFieldsValue","status","initialValues","dayjs","onFormSubmit","validateFields","values","addGuest","updateGuest","catch","stepItems","content","level","getPollType","_ref4$rules","HeadshotImage","Row","gutter","Col","span","wrapperCol","itemLayout","DatePicker","disabledDate","d","subtract","add","valuePropName","labelCol","Switch","Space","c","POLL_STATUS","DRAFT","PUBLISHED","AppTitle","labelWrap","labelAlign","layout","Radio","pollTypeOptions","Steps","current","display","AutomationCongrats","showActionBtns","onGoBack","CopyText","_ref$text","_ref$className","_ref$onCopy","onCopy","ellipsis","_ref$showActionBtns","_ref$onGoBack","openVideoPreview","setOpenVideoPreview","connectedSocials","reduce","acc","_toConsumableArray","SOCIAL_TITLES","Link","to","PlaySquareOutlined","password","ArrowLeftOutlined","CheckOutlined","PATH_DASHBOARD","dashboard","automations","CustomUpload","onComplete","_ref$cropShape","cropShape","_ref$aspect","aspect","setIsUploading","beforeUpload","includes","toLowerCase","props","onloadend","uploadAndGetS3Path","ImgCrop","showReset","rotationSlider","modalOk","fillColor","beforeCrop","_ref$picture","pictureUrl","startsWith","UploadOutlined","FACEBOOK","SOCIAL_TYPE","PROFILE","SOCIAL_SUB_TYPE","PAGE","GROUP","colors","getRandomColor","random","getDateString","timestamp","toDateString","getSocialTitle","socialId","page","group","getSocialItem","subTypeId","toString","getSubTypeName","_item$accounts$find","accounts","newItems","downloadVotes","votes","workbook","ExcelJS","sheet","addWorksheet","_ref2$questionnaireAn","questionnaireAnswers","_questionnaireAnswers","quest1","quest2","quest3","quest4","columns","question","forEach","vote","_quest2$answers","_quest2$answers2","_quest2$answers3","_quest2$answers4","_quest2$answers5","_quest3$answers","selectedTopic","voter","isSuggestion","suggestions","createdAt","_questionnaireAnswers2","addRow","topic","voter_name","voter_email","voter_cellphone","cell_phone","suggested_topic","suggested_speaker","speaker","answers","comment","quest2_referral1","referral1","quest2_referral2","referral2","quest2_name","quest2_email","answer","doneSharing","xlsx","writeBuffer","buffer","url","a","document","createElement","href","download","click"],"sourceRoot":""}