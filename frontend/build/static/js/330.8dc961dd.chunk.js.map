{"version":3,"file":"static/js/330.8dc961dd.chunk.js","mappings":"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","sources":["components/Accordian.js","components/TextEditor.js","pages/dashboard/layouts/PollAudioRecord.js","pages/layouts/SuggestionModal.js","pages/dashboard/layouts/PollSharingImage.js","pages/dashboard/NewAutomation.js","components/CopyText.js","pages/dashboard/layouts/PreviewAutomationVideo.js","pages/dashboard/layouts/AutomationCongrats.js","pages/dashboard/layouts/SocialPostingItem.js","pages/layouts/CustomUpload.js","pages/layouts/HeadshotImage.js","utils/common.js"],"sourcesContent":["import { Collapse } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\n\nexport default function Accordian({ items = [], defaultActive = '', marginBottom = true }) {\n  return (\n    <Collapse\n      items={items}\n      bordered={false}\n      className={`bg-F7F3F9 ${marginBottom ? 'mb-2' : ''}`}\n      defaultActiveKey={defaultActive ? [defaultActive] : []}\n      expandIcon={({ isActive }) => (isActive ? <MinusOutlined /> : <PlusOutlined />)}\n    />\n  );\n}\n","import { Form } from 'antd';\nimport ReactQuill from 'react-quill';\n\nexport default function TextEditor({ name, ...params }) {\n  const toolbarOptions = [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n    ['link', 'image'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n  ];\n\n  return (\n    <Form.Item name={name} {...params?.formItemParams}>\n      <ReactQuill theme=\"snow\" modules={{ toolbar: toolbarOptions }} {...params} />\n    </Form.Item>\n  );\n}\n","import RecordRTC from 'recordrtc';\nimport Simplebar from 'simplebar-react';\nimport { isMobile } from 'react-device-detect';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { FILE_TYPE } from '../../../utils/types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useEffect, useState } from 'react';\nimport { uploadAudio, deleteFile } from '../../../reducers/fileSlice';\nimport { Spin, List, Form, Input, Button, Typography, Modal, Select, Popconfirm } from 'antd';\n\nconst { Paragraph } = Typography;\n\nexport default function PollAudioRecord() {\n  const form = Form.useFormInstance();\n  const [state, setState] = useState({\n    blob: null,\n    open: false,\n    audioName: '',\n    timeLeft: 120,\n    recorder: null,\n    audioDuration: 0,\n    isRecording: false,\n    recordingStartedAt: null,\n  });\n\n  const updateState = (newState) => setState((prevState) => ({ ...prevState, ...newState }));\n\n  const {\n    blob,\n    open,\n    audioName,\n    timeLeft,\n    audioDuration,\n    recorder,\n    isRecording,\n    recordingStartedAt,\n  } = state;\n\n  // Redux States\n  const dispatch = useDispatch();\n  const { files, isLoading, isUploading } = useSelector(({ files }) => files);\n  const audios = files.filter(({ type }) => type === FILE_TYPE.AUDIO);\n\n  const getAudioFileName = () => {\n    const localeTimeStr = new Date()\n      .toLocaleString()\n      .replaceAll(',', '')\n      .replaceAll(':', '')\n      .replaceAll('/', '')\n      .replaceAll(' ', '_');\n    return `Recording_${localeTimeStr}.webm`;\n  };\n\n  // Start Recording\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({ audio: { echoCancellation: true } }).then((stream) => {\n      const recordObj = new RecordRTC(stream, {\n        type: 'audio',\n        bufferSize: 4096,\n        sampleRate: 44100,\n        audioBitsPerSecond: 128000,\n      });\n      recordObj.stream = stream;\n      recordObj.startRecording();\n      updateState({ isRecording: true, recorder: recordObj, recordingStartedAt: Date.now() });\n    });\n  };\n\n  // Stop Recording\n  const stopRecording = useCallback(() => {\n    if (window.interval) clearInterval(window.interval);\n\n    recorder.stopRecording(() => {\n      const audioBlob = new Blob([recorder.getBlob()], { type: 'audio/webm' });\n      recorder.stream.stop();\n\n      const audioDuration = Math.floor((Date.now() - recordingStartedAt) / 1000);\n\n      updateState({\n        audioDuration,\n        recorder: null,\n        blob: audioBlob,\n        isRecording: false,\n        audioName: getAudioFileName(),\n      });\n    });\n  }, [recorder, recordingStartedAt]);\n\n  // Save Recording\n  const onSaveRecording = async () => {\n    const formData = new FormData();\n    formData.append('duration', audioDuration);\n    formData.append('audio', blob, audioName || getAudioFileName());\n\n    dispatch(uploadAudio(formData));\n    updateState({ blob: null, audioName: '' });\n  };\n\n  useEffect(() => {\n    if (recordingStartedAt) {\n      window.interval = setInterval(() => {\n        const timeLeft = 120 - Math.floor((Date.now() - recordingStartedAt) / 1000);\n        if (timeLeft <= 0) stopRecording();\n        else updateState({ timeLeft });\n      }, 1000);\n    }\n  }, [recordingStartedAt, stopRecording]);\n\n  // Seconds to mm:ss\n  const secondsToMinutes = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes < 10 ? `0${minutes}` : minutes} :${\n      remainingSeconds < 10 ? `0${remainingSeconds}` : remainingSeconds\n    }`;\n  };\n\n  return (\n    <>\n      <Form.Item name=\"audioDuration\" hidden />\n\n      <div className={`flex-item gap-2 mb-2 ${isMobile && 'flex-column'}`}>\n        <Form.Item name=\"audio\" label=\"Audio\" className={`m-0 ${isMobile ? 'w-100' : 'w-40'}`}>\n          <Select\n            loading={isLoading}\n            disabled={isLoading}\n            className=\"minw-200px\"\n            placeholder=\"Select an Audio\"\n            options={audios.map(({ _id, name, duration = 0 }) => ({\n              label: name,\n              value: _id,\n              duration,\n            }))}\n            onChange={(value, { duration }) => form.setFieldValue('audioDuration', duration)}\n          />\n        </Form.Item>\n\n        <Button type=\"link\" icon={<PlusOutlined />} onClick={() => updateState({ open: true })}>\n          ADD/MANAGE AUDIOS\n        </Button>\n      </div>\n\n      <Modal\n        centered\n        open={open}\n        footer={false}\n        maskClosable={false}\n        title=\"Add/Manage Audios\"\n        width={isMobile ? '100%' : 600}\n        onCancel={() => updateState({ blob: null, open: false })}\n      >\n        <Paragraph strong className=\"m-0\">\n          Record New Audio\n        </Paragraph>\n        <Paragraph type=\"secondary\">\n          Max 2 minutes. The recording will auto stop after two minutes.\n        </Paragraph>\n        <Spin spinning={isLoading} tip=\"Uploading...\">\n          <audio src={blob ? URL.createObjectURL(blob) : ''} controls className=\"w-100 mb-1\" />\n\n          {blob && (\n            <Form.Item label=\"File Name (Optional)\">\n              <Input\n                value={audioName}\n                disabled={isRecording}\n                placeholder=\"Enter file name\"\n                onChange={(e) => updateState({ audioName: e.target.value })}\n              />\n            </Form.Item>\n          )}\n\n          <div className={`flex-item gap-1 mb-1 ${isMobile && 'flex-column'}`}>\n            <Button\n              block={isMobile}\n              htmlType=\"button\"\n              onClick={startRecording}\n              loading={isRecording}\n            >\n              {isRecording ? (\n                <>\n                  Recording... <span>{secondsToMinutes(timeLeft)}</span>{' '}\n                </>\n              ) : (\n                'Start Recording'\n              )}\n            </Button>\n\n            <Button\n              block={isMobile}\n              htmlType=\"button\"\n              onClick={stopRecording}\n              disabled={!isRecording}\n            >\n              Stop Recording\n            </Button>\n\n            <Button\n              block={isMobile}\n              type=\"primary\"\n              htmlType=\"button\"\n              loading={isUploading}\n              onClick={onSaveRecording}\n              disabled={!blob || isRecording}\n            >\n              Save Recording\n            </Button>\n          </div>\n        </Spin>\n\n        <Simplebar style={{ maxHeight: 420, paddingRight: 10 }}>\n          <List\n            size=\"small\"\n            footer={false}\n            bordered={false}\n            loading={isLoading}\n            dataSource={audios}\n            header=\"Available Audios\"\n            renderItem={({ _id, name }, i) => (\n              <List.Item\n                className=\"pl-0 pr-0\"\n                actions={[\n                  <Popconfirm\n                    key=\"delete\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Delete\"\n                    onConfirm={() => dispatch(deleteFile(_id))}\n                    description=\"Are you sure to delete this Audio?\"\n                  >\n                    <Button danger size=\"small\">\n                      Delete\n                    </Button>\n                  </Popconfirm>,\n                ]}\n              >\n                <List.Item.Meta title={`${i + 1}. ${name}`} style={{ alignItems: 'center' }} />\n              </List.Item>\n            )}\n          />\n        </Simplebar>\n      </Modal>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport SimpleBar from 'simplebar-react';\nimport { Modal, List, Typography } from 'antd';\n\nSuggestionModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nexport default function SuggestionModal({ open, onCancel }) {\n  const suggestions = [\n    'BENEFIT TO VOTER:',\n    'Learn 3 mistakes to avoid...',\n    'Hear the juicy details',\n    'Ask Anything & Hear The Answer',\n    'Make our podcast perfect for you...',\n    'Have us discuss what you want to know',\n    'Hear some step by step instructions',\n    'Get free help from our guest speaker',\n  ];\n\n  return (\n    <Modal centered open={open} footer={false} title=\"Suggestions\" onCancel={onCancel}>\n      <SimpleBar style={{ maxHeight: 'calc(100vh - 200px)', paddingRight: 10 }}>\n        <List\n          size=\"small\"\n          header={false}\n          footer={false}\n          bordered={false}\n          dataSource={suggestions}\n          renderItem={(item, index) => (\n            <List.Item className=\"pl-0 pr-0\">\n              {index + 1}. <Typography.Text copyable>{item}</Typography.Text>\n            </List.Item>\n          )}\n        />\n      </SimpleBar>\n    </Modal>\n  );\n}\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { FILE_TYPE } from '../../../utils/types';\nimport { getFullS3Url } from '../../../config-global';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuthContext } from '../../../auth/AuthProvider';\nimport { deleteFile, uploadImages, generatePollImage } from '../../../reducers/fileSlice';\nimport {\n  List,\n  Form,\n  Spin,\n  Modal,\n  Select,\n  Button,\n  Input,\n  Avatar,\n  Upload,\n  Tooltip,\n  Statistic,\n  Typography,\n  Popconfirm,\n  ColorPicker,\n  notification,\n} from 'antd';\nimport { PlusOutlined, InboxOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport Simplebar from 'simplebar-react';\nimport PollAudioRecord from './PollAudioRecord';\nimport Accordian from '../../../components/Accordian';\n// import CustomUpload from '../../layouts/CustomUpload';\nimport SuggestionModal from '../../layouts/SuggestionModal';\n\nconst { Option } = Select;\nconst { Dragger } = Upload;\nconst { Text, Paragraph } = Typography;\n\nexport default function PollSharingImage() {\n  const { user } = useAuthContext();\n\n  const form = Form.useFormInstance();\n  const audioDuration = Form.useWatch('audioDuration', form);\n  const socialShareFileSrc = Form.useWatch('socialShareFileSrc', form);\n\n  // Local States\n  const [countdownTime, setCountdownTime] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [showAddManageImages, setShowAddManageImages] = useState(false);\n  const [showPollImagePreview, setShowPollImagePreview] = useState(false);\n\n  // Redux States\n  const dispatch = useDispatch();\n  const { files, isLoading, isUploading } = useSelector((state) => state.files);\n  const images = files.filter(({ type }) => type === FILE_TYPE.IMAGE);\n\n  const getFormName = (name) => ['pollSharingImage', name];\n\n  const TextColorFormItem = ({ label, title, formType }) => {\n    return (\n      <div className={`flex-item gap-2 mb-2 ${isMobile && 'flex-column full-width-cols'}`}>\n        <Form.Item\n          label={label}\n          name={getFormName(`${formType}Text`)}\n          className={isMobile ? 'w-100' : 'w-40 m-0'}\n          rules={[{ max: 45, message: 'Maximum 45 character are allowed.' }]}\n        >\n          <Input\n            maxLength={45}\n            placeholder=\"Enter the text here\"\n            suffix={\n              <Tooltip title=\"Show Suggestions\">\n                <Button\n                  type=\"text\"\n                  size=\"small\"\n                  icon={<QuestionCircleOutlined />}\n                  onClick={() => setShowSuggestions(true)}\n                />\n              </Tooltip>\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} BG COLOR`}\n          name={getFormName(`${formType}BgColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}BgColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} TEXT COLOR`}\n          name={getFormName(`${formType}TextColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}TextColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n      </div>\n    );\n  };\n\n  const onPollImageGenerateClick = async () => {\n    const formValues = form.getFieldsValue();\n\n    const { audio, guest, pollSharingImage, hostSpeakerLabel, guestSpeakerLabel } = formValues;\n\n    // user logo\n    const pollSharingImageInfo = {\n      ...pollSharingImage,\n      audio,\n      userLogo: guest?.picture || '',\n      showLogo: images.find(({ _id }) => _id === pollSharingImage.logo)?.s3Path,\n      host: {\n        fontColor: '#000000',\n        label: hostSpeakerLabel,\n        text: `${user.firstName} ${user.lastName} ${\n          user?.profile?.organization ? `(${user?.profile?.organization})` : ''\n        }`,\n      },\n      guest: {\n        fontColor: '#000000',\n        label: guestSpeakerLabel,\n        text: `${guest.fullName} ${guest.organization ? `(${guest.organization})` : ''}`,\n      },\n    };\n\n    if (!pollSharingImageInfo.userLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please upload your headshot image first.',\n      });\n    } else if (!pollSharingImageInfo.showLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please select a logo image',\n      });\n    }\n\n    setIsGenerating(true);\n    setCountdownTime(audioDuration || 60);\n\n    try {\n      const { imageS3Path, videoS3Path } = await generatePollImage(pollSharingImageInfo);\n\n      form.setFieldValue('pollImageSrc', imageS3Path);\n      if (videoS3Path) form.setFieldValue('socialShareFileSrc', videoS3Path);\n\n      notification.success({\n        message: 'Success',\n        description: 'Automation sharing image generated successfully',\n      });\n    } catch (error) {\n      console.error(error);\n      notification.error({\n        message: 'Error',\n        description: 'Something went wrong',\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const items = [\n    {\n      key: 'pollSharingImage',\n      label: 'Customize Automation Sharing Image',\n      children: (\n        <>\n          <div className={`flex-item gap-2 mb-2 ${isMobile && 'flex-column'}`}>\n            <Form.Item\n              label=\"LOGO IMAGE FROM\"\n              name={getFormName('logo')}\n              className={`m-0 ${isMobile ? 'w-100' : 'w-40'}`}\n            >\n              <Select\n                loading={isLoading}\n                disabled={isLoading}\n                className=\"minw-200px\"\n                placeholder=\"Select an Image\"\n              >\n                {images.map(({ _id, name, s3Path }) => (\n                  <Option key={_id} value={_id}>\n                    <Avatar src={getFullS3Url(s3Path)} size={32} />\n                    <Text style={{ marginLeft: 5 }}>{name}</Text>\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n            <Button\n              type=\"link\"\n              block={isMobile}\n              icon={<PlusOutlined />}\n              onClick={() => setShowAddManageImages(true)}\n            >\n              ADD/MANAGE IMAGES\n            </Button>\n          </div>\n\n          <TextColorFormItem label=\"HEADLINE HOOK\" title=\"HEADLINE\" formType=\"header\" />\n          <TextColorFormItem label=\"FOOTER BENEFIT\" title=\"FOOTER\" formType=\"footer\" />\n\n          <PollAudioRecord name={getFormName('audio')} />\n\n          <div className={`flex-item gap-2 mt-4 ${isMobile && 'flex-column'}`}>\n            <Button\n              danger\n              type=\"primary\"\n              block={isMobile}\n              loading={isGenerating}\n              onClick={onPollImageGenerateClick}\n            >\n              Generate Video Invitation Post\n            </Button>\n            {/* <CustomUpload\n              cropShape=\"rect\"\n              aspect={1.91 / 1}\n              onComplete={(value) => form.setFieldValue('pollImageSrc', value)}\n            >\n              <Button type=\"primary\">UPLOAD YOUR OWN</Button>\n            </CustomUpload> */}\n\n            <Button\n              type=\"default\"\n              block={isMobile}\n              disabled={!socialShareFileSrc}\n              onClick={() => setShowPollImagePreview(true)}\n            >\n              Preview Video Invitation Post\n            </Button>\n\n            {/* <Image\n              style={{ display: 'none' }}\n              src={getFullS3Url(pollImageSrc)}\n              preview={{\n                visible: showPollImagePreview,\n                onVisibleChange: (value) => setShowPollImagePreview(value),\n              }}\n            /> */}\n            <Modal\n              centered\n              footer={false}\n              open={showPollImagePreview}\n              width={isMobile ? '100%' : '50%'}\n              title=\"Preview Video Invitation Post\"\n              onCancel={() => setShowPollImagePreview(false)}\n            >\n              <video\n                controls\n                src={getFullS3Url(socialShareFileSrc)}\n                style={{ width: '100%', height: 'auto' }}\n              />\n            </Modal>\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  const uploadProps = {\n    name: 'file',\n    multiple: true,\n    showUploadList: false,\n    accept: '.png, .gif, .jpeg, .jpg',\n    customRequest: async ({ file }) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = async () => {\n        const imageData = reader.result.split(',')[1];\n        const requestBody = {\n          images: [\n            {\n              name: file.name,\n              imageData: `data:${file.type};base64,${imageData}`,\n            },\n          ],\n        };\n        dispatch(uploadImages(requestBody));\n      };\n    },\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    },\n  };\n\n  return (\n    <>\n      <Accordian items={items} defaultActive=\"pollSharingImage\" />\n\n      <SuggestionModal open={showSuggestions} onCancel={() => setShowSuggestions(false)} />\n\n      <Modal\n        centered\n        footer={false}\n        title=\"Add/Manage Images\"\n        open={showAddManageImages}\n        onCancel={() => setShowAddManageImages(false)}\n      >\n        <Paragraph>Add New Image</Paragraph>\n        <Spin spinning={isUploading} tip=\"Uploading...\">\n          <Dragger {...uploadProps}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n            <p className=\"ant-upload-hint\">Supported file types: PNG/JPG/JPEG</p>\n          </Dragger>\n        </Spin>\n\n        <Simplebar style={{ maxHeight: 420, paddingRight: 10 }}>\n          <List\n            size=\"small\"\n            footer={false}\n            bordered={false}\n            loading={isLoading}\n            dataSource={images}\n            header=\"Available Images\"\n            renderItem={({ _id, name, s3Path }) => (\n              <List.Item\n                actions={[\n                  <Popconfirm\n                    key=\"delete\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Delete Image\"\n                    onConfirm={() => dispatch(deleteFile(_id))}\n                    description=\"Are you sure to delete this image?\"\n                  >\n                    <Button danger size=\"small\">\n                      Delete\n                    </Button>\n                  </Popconfirm>,\n                ]}\n                className=\"pl-0 pr-0\"\n              >\n                <List.Item.Meta\n                  title={name}\n                  style={{ alignItems: 'center' }}\n                  avatar={<Avatar src={getFullS3Url(s3Path)} />}\n                />\n              </List.Item>\n            )}\n          />\n        </Simplebar>\n      </Modal>\n\n      <Modal\n        centered\n        footer={false}\n        destroyOnClose\n        closable={false}\n        keyboard={false}\n        open={isGenerating}\n        maskClosable={false}\n        title=\"Video is getting Generated...\"\n      >\n        <Paragraph className=\"mt-2\">\n          Please wait while we generate your video. This may take a few minutes.\n        </Paragraph>\n\n        <Statistic.Countdown\n          format=\"mm:ss\"\n          title=\"Estimated Time:\"\n          className=\"text-center wait-countdown\"\n          value={Date.now() + countdownTime * 3 * 1000}\n          onFinish={() => setCountdownTime(audioDuration || 60)}\n        />\n      </Modal>\n    </>\n  );\n}\n","import dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { getFiles } from '../../reducers/fileSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAuthContext } from '../../auth/AuthProvider';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { GUEST_TYPE, POLL_STATUS } from '../../utils/types';\nimport { pollTypeOptions, getPollType, getSocialsItems } from '../../utils/common';\nimport { addGuest, fetchGuest, updateGuest, updateState } from '../../reducers/guestsSlice';\nimport {\n  Row,\n  Col,\n  List,\n  Form,\n  Space,\n  Input,\n  Radio,\n  Steps,\n  Button,\n  Switch,\n  DatePicker,\n  Typography,\n} from 'antd';\nimport AppTitle from '../../components/AppTitle';\nimport TextEditor from '../../components/TextEditor';\nimport HeadshotImage from '../layouts/HeadshotImage';\nimport PollSharingImage from './layouts/PollSharingImage';\nimport SocialPostingItem from './layouts/SocialPostingItem';\nimport AutomationCongrats from './layouts/AutomationCongrats';\n\nconst { Text, Title, Paragraph } = Typography;\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\n\nconst hostInfoFields = [\n  {\n    label: 'FULL NAME',\n    name: ['guest', 'fullName'],\n    rules: [{ required: true }],\n  },\n  {\n    label: 'CELL PHONE',\n    name: ['guest', 'phone'],\n  },\n  {\n    label: 'EMAIL ADDRESS',\n    name: ['guest', 'email'],\n    rules: [{ required: true }],\n  },\n  {\n    name: ['guest', 'about'],\n    label: 'BIO OR SOCIAL URL',\n  },\n  {\n    name: ['guest', 'jobTitle'],\n    label: 'JOB TITLE',\n  },\n  {\n    name: ['guest', 'organization'],\n    label: 'ORGANIZATION',\n  },\n];\n\nconst topicLabels = ['TOPIC OR STORY1', 'TOPIC OR STORY2'];\n\nconst pollInfoFields = [\n  {\n    name: 'hostSpeakerLabel',\n    label: 'YOUR SPEAKER LABEL',\n  },\n  {\n    name: 'guestSpeakerLabel',\n    label: 'THEIR SPEAKER LABEL',\n  },\n  {\n    name: 'hostOfferUrl',\n    label: 'YOUR REWARD URL',\n  },\n  {\n    name: 'guestOfferUrl',\n    label: 'THEIR REWARD URL',\n  },\n  {\n    required: true,\n    name: 'presentationName',\n    label: 'Name of presentation or podcast',\n  },\n];\n\nconst getGuesUsertObj = (userObj = null) => {\n  return {\n    email: userObj?.email,\n    phone: userObj ? userObj.profile?.phone : '',\n    about: userObj ? userObj?.profile?.about : '',\n    picture: userObj ? userObj?.profile?.picture : '',\n    jobTitle: userObj ? userObj?.profile?.jobTitle : '',\n    organization: userObj ? userObj?.profile?.organization : '',\n    fullName: userObj ? `${userObj?.firstName} ${userObj?.lastName}` : '',\n  };\n};\n\nconst getPostSharingImageInfo = (obj) => {\n  const { logo, header = null, footer = null } = obj || {};\n\n  return {\n    logo,\n    headerText: (header && header?.text) || '',\n    headerBgColor: (header && header?.bgColor) || '#1677FF',\n    headerTextColor: (header && header.textColor) || '#FFFFFF',\n    footerText: (footer && footer?.text) || '',\n    footerBgColor: (footer && footer?.bgColor) || '#1677FF',\n    footerTextColor: (footer && footer?.textColor) || '#FFFFFF',\n  };\n};\n\nexport default function NewAutomation({ isGuestAcceptance = false }) {\n  const { id } = useParams();\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useAuthContext();\n\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const isNew = id === undefined; // new automation\n  const guestTypeValue = Form.useWatch('guestType', form);\n  const isSoloSession = guestTypeValue === SOLO_SESSION;\n  const { guest, error, isLoading, isPublished, isPublishing } = useSelector(\n    (state) => state.guests\n  );\n\n  const {\n    _id = null,\n    audio = null,\n    socials = [],\n    guest: guestUser,\n    pollImageSrc = '',\n    pollImageInfo = null,\n    hostOfferUrl = null,\n    guestOfferUrl = null,\n    recordingDate = null,\n    presentationName = '',\n    guestType = HOST_GUEST,\n    hostSpeakerLabel = '',\n    guestSpeakerLabel = '',\n    socialShareFileSrc = '',\n    potentialTopics = ['', ''],\n    startHostAutomation = false,\n    emailTemplate = {\n      subject: '[PRESENTATION_NAME] NEXT STEPS',\n      body: `<blockquote>Hi [GUEST_FIRSTNAME], it's [USER_FULLNAME]. (To reach me, please reply all.) I use Upplaud to grow my audience; you can use it at no cost to reach more people too:</blockquote><blockquote>Can we post on our LinkedIn &amp; Facebook about [PODCAST / PRESENTATION NAME] before we do it? Upplaud makes it easy &amp; engaging. (See your private link &amp; password at the end.)</blockquote><blockquote>Here's how Upplaud grows our audience:</blockquote><blockquote>Instead of guessing what others want to know from both of us... Let's ask them! I chose 2 possible topics for our connections to vote on. They can even suggest their own topics privately.</blockquote><blockquote>I've already setup everything, including voting invitation posts for our Facebook &amp; LinkedIn. (It doesn't matter how active you are: Influencers on social media love engaging like this, and will share you with more people!)</blockquote><blockquote>We can also share our Upplaud voting page through email &amp; elsewhere. All you need to do is click the Grow Audience link below. It only takes a few seconds to connect your LinkedIn and/or Facebook to Upplaud. (I've connected mine already.)</blockquote><blockquote>Thanks for doing this now (and not procrastinating!) Every day counts to grow our audience: More time for more votes, more shares &amp; more results.</blockquote><blockquote>The link to click is below my name (be sure to reference your Private Password, to securely connect your social media). I'm excited to grow together.</blockquote><blockquote><br></blockquote><blockquote>Thanks again, see you soon. - [USER_FIRSTNAME]</blockquote><p><br></p>`,\n    },\n  } = guest || {};\n\n  // Default Socials Items\n  const defaultSocials = getSocialsItems(user?.socialAccounts || []);\n\n  useEffect(() => {\n    // Get files\n    dispatch(getFiles());\n\n    if (!isNew && id) dispatch(fetchGuest(id));\n\n    if (isNew) dispatch(updateState({ guest: null, isPublished: false }));\n\n    return () => dispatch(updateState({ guest: null }));\n  }, [isNew, id, dispatch]);\n\n  useEffect(() => {\n    guest && form.resetFields();\n\n    return () => form.resetFields();\n  }, [guest, form]);\n\n  useEffect(() => {\n    const { email, phone, about, picture, fullName } = getGuesUsertObj(\n      isSoloSession ? user : guestUser\n    );\n\n    form.setFieldsValue({ guest: { email, phone, about, picture, fullName } });\n  }, [user, guestUser, form, isSoloSession]);\n\n  // Handle Error\n  useEffect(() => {\n    if (error && error.status === 403) navigate('/403');\n\n    return () => dispatch(updateState({ error: null }));\n  }, [error, navigate, dispatch]);\n\n  const initialValues = {\n    guestType,\n    pollImageSrc,\n    hostOfferUrl,\n    emailTemplate,\n    guestOfferUrl,\n    potentialTopics,\n    presentationName,\n    hostSpeakerLabel,\n    guestSpeakerLabel,\n    socialShareFileSrc,\n    startHostAutomation,\n    audio: audio?._id || null,\n    audioDuration: audio?.duration || 0,\n    guest: getGuesUsertObj(guestUser),\n    socials: socials.length > 0 ? socials : defaultSocials,\n    pollSharingImage: getPostSharingImageInfo(pollImageInfo),\n    recordingDate: recordingDate ? dayjs(recordingDate, 'YYYY/MM/DD') : null,\n  };\n\n  const onFormSubmit = (status) => {\n    form\n      .validateFields()\n      .then((values) => {\n        values.status = status;\n        values.recordingDate = dayjs(values?.recordingDate).format();\n\n        if (isNew && !_id) {\n          dispatch(addGuest(values));\n        } else {\n          dispatch(updateGuest(id || _id, values));\n        }\n      })\n      .catch(console.log);\n  };\n\n  const stepItems = [\n    {\n      title: 'Got your info',\n      className: 'pointer-none',\n      content: <span>current-user-details</span>,\n    },\n    {\n      title: 'Guest info',\n      content: (\n        <>\n          <Title level={5}>{getPollType(guestTypeValue)?.text}</Title>\n\n          {hostInfoFields.map(({ label, name, rules = null }) => (\n            <Form.Item key={label} name={name} label={label} rules={isSoloSession ? null : rules}>\n              <Input placeholder={label} disabled={isSoloSession} />\n            </Form.Item>\n          ))}\n\n          <Form.Item name={['guest', 'picture']} label=\"HEADSHOT IMAGE\" className=\"m-0\">\n            <HeadshotImage\n              picture={Form.useWatch(['guest', 'picture'], form)}\n              onChange={(picture) => form.setFieldValue(['guest', 'picture'], picture)}\n            />\n          </Form.Item>\n        </>\n      ),\n    },\n    {\n      title: 'Topics info',\n      content: (\n        <>\n          <Title level={5}>Automation Info</Title>\n\n          {topicLabels.map((label, index) => (\n            <Form.Item\n              key={index}\n              label={label}\n              rules={[{ required: true }]}\n              name={['potentialTopics', index]}\n            >\n              <Input placeholder={label} />\n            </Form.Item>\n          ))}\n\n          {pollInfoFields.map(({ name, label, required = false }, i) => {\n            return (\n              <Form.Item\n                key={label}\n                name={name}\n                label={label}\n                rules={[{ required }]}\n                className={pollInfoFields.length - 1 === i ? 'm-0' : ''}\n              >\n                <Input placeholder={label} />\n              </Form.Item>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: 'Voter invites',\n      content: (\n        <>\n          <PollSharingImage />\n          <SocialPostingItem />\n        </>\n      ),\n    },\n    {\n      title: 'Guest invites',\n      content: (\n        <Row gutter={[24]}>\n          <Col span={isMobile ? 24 : 18}>\n            <Title level={4} className=\"mt-0\">\n              Invite Email\n            </Title>\n\n            <Paragraph strong className=\"mb-1\">\n              Subject\n            </Paragraph>\n            <Form.Item name={['emailTemplate', 'subject']} wrapperCol={24}>\n              <Input placeholder=\"Subject\" />\n            </Form.Item>\n\n            <Paragraph strong className=\"mb-1\">\n              Body\n            </Paragraph>\n            <TextEditor\n              name={['emailTemplate', 'body']}\n              placeholder=\"Enter your text here...\"\n              formItemParams={{ className: 'm-0', wrapperCol: 24 }}\n            />\n          </Col>\n          <Col span={isMobile ? 24 : 6}>\n            <Title level={5} className={isMobile ? 'mt-2' : 'mt-0'}>\n              Short Codes\n            </Title>\n\n            <List\n              bordered\n              size=\"small\"\n              itemLayout=\"horizontal\"\n              renderItem={(item) => <List.Item>{item}</List.Item>}\n              dataSource={[\n                '[USER_FIRSTNAME]',\n                '[USER_LASTNAME]',\n                '[USER_FULLNAME]',\n                '[GUEST_FIRSTNAME]',\n                '[GUEST_LASTNAME]',\n                '[GUEST_FULLNAME]',\n                '[PRESENTATION_NAME]',\n              ]}\n            />\n          </Col>\n        </Row>\n      ),\n    },\n    {\n      title: 'UPPLAUD LAUNCH',\n      content: (\n        <>\n          <Form.Item\n            name=\"recordingDate\"\n            label=\"Automation End Date\"\n            rules={[{ required: true }]}\n            className={isMobile ? 'w-100' : 'w-50 mt-4'}\n          >\n            <DatePicker\n              className={isMobile ? 'w-100' : 'w-75 ml-0'}\n              disabledDate={(d) =>\n                d && (d < dayjs().subtract(1, 'day') || d > dayjs().add(1, 'years'))\n              }\n            />\n          </Form.Item>\n\n          <div className=\"flex-item position-relative\">\n            <Form.Item\n              className=\"m-0\"\n              labelCol={{ span: 20 }}\n              valuePropName=\"checked\"\n              label=\"POSTING STARTS NOW\"\n              name=\"startHostAutomation\"\n            >\n              <Switch disabled={isSoloSession} />\n            </Form.Item>\n            <Text\n              type=\"secondary\"\n              className=\"ml-1\"\n              style={{ ...(isMobile && { left: 50, bottom: 10, position: 'absolute' }) }}\n            >\n              Start when they starts\n            </Text>\n          </div>\n\n          <Space\n            className=\"mt-4 w-100\"\n            size={isMobile ? 12 : 20}\n            direction={isMobile ? 'vertical' : 'horizontal'}\n          >\n            <Button block={isMobile} onClick={() => setCurrentStep((c) => c - 1)}>\n              Back\n            </Button>\n\n            <Button\n              block={isMobile}\n              loading={isLoading && !isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.DRAFT)}\n            >\n              SAVE DRAFT\n            </Button>\n            <Button\n              type=\"primary\"\n              block={isMobile}\n              loading={isLoading && isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.PUBLISHED)}\n            >\n              LAUNCH AUTOMATION\n            </Button>\n          </Space>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"automation-form\">\n      {!isGuestAcceptance && <AppTitle title={`${isNew ? 'New' : 'Update'} Automation`} />}\n\n      <div className=\"add-guest\">\n        <Title level={isMobile ? 3 : 1} className=\"m-0\">\n          NEW UPPLAUD AUTOMATION\n        </Title>\n\n        {!isPublished && (\n          <Title level={5} className=\"fw-400\" type=\"secondary\">\n            Pull in more interest when your upplaud automation is posted automatically.\n          </Title>\n        )}\n      </div>\n\n      {!isPublished && (\n        <Form\n          form={form}\n          size=\"large\"\n          labelWrap={true}\n          labelAlign=\"left\"\n          layout=\"horizontal\"\n          // requiredMark={false}\n          labelCol={{ span: 7 }}\n          wrapperCol={{ span: 17 }}\n          initialValues={initialValues}\n        >\n          <Form.Item hidden name=\"pollImageSrc\" label=\"Poll Image\">\n            <Input placeholder=\"Poll Image\" />\n          </Form.Item>\n\n          <Form.Item hidden name=\"socialShareFileSrc\" label=\"Social Share File\">\n            <Input placeholder=\"Social Share File\" />\n          </Form.Item>\n\n          <Form.Item name=\"guestType\" className=\"mb-1\">\n            <Radio.Group options={pollTypeOptions} />\n          </Form.Item>\n\n          <Title level={4} className=\"mt-0\">\n            Quick Steps:\n          </Title>\n          <Steps current={currentStep} items={stepItems} onChange={setCurrentStep} />\n\n          {stepItems.map((item, index) => (\n            <div\n              key={index}\n              className=\"mt-2 mb-2\"\n              style={{ display: currentStep === index ? 'block' : 'none' }}\n            >\n              {item?.content}\n            </div>\n          ))}\n\n          {/* <div className=\"mt-2 mb-2\">{stepItems[currentStep]?.content}</div> */}\n\n          {currentStep !== stepItems.length - 1 && (\n            <div className=\"flex-item gap-1 flex-center\">\n              {currentStep < stepItems.length - 1 && (\n                <Button\n                  block={isMobile}\n                  type=\"primary\"\n                  onClick={() => {\n                    // form\n                    //   .validateFields()\n                    //   .then(() => setCurrentStep((c) => c + 1))\n                    //   .catch(console.log);\n                    setCurrentStep((c) => c + 1);\n                  }}\n                >\n                  Next Step\n                </Button>\n              )}\n\n              {currentStep > 1 && (\n                <Button block={isMobile} onClick={() => setCurrentStep((c) => c - 1)}>\n                  Back\n                </Button>\n              )}\n            </div>\n          )}\n        </Form>\n      )}\n\n      {isPublished && (\n        <AutomationCongrats\n          guest={guest}\n          showActionBtns\n          onGoBack={() => dispatch(updateState({ isPublished: false }))}\n        />\n      )}\n    </div>\n  );\n}\n","import { Typography } from 'antd';\nimport PropTypes from 'prop-types';\n\nCopyText.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default function CopyText({ text = '', className = '', onCopy = () => {} }) {\n  return (\n    <div className={`p-1 br-5px bg-sky-6 border-sky-1 ${className}`}>\n      <Typography.Paragraph ellipsis copyable={{ onCopy }} className=\"m-0 flex-item space-between\">\n        {text}\n      </Typography.Paragraph>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { Modal, Typography } from 'antd';\nimport { isMobile } from 'react-device-detect';\nimport { getFullS3Url } from '../../../config-global';\n\nexport default function PreviewAutomationVideo({\n  text = '',\n  className = '',\n  socialShareFileSrc = '',\n}) {\n  const [openVideoPreview, setOpenVideoPreview] = useState(false);\n\n  return (\n    <>\n      <Typography.Link className={className} onClick={() => setOpenVideoPreview(true)}>\n        {text || 'Preview Video'}\n      </Typography.Link>\n\n      <Modal\n        centered\n        footer={false}\n        open={openVideoPreview}\n        width={isMobile ? '100%' : '50%'}\n        title=\"Preview Video Invitation Post\"\n        onCancel={() => setOpenVideoPreview(false)}\n      >\n        <video\n          controls\n          src={getFullS3Url(socialShareFileSrc)}\n          style={{ width: '100%', height: 'auto' }}\n        />\n      </Modal>\n    </>\n  );\n}\n","import { Button, Typography } from 'antd';\nimport { isMobile } from 'react-device-detect';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\nimport { SOCIAL_TITLES } from '../../../utils/types';\nimport { useAuthContext } from '../../../auth/AuthProvider';\nimport { ArrowLeftOutlined, CheckOutlined } from '@ant-design/icons';\nimport CopyText from '../../../components/CopyText';\nimport PreviewAutomationVideo from './PreviewAutomationVideo';\n\nconst { Title } = Typography;\n\nexport default function AutomationCongrats({ guest, showActionBtns = false, onGoBack = () => {} }) {\n  const navigate = useNavigate();\n  const { user } = useAuthContext();\n  const startHostAutomation = guest?.startHostAutomation || false;\n\n  const connectedSocials = (guest?.socials || []).reduce((acc, item) => {\n    if (!item || !item.isConnected) return acc;\n\n    const { type, subType } = item;\n\n    return [...acc, `${SOCIAL_TITLES[type]} ${subType}`];\n  }, []);\n\n  return (\n    <div className={`mt-2 bg-F7F3F9 br-5px ${isMobile ? 'p-2' : 'p-3'}`}>\n      <Title level={isMobile ? 4 : 3}>\n        👏 Congrats, your new Upplaud is ready to pull in new interest!\n      </Title>\n      <Title level={5}>\n        Voters will be directed to:{' '}\n        <Link target=\"_blank\" to={`/vote/${user?.userName}/${guest?.uniqueId}`}>\n          Voting Page\n        </Link>\n      </Title>\n\n      <Title level={5}>You've connected:</Title>\n      <ul>\n        {connectedSocials.map((item, key) => (\n          <li key={key} className=\"capitalize\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n      <Title level={5}>\n        Preview your voter invitation video:{' '}\n        <PreviewAutomationVideo className=\"ml-1\" socialShareFileSrc={guest?.socialShareFileSrc} />{' '}\n      </Title>\n\n      <Title level={5} className=\"mb-1\">\n        Your guest will be invited to connect here:{' '}\n        <Link target=\"_blank\" to={`/guest-acceptance/${user?.userName}/${guest?.uniqueId}`}>\n          Guest Invitation Page\n        </Link>\n      </Title>\n      <Title level={5} className={`mt-0 ${isMobile && 'mb-0'}`}>\n        Their private invite password is:{' '}\n        <CopyText\n          text={guest?.password}\n          className={`d-inline-block ${isMobile ? 'w-100' : 'w-125px ml-1'}`}\n        />\n      </Title>\n\n      <Title level={isMobile ? 5 : 4} className={isMobile && 'mt-2'}>\n        We'll start posting{' '}\n        {startHostAutomation ? 'when your guest connects their social media.' : 'later today!'}\n      </Title>\n\n      {showActionBtns && (\n        <>\n          <Button\n            size=\"large\"\n            type=\"default\"\n            block={isMobile}\n            onClick={onGoBack}\n            icon={<ArrowLeftOutlined />}\n          >\n            Go back to make any changes.\n          </Button>\n\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            block={isMobile}\n            icon={<CheckOutlined />}\n            className=\"d-block mt-2 text-wrap\"\n            onClick={() => navigate(PATH_DASHBOARD.dashboard.automations)}\n          >\n            CONFIRM YOUR NEW UPPLAUD & SEE YOUR OTHER AUTOMATIONS\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n","import Accordian from '../../../components/Accordian';\nimport { isMobile } from 'react-device-detect';\nimport { getSocialLabel } from '../../../utils/common';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Select, Form, Alert, Tooltip } from 'antd';\n\nexport default function SocialPostingItem() {\n  const form = Form.useFormInstance();\n  const socialItems = Form.useWatch('socials', form) || [];\n\n  const postingOptions = [4, 3, 2, 1].map((value) => ({\n    value,\n    label: `Post [${value}x] monthly`,\n  }));\n\n  // Update Socials\n  const onChangeSet = (_id, field, value) => {\n    const items = socialItems.map((item) =>\n      item._id === _id ? { ...item, [field]: value } : item\n    );\n\n    form.setFieldValue('socials', items);\n  };\n\n  const hasSocials = socialItems.length > 0;\n  const items = [\n    {\n      key: 'social',\n      label: 'Confirm Socials & Posting Frequency',\n      children: (\n        <div className=\"flex-item gap-1 flex-column align-baseline\">\n          <Form.Item name=\"socials\" hidden>\n            <input />\n          </Form.Item>\n\n          {hasSocials &&\n            socialItems.map(\n              ({ _id, type, subType, subTypeName = '', isActive, frequency, isConnected }) => (\n                <div\n                  key={_id}\n                  className={`flex-item gap-1 flex-auto ${isMobile && 'flex-column w-100'}`}\n                >\n                  <Checkbox\n                    checked={isActive}\n                    disabled={!isConnected}\n                    className={`uppercase ${isMobile && 'w-100'}`}\n                    onChange={(e) => onChangeSet(_id, 'isActive', e.target.checked)}\n                  >\n                    {getSocialLabel(type, subType, subTypeName)}\n                  </Checkbox>\n                  <Select\n                    size=\"small\"\n                    defaultValue={4}\n                    value={frequency}\n                    placeholder=\"Select\"\n                    disabled={!isConnected}\n                    options={postingOptions}\n                    style={{ minWidth: 200 }}\n                    className={isMobile && 'w-100'}\n                    onChange={(value) => onChangeSet(_id, 'frequency', value)}\n                  />\n\n                  {!isConnected && (\n                    <Tooltip\n                      color=\"red\"\n                      arrow={false}\n                      title=\"Please connect your social account to enable this automation.\"\n                    >\n                      <Button\n                        danger\n                        type=\"text\"\n                        size=\"small\"\n                        shape=\"circle\"\n                        block={isMobile}\n                        icon={<InfoCircleOutlined />}\n                      >\n                        Account Disconnected{' '}\n                      </Button>\n                    </Tooltip>\n                  )}\n                </div>\n              )\n            )}\n\n          {!hasSocials && (\n            <Alert\n              showIcon\n              style={{ fontWeight: 600 }}\n              message=\"No social media accounts found. Please connect your social media accounts first.\"\n            />\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  return <Accordian items={items} defaultActive=\"social\" marginBottom={false} />;\n}\n","import ImgCrop from 'antd-img-crop';\nimport { useState } from 'react';\nimport { Spin, Upload, message } from 'antd';\nimport { uploadAndGetS3Path } from '../../reducers/fileSlice';\n\nexport default function CustomUpload({ onComplete, children, cropShape = 'round', aspect = 1 }) {\n  const [isUploading, setIsUploading] = useState(false);\n\n  const beforeUpload = (file) => {\n    if (!['image/png', 'image/jpg', 'image/jpeg'].includes(file.type.toLowerCase())) {\n      message.error('You can only upload JPG/PNG file!');\n      return false;\n    }\n\n    return true;\n  };\n\n  const props = {\n    name: 'file',\n    beforeUpload,\n    multiple: false,\n    showUploadList: false,\n    accept: '.png, .jpeg, .jpg',\n    customRequest: ({ file }) => {\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n        try {\n          setIsUploading(true);\n          const result = await uploadAndGetS3Path({ imageData: reader.result });\n          setIsUploading(false);\n          onComplete(result?.s3Path);\n        } catch (error) {\n          console.log(error);\n          setIsUploading(false);\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n  };\n\n  return (\n    <ImgCrop\n      showReset\n      rotationSlider\n      aspect={aspect}\n      modalOk=\"Upload\"\n      cropShape={cropShape}\n      fillColor=\"transparent\"\n      beforeCrop={beforeUpload}\n    >\n      <Upload {...props}>\n        <Spin spinning={isUploading}>{children}</Spin>\n      </Upload>\n    </ImgCrop>\n  );\n}\n","import { Button, Avatar } from 'antd';\nimport CustomUpload from './CustomUpload';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { getFullS3Url } from '../../config-global';\n\nexport default function HeadshotImage({ picture = '', onChange }) {\n  const pictureUrl = picture\n    ? picture.startsWith('http')\n      ? picture\n      : getFullS3Url(picture)\n    : null;\n\n  return (\n    <div className=\"flex-item\">\n      {pictureUrl && <Avatar size=\"large\" src={pictureUrl} />}\n\n      <CustomUpload onComplete={onChange}>\n        <Button icon={<UploadOutlined />}>Click to {pictureUrl ? 'Change' : 'Upload'}</Button>\n      </CustomUpload>\n    </div>\n  );\n}\n","import * as ExcelJS from 'exceljs';\nimport { GUEST_TYPE, SOCIAL_TITLES, SOCIAL_TYPE, SOCIAL_SUB_TYPE } from './types';\n\nconst { FACEBOOK } = SOCIAL_TYPE;\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\nconst { PROFILE, PAGE, GROUP } = SOCIAL_SUB_TYPE;\n\nconst colors = [\n  '##E91E63',\n  '#673AB7',\n  '#2196F3',\n  '#00BCD4',\n  '#FF9800',\n  '#8BC34A',\n  '#009688',\n  '#FF5722',\n  '#607D8B',\n  '#F44336',\n];\nexport const getRandomColor = () => colors[Math.floor(Math.random() * colors.length)];\n\nexport const getDateString = (timestamp) => new Date(timestamp).toDateString();\n\nexport const pollTypeOptions = [\n  { key: HOST_GUEST, value: HOST_GUEST, label: 'JOINT SESSION', text: 'Their Info' },\n  { key: SOLO_SESSION, value: SOLO_SESSION, label: 'SOLO SESSION', text: 'Your Info' },\n  // { key: GUEST_SPEAKER, value: GUEST_SPEAKER, label: \"I'M A GUEST SPEAKER\", text: 'Host Info' },\n];\n\nexport const getPollType = (key = HOST_GUEST) => pollTypeOptions.find((item) => item.key === key);\n\nexport const getSocialTitle = (type) => SOCIAL_TITLES[type];\n\nexport const getSocialLabel = (type, subType, subTypeName = '') => {\n  const title = getSocialTitle(type);\n\n  if (subType === PROFILE) {\n    return `YOUR ${title} PROFILE`;\n  } else if (subType === PAGE) {\n    return `YOUR ${title} PAGE: ${subTypeName}`;\n  } else if (subType === GROUP) {\n    return `YOUR ${title} GROUP: ${subTypeName}`;\n  }\n\n  return '';\n};\n\nexport const getSocialsItems = (socialAccounts = []) => {\n  return socialAccounts.reduce((items, item) => {\n    if (!item?.isConnected) return items;\n\n    const { type, socialId, page, group } = item;\n\n    const getSocialItem = (subType, subTypeId, subTypeName = '', frequency = 4) => {\n      return {\n        type,\n        subType,\n        frequency,\n        subTypeId,\n        subTypeName,\n        isActive: false,\n        _id: `${type}_${subType}`,\n        isConnected: (subTypeId || '').toString().length > 0,\n      };\n    };\n\n    const getSubTypeName = (item) =>\n      item?.accounts.find(({ id }) => id === item?.socialId)?.name || '';\n\n    const newItems = [\n      ...items,\n      getSocialItem(PROFILE, socialId),\n      getSocialItem(PAGE, page?.socialId, getSubTypeName(page)),\n    ];\n\n    return type === FACEBOOK\n      ? [...newItems, getSocialItem(GROUP, group?.socialId, getSubTypeName(page))]\n      : newItems;\n  }, []);\n};\n\n// download votes\nexport const downloadVotes = (votes) => {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet('Voting Data');\n\n  const { questionnaireAnswers = [] } = votes[0] || {};\n  const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n  sheet.columns = [\n    { header: 'Selected Topic', key: 'topic' },\n    { header: 'Voter Name', key: 'voter_name' },\n    { header: 'Voter Email', key: 'voter_email' },\n    { header: 'Voter Cell Phone', key: 'voter_cellphone' },\n    { header: 'User Suggested', key: 'isSuggestion' },\n    { header: 'Suggested Topic', key: 'suggested_topic' },\n    { header: 'Suggested Speaker', key: 'suggested_speaker' },\n    { header: `Question 1: ${quest1?.question}`, key: 'quest1' },\n    { header: `Question 2: ${quest2?.question}`, key: 'quest2' },\n    { header: 'Referral 1', key: 'quest2_referral1' },\n    { header: 'Referral 2', key: 'quest2_referral2' },\n    { header: 'Name', key: 'quest2_name' },\n    { header: 'Email', key: 'quest2_email' },\n    { header: `Question 3: ${quest3?.question}`, key: 'quest3' },\n    { header: `Question 4: ${quest4?.question}`, key: 'quest4' },\n    { header: 'Timestamp', key: 'timestamp' },\n  ];\n\n  votes.forEach((vote) => {\n    const { selectedTopic, voter, isSuggestion, suggestions, createdAt, questionnaireAnswers } =\n      vote;\n\n    const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n    sheet.addRow({\n      topic: selectedTopic?.topic || 'Other',\n      voter_name: voter?.name || '--',\n      voter_email: voter?.email || '--',\n      voter_cellphone: voter?.cell_phone || '--',\n      isSuggestion: isSuggestion ? 'Yes' : 'No',\n      suggested_topic: suggestions?.topic || '--',\n      suggested_speaker: suggestions?.speaker || '--',\n      quest1: quest1 ? quest1?.answers || '--' : '--',\n      quest2: quest2?.answers ? `Comment: ${quest2?.answers?.comment || '--'}` : '--',\n      quest2_referral1: quest2?.answers?.referral1 || '--',\n      quest2_referral2: quest2?.answers?.referral2 || '--',\n      quest2_name: quest2?.answers?.name || '--',\n      quest2_email: quest2?.answers?.email || '--',\n      quest3: quest3 ? quest3?.answers?.answer || '--' : '--',\n      quest4: quest4 ? (quest4?.doneSharing ? 'Yes' : 'No') : '--',\n      timestamp: new Date(createdAt).toLocaleString(),\n    });\n  });\n\n  workbook.xlsx.writeBuffer().then((buffer) => {\n    const blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'VotingData.xlsx';\n    a.click();\n  });\n};\n"],"names":["Accordian","_ref","items","defaultActive","marginBottom","_jsx","Collapse","bordered","className","concat","defaultActiveKey","expandIcon","_ref2","isActive","MinusOutlined","PlusOutlined","TextEditor","name","params","Form","Item","formItemParams","children","ReactQuill","theme","modules","toolbar","header","list","script","indent","direction","color","background","font","align","Paragraph","Typography","PollAudioRecord","form","useFormInstance","state","setState","useState","blob","open","audioName","timeLeft","recorder","audioDuration","isRecording","recordingStartedAt","updateState","newState","prevState","dispatch","useDispatch","files","isLoading","isUploading","useSelector","audios","filter","type","FILE_TYPE","AUDIO","getAudioFileName","localeTimeStr","Date","toLocaleString","replaceAll","stopRecording","useCallback","window","interval","clearInterval","audioBlob","Blob","getBlob","stream","stop","Math","floor","now","useEffect","setInterval","_jsxs","_Fragment","hidden","isMobile","label","Select","loading","disabled","placeholder","options","map","_ref3","_id","duration","value","onChange","_ref4","setFieldValue","Button","icon","onClick","Modal","centered","footer","maskClosable","title","width","onCancel","strong","Spin","spinning","tip","src","URL","createObjectURL","controls","Input","e","target","block","htmlType","startRecording","navigator","mediaDevices","getUserMedia","audio","echoCancellation","then","recordObj","RecordRTC","bufferSize","sampleRate","audioBitsPerSecond","seconds","minutes","remainingSeconds","secondsToMinutes","async","formData","FormData","append","uploadAudio","Simplebar","style","maxHeight","paddingRight","List","size","dataSource","renderItem","_ref5","i","actions","Popconfirm","okText","cancelText","onConfirm","deleteFile","description","danger","Meta","alignItems","SuggestionModal","SimpleBar","item","index","Text","copyable","Option","Dragger","Upload","PollSharingImage","user","useAuthContext","useWatch","socialShareFileSrc","countdownTime","setCountdownTime","isGenerating","setIsGenerating","showSuggestions","setShowSuggestions","showAddManageImages","setShowAddManageImages","showPollImagePreview","setShowPollImagePreview","images","IMAGE","getFormName","TextColorFormItem","formType","rules","max","message","maxLength","suffix","Tooltip","QuestionCircleOutlined","ColorPicker","showText","onChangeComplete","metaColor","toHexString","key","s3Path","Avatar","getFullS3Url","marginLeft","_images$find","_user$profile","_user$profile2","formValues","getFieldsValue","guest","pollSharingImage","hostSpeakerLabel","guestSpeakerLabel","pollSharingImageInfo","userLogo","picture","showLogo","find","logo","host","fontColor","text","firstName","lastName","profile","organization","fullName","notification","error","imageS3Path","videoS3Path","generatePollImage","success","console","height","uploadProps","multiple","showUploadList","accept","customRequest","file","reader","FileReader","readAsDataURL","onload","imageData","result","split","requestBody","uploadImages","onDrop","log","dataTransfer","InboxOutlined","_ref6","avatar","destroyOnClose","closable","keyboard","Statistic","Countdown","format","onFinish","Title","HOST_GUEST","SOLO_SESSION","GUEST_TYPE","hostInfoFields","required","topicLabels","pollInfoFields","getGuesUsertObj","_userObj$profile","_userObj$profile2","_userObj$profile3","_userObj$profile4","_userObj$profile5","userObj","arguments","length","undefined","email","phone","about","jobTitle","getPostSharingImageInfo","obj","headerText","headerBgColor","bgColor","headerTextColor","textColor","footerText","footerBgColor","footerTextColor","NewAutomation","_getPollType","isGuestAcceptance","id","useParams","useForm","navigate","useNavigate","currentStep","setCurrentStep","isNew","guestTypeValue","isSoloSession","isPublished","isPublishing","guests","socials","guestUser","pollImageSrc","pollImageInfo","hostOfferUrl","guestOfferUrl","recordingDate","presentationName","guestType","potentialTopics","startHostAutomation","emailTemplate","subject","body","defaultSocials","getSocialsItems","socialAccounts","getFiles","fetchGuest","resetFields","setFieldsValue","status","initialValues","dayjs","onFormSubmit","validateFields","values","addGuest","updateGuest","catch","stepItems","content","level","getPollType","HeadshotImage","SocialPostingItem","Row","gutter","Col","span","wrapperCol","itemLayout","DatePicker","disabledDate","d","subtract","add","labelCol","valuePropName","Switch","left","bottom","position","Space","c","POLL_STATUS","DRAFT","PUBLISHED","AppTitle","labelWrap","labelAlign","layout","Radio","pollTypeOptions","Steps","current","display","AutomationCongrats","showActionBtns","onGoBack","CopyText","onCopy","ellipsis","PreviewAutomationVideo","openVideoPreview","setOpenVideoPreview","Link","connectedSocials","reduce","acc","isConnected","subType","SOCIAL_TITLES","to","userName","uniqueId","password","ArrowLeftOutlined","CheckOutlined","PATH_DASHBOARD","dashboard","automations","socialItems","postingOptions","onChangeSet","field","hasSocials","subTypeName","frequency","Checkbox","checked","getSocialLabel","defaultValue","minWidth","arrow","shape","InfoCircleOutlined","Alert","showIcon","fontWeight","CustomUpload","onComplete","cropShape","aspect","setIsUploading","beforeUpload","includes","toLowerCase","props","onloadend","uploadAndGetS3Path","ImgCrop","showReset","rotationSlider","modalOk","fillColor","beforeCrop","pictureUrl","startsWith","UploadOutlined","FACEBOOK","SOCIAL_TYPE","PROFILE","PAGE","GROUP","SOCIAL_SUB_TYPE","colors","getRandomColor","random","getDateString","timestamp","toDateString","getSocialTitle","socialId","page","group","getSocialItem","subTypeId","toString","getSubTypeName","_item$accounts$find","accounts","newItems","downloadVotes","votes","workbook","ExcelJS","sheet","addWorksheet","questionnaireAnswers","quest1","quest2","quest3","quest4","columns","question","forEach","vote","_quest2$answers","_quest2$answers2","_quest2$answers3","_quest2$answers4","_quest2$answers5","_quest3$answers","selectedTopic","voter","isSuggestion","suggestions","createdAt","addRow","topic","voter_name","voter_email","voter_cellphone","cell_phone","suggested_topic","suggested_speaker","speaker","answers","comment","quest2_referral1","referral1","quest2_referral2","referral2","quest2_name","quest2_email","answer","doneSharing","xlsx","writeBuffer","buffer","url","a","document","createElement","href","download","click"],"sourceRoot":""}