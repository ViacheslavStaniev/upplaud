{"version":3,"file":"static/js/497.95d81f78.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/RemoveCircleOutline.js","../node_modules/@mui/icons-material/esm/AddCircleOutline.js","pages/email-templates/TemplateEditor.js","pages/email-templates/TemplatesProvider.js","pages/email-templates/index.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'RemoveCircleOutline');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');","import PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport { useSnackbar } from 'notistack';\nimport { AddCircleOutline, RemoveCircleOutline } from '@mui/icons-material';\nimport {\n  Box,\n  Alert,\n  Stack,\n  Button,\n  Accordion,\n  Typography,\n  InputAdornment,\n  AccordionDetails,\n  AccordionSummary,\n} from '@mui/material';\nimport FormProvider, { RHFTextField, RHFEditor, RHFInputLabel } from '../../components/hook-form';\n\nTemplateEditor.propTypes = {\n  item: PropTypes.object,\n  expanded: PropTypes.bool,\n  onExpand: PropTypes.func,\n};\n\nexport default function TemplateEditor({ item, expanded, onExpand }) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { key, subject, emailText, afterDays, title } = item;\n\n  const defaultValues = { subject, emailText, afterDays };\n  const methods = useForm({ defaultValues });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = methods;\n\n  if (errors) console.log('errors', errors);\n\n  const onSubmit = async (data) => {\n    try {\n      console.log(data);\n      reset(defaultValues);\n      enqueueSnackbar('Invitation saved successfully!');\n    } catch (error) {\n      console.error(error);\n\n      reset();\n      setError('afterSubmit', { ...error, message: error.message || error });\n    }\n  };\n\n  return (\n    <Accordion expanded={expanded} onChange={onExpand}>\n      <AccordionSummary\n        sx={{ color: expanded ? '#8F24B2' : '' }}\n        expandIcon={expanded ? <RemoveCircleOutline /> : <AddCircleOutline />}\n      >\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n          <Stack spacing={2} marginTop={2} marginBottom={2}>\n            {!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\n\n            <RHFTextField\n              name=\"subject\"\n              label=\"SUBJECT\"\n              placeholder=\"Enter your subject\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">{key} try</InputAdornment>,\n              }}\n            />\n\n            <RHFEditor name=\"emailText\" id={`editor${key}`} />\n\n            <Box>\n              <RHFInputLabel label=\"Mandatory uneditable end of email:\" />\n              <Typography\n                variant=\"body2\"\n                sx={{\n                  mt: 2,\n                  padding: 5,\n                  fontSize: 24,\n                  borderRadius: 2,\n                  bgcolor: 'background.neutral',\n                }}\n              >\n                Please click this button to connect your social media & automate your episode\n                promotion:\n              </Typography>\n            </Box>\n          </Stack>\n\n          <Stack gap={2} flexDirection=\"row\" marginTop={4}>\n            <LoadingButton\n              color=\"info\"\n              size=\"large\"\n              type=\"submit\"\n              shape=\"circular\"\n              variant=\"contained\"\n              loading={isSubmitting}\n            >\n              SAVE EDITS\n            </LoadingButton>\n\n            <Button size=\"large\" type=\"button\" shape=\"circular\" variant=\"outlined\">\n              REVERT TO ORIGINAL\n            </Button>\n          </Stack>\n        </FormProvider>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { createContext, useContext, useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getGuestsList, deleteGuest, deleteManyGuests } from '../../redux/slices/guests';\nimport { useAuthContext } from '../../auth/useAuthContext';\n\nexport const TemplatesContext = createContext(null);\n\nexport const useTemplatesContext = () => {\n  const context = useContext(TemplatesContext);\n\n  if (!context) throw new Error('useTemplatesContext context must be use inside TemplatesProvider');\n\n  return context;\n};\n\nTemplatesProvider.propTypes = { children: PropTypes.node };\n\nexport default function TemplatesProvider({ children }) {\n  const dispatch = useDispatch();\n\n  const { user } = useAuthContext();\n  const { guests, error, isLoading } = useSelector((state) => state.guests);\n\n  useEffect(() => {\n    dispatch(getGuestsList(user.show?._id));\n  }, [user.show?._id, dispatch]);\n\n  // On Guest Delete\n  const onGuestDelete = useCallback(async (guestId) => dispatch(deleteGuest(guestId)), [dispatch]);\n\n  // On Many Guest Delete\n  const onManyGuestDelete = useCallback(async (ids) => dispatch(deleteManyGuests(ids)), [dispatch]);\n\n  if (error) console.log('error in guest provider', error);\n\n  const memoizedValue = useMemo(\n    () => ({ guests, isLoading, onGuestDelete, onManyGuestDelete }),\n    [guests, isLoading, onGuestDelete, onManyGuestDelete]\n  );\n\n  return <TemplatesContext.Provider value={memoizedValue}>{children}</TemplatesContext.Provider>;\n}\n","import { useState } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport { useSettingsContext } from '../../components/settings';\nimport TemplateEditor from './TemplateEditor';\nimport TemplatesProvider from './TemplatesProvider';\nimport AppTitle from '../../components/AppTitle';\n\nexport default function EmailTemplates() {\n  const { themeStretch } = useSettingsContext();\n  const [expanded, setExpanded] = useState('1st');\n\n  const items = [\n    {\n      key: '1st',\n      title: 'Invitation 1',\n      afterDays: 3,\n      subject: '',\n      emailText: 'This is dummy email text 1',\n    },\n    {\n      key: '2nd',\n      title: 'Invitation 2',\n      afterDays: 3,\n      subject: '',\n      emailText: 'This is dummy email text 2',\n    },\n    {\n      key: '3rd',\n      title: 'Invitation 3',\n      afterDays: 3,\n      subject: '',\n      emailText: 'This is dummy email text 3',\n    },\n    {\n      key: '4th',\n      title: 'Invitation 4',\n      afterDays: 3,\n      subject: '',\n      emailText: 'This is dummy email text 4',\n    },\n    {\n      key: '5th',\n      title: 'Invitation 5',\n      afterDays: 3,\n      subject: '',\n      emailText: 'This is dummy email text 5',\n    },\n  ];\n\n  return (\n    <TemplatesProvider>\n      <AppTitle title=\"Email Template\" />\n\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <Typography variant=\"h3\" component=\"h1\" paragraph>\n          Email Template\n        </Typography>\n\n        <Typography gutterBottom sx={{ mb: 5 }}>\n          <AppTitle appNameOnly /> can invite your guests to connect their social media to\n          automatically promote their upcoming episode and collect questions from their connections.\n          Often, reminders are helpful. You can manually remind & invite your guests through the\n          Automations dashboard. Below, you can edit the 3 successive emails that{' '}\n          <AppTitle appNameOnly /> can automatically send to your guests.\n        </Typography>\n\n        {items.map((item) => (\n          <TemplateEditor\n            item={item}\n            key={item.key}\n            expanded={expanded === item.key}\n            onExpand={(e, isExpanded) => setExpanded(isExpanded ? item.key : false)}\n          />\n        ))}\n      </Container>\n    </TemplatesProvider>\n  );\n}\n"],"names":["createSvgIcon","_jsx","d","TemplateEditor","item","expanded","onExpand","enqueueSnackbar","useSnackbar","key","subject","emailText","afterDays","title","defaultValues","methods","useForm","reset","setError","handleSubmit","formState","errors","isSubmitting","console","log","onSubmit","data","error","message","Accordion","onChange","AccordionSummary","sx","color","expandIcon","RemoveCircleOutline","AddCircleOutline","Typography","variant","AccordionDetails","Stack","spacing","marginTop","marginBottom","afterSubmit","Alert","severity","name","label","placeholder","InputProps","startAdornment","InputAdornment","position","id","Box","mt","padding","fontSize","borderRadius","bgcolor","gap","flexDirection","LoadingButton","size","type","shape","loading","Button","TemplatesContext","createContext","TemplatesProvider","children","dispatch","useDispatch","user","useAuthContext","useSelector","state","guests","isLoading","useEffect","getGuestsList","show","_id","onGuestDelete","useCallback","guestId","deleteGuest","onManyGuestDelete","ids","deleteManyGuests","memoizedValue","useMemo","Provider","value","EmailTemplates","themeStretch","useSettingsContext","useState","setExpanded","AppTitle","Container","maxWidth","component","paragraph","gutterBottom","mb","appNameOnly","map","e","isExpanded"],"sourceRoot":""}