{"version":3,"file":"static/js/708.26e12f18.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/CalendarToday.js","../node_modules/@mui/icons-material/esm/CloudDownloadOutlined.js","../node_modules/@mui/icons-material/esm/Settings.js","../node_modules/@mui/icons-material/esm/Description.js","pages/automations/CustomTableRow.js","pages/automations/GuestsProvider.js","pages/automations/AutomationsTable.js","pages/automations/index.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Email.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\"\n}), 'CalendarToday');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95C8.08 7.14 9.94 6 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11c1.56.1 2.78 1.41 2.78 2.96 0 1.65-1.35 3-3 3zm-5.55-8h-2.9v3H8l4 4 4-4h-2.55z\"\n}), 'CloudDownloadOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}), 'Description');","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableCell,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport {\n  Edit,\n  Email,\n  Delete,\n  Settings,\n  Description,\n  CalendarToday,\n  PauseCircleOutline,\n  CloudDownloadOutlined,\n} from '@mui/icons-material';\nimport Label from '../../components/label';\nimport ConfirmDialog from '../../components/confirm-dialog';\n\nCustomTableRow.propTypes = {\n  row: PropTypes.object,\n  selected: PropTypes.bool,\n  onDeleteRow: PropTypes.func,\n  onSelectRow: PropTypes.func,\n};\n\nexport default function CustomTableRow({ row, selected, onSelectRow, onDeleteRow }) {\n  const { guest, recordingDate } = row;\n\n  const [openConfirm, setOpenConfirm] = useState(false);\n\n  return (\n    <>\n      <TableRow hover selected={selected}>\n        <TableCell padding=\"checkbox\">\n          <Checkbox checked={selected} onClick={onSelectRow} />\n        </TableCell>\n\n        <TableCell component=\"th\" scope=\"row\">\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Avatar alt={guest?.firstName} src={guest?.profile?.picture} />\n\n            <Typography variant=\"subtitle2\" noWrap>\n              {`${guest?.firstName} ${guest?.lastName}`}\n            </Typography>\n          </Stack>\n        </TableCell>\n        <TableCell align=\"left\">{new Date(recordingDate).toDateString()}</TableCell>\n        <TableCell align=\"center\">\n          <Stack sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            <Label color=\"success\">Guest Posting Info</Label>\n            <Label color=\"info\">Host Posting Info</Label>\n          </Stack>\n        </TableCell>\n        <TableCell align=\"center\">\n          <Stack sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            <Label color=\"success\">G: 1</Label>\n            <Label color=\"info\">H: 2</Label>\n            <Label>N: 3</Label>\n          </Stack>\n        </TableCell>\n        <TableCell align=\"center\">TASK TO DO</TableCell>\n        <TableCell align=\"right\">\n          <IconButton>\n            <Email />\n          </IconButton>\n          <IconButton>\n            <Edit />\n          </IconButton>\n          <IconButton>\n            <CalendarToday />\n          </IconButton>\n          <IconButton>\n            <PauseCircleOutline />\n          </IconButton>\n          <br />\n          <IconButton>\n            <CloudDownloadOutlined />\n          </IconButton>\n          <IconButton>\n            <Settings />\n          </IconButton>\n          <IconButton>\n            <Description />\n          </IconButton>\n          <IconButton onClick={() => setOpenConfirm(true)}>\n            <Delete />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n\n      <ConfirmDialog\n        title=\"Delete\"\n        open={openConfirm}\n        onClose={() => setOpenConfirm(false)}\n        content=\"Are you sure want to delete?\"\n        action={\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\n            Delete\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { createContext, useContext, useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getGuestsList, deleteGuest, deleteManyGuests } from '../../redux/slices/guests';\nimport { useAuthContext } from '../../auth/useAuthContext';\n\nexport const GuestsContext = createContext(null);\n\nexport const useGuestsContext = () => {\n  const context = useContext(GuestsContext);\n\n  if (!context) throw new Error('useGuestsContext context must be use inside GuestsProvider');\n\n  return context;\n};\n\nGuestsProvider.propTypes = { children: PropTypes.node };\n\nexport function GuestsProvider({ children }) {\n  const dispatch = useDispatch();\n\n  const { user } = useAuthContext();\n  const { guests, error, isLoading } = useSelector((state) => state.guests);\n\n  useEffect(() => {\n    dispatch(getGuestsList(user.show?._id));\n  }, [user.show?._id, dispatch]);\n\n  // On Guest Delete\n  const onGuestDelete = useCallback(async (guestId) => dispatch(deleteGuest(guestId)), [dispatch]);\n\n  // On Many Guest Delete\n  const onManyGuestDelete = useCallback(async (ids) => dispatch(deleteManyGuests(ids)), [dispatch]);\n\n  if (error) console.log('error in guest provider', error);\n\n  const memoizedValue = useMemo(\n    () => ({ guests, isLoading, onGuestDelete, onManyGuestDelete }),\n    [guests, isLoading, onGuestDelete, onManyGuestDelete]\n  );\n\n  return <GuestsContext.Provider value={memoizedValue}>{children}</GuestsContext.Provider>;\n}\n","import { useState } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Tooltip,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n  IconButton,\n  TableContainer,\n  TablePagination,\n  CircularProgress,\n} from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { Delete } from '@mui/icons-material';\nimport CustomTableRow from './CustomTableRow';\nimport Scrollbar from '../../components/scrollbar';\nimport EmptyContent from '../../components/empty-content';\nimport ConfirmDialog from '../../components/confirm-dialog';\nimport { PATH_DASHBOARD } from '../../routes/paths';\nimport { useGuestsContext } from './GuestsProvider';\nimport { useTable, TableHeadCustom, TableSelectedAction } from '../../components/table';\n\nconst tableHead = [\n  { id: 'name', label: 'NAME', align: 'left' },\n  { id: 'recordingDate', label: 'RECORDING DATE', align: 'left' },\n  { id: 'status', label: 'STATUS', align: 'center' },\n  { id: 'asqs', label: 'ASQs', align: 'center' },\n  { id: 'todo', label: 'TASK TO DO', align: 'center' },\n  { id: 'action', label: 'ACTIONS', align: 'right' },\n];\n\nexport default function AutomationsTable() {\n  const {\n    page,\n    order,\n    onSort,\n    orderBy,\n    selected,\n    rowsPerPage,\n    setSelected,\n    onSelectRow,\n    onChangePage,\n    onSelectAllRows,\n    rowsPerPageOptions,\n    onChangeRowsPerPage,\n  } = useTable();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const { guests, isLoading, onGuestDelete, onManyGuestDelete } = useGuestsContext();\n\n  const totalGuests = guests.length;\n\n  const handleCloseConfirm = () => setOpenConfirm(false);\n\n  // On Guest Delete\n  const handleDeleteRow = (id) => {\n    onGuestDelete(id);\n    enqueueSnackbar('Guest deleted successfully!');\n  };\n\n  const handleDeleteRows = (selectedRows) => {\n    setSelected([]);\n    onManyGuestDelete(selectedRows);\n    enqueueSnackbar('Multiple guests deleted successfully!');\n  };\n\n  return (\n    <Card>\n      <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\n        <TableSelectedAction\n          rowCount={totalGuests}\n          numSelected={selected.length}\n          onSelectAllRows={(checked) =>\n            onSelectAllRows(\n              checked,\n              guests.map((row) => row.id)\n            )\n          }\n          action={\n            <Tooltip title=\"Delete\">\n              <IconButton color=\"primary\" onClick={() => setOpenConfirm(true)}>\n                <Delete />\n              </IconButton>\n            </Tooltip>\n          }\n        />\n\n        <Scrollbar>\n          <Table sx={{ minWidth: 800 }}>\n            <TableHeadCustom\n              order={order}\n              onSort={onSort}\n              orderBy={orderBy}\n              headLabel={tableHead}\n              rowCount={totalGuests}\n              numSelected={selected.length}\n              onSelectAllRows={(checked) =>\n                onSelectAllRows(\n                  checked,\n                  guests.map((row) => row._id)\n                )\n              }\n            />\n\n            <TableBody>\n              {totalGuests > 0 ? (\n                guests\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row) => (\n                    <CustomTableRow\n                      row={row}\n                      key={row._id}\n                      selected={selected.includes(row._id)}\n                      onSelectRow={() => onSelectRow(row._id)}\n                      onDeleteRow={() => handleDeleteRow(row._id)}\n                    />\n                  ))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={tableHead.length + 1}>\n                    {isLoading ? (\n                      <CircularProgress />\n                    ) : (\n                      <EmptyContent\n                        title=\"No Guests Found!\"\n                        description={\n                          <>\n                            <Typography variant=\"subtitle2\" sx={{ mb: 2 }}>\n                              You haven&apos;t added any guests yet. You added guests will apear\n                              here.\n                            </Typography>\n\n                            <Button variant=\"contained\" href={PATH_DASHBOARD.guestii.addGuest}>\n                              Add Guest\n                            </Button>\n                          </>\n                        }\n                      />\n                    )}\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Scrollbar>\n      </TableContainer>\n\n      {totalGuests > 0 && (\n        <TablePagination\n          page={page}\n          component=\"div\"\n          count={totalGuests}\n          rowsPerPage={rowsPerPage}\n          onPageChange={onChangePage}\n          rowsPerPageOptions={rowsPerPageOptions}\n          onRowsPerPageChange={onChangeRowsPerPage}\n        />\n      )}\n\n      <ConfirmDialog\n        open={openConfirm}\n        onClose={handleCloseConfirm}\n        title=\"Delete\"\n        content={\n          <>\n            Are you sure want to delete <strong> {selected.length} </strong> items?\n          </>\n        }\n        action={\n          <Button\n            color=\"error\"\n            variant=\"contained\"\n            onClick={() => {\n              handleDeleteRows(selected);\n              handleCloseConfirm();\n            }}\n          >\n            Delete\n          </Button>\n        }\n      />\n    </Card>\n  );\n}\n","import { Box, Stack, Button, Container, Typography } from '@mui/material';\nimport { useSettingsContext } from '../../components/settings';\nimport AutomationsTable from './AutomationsTable';\nimport AppTitle from '../../components/AppTitle';\nimport { GuestsProvider } from './GuestsProvider';\n\nexport default function Automations() {\n  const { themeStretch } = useSettingsContext();\n\n  return (\n    <GuestsProvider>\n      <AppTitle title=\"Automations\" />\n\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <Typography variant=\"h3\" component=\"h1\" paragraph>\n          Automations\n        </Typography>\n\n        <Stack sx={{ flexDirection: 'row', gap: 3, marginBottom: 3 }}>\n          <Typography flex={1}>\n            Here you can manage the automation of your guests & track the number of audience\n            submissions connected to your Guest, Host (you), or Neither. You can also export the\n            Submissions for each guest, featuring participants’ names, emails, questions & Audio Ask\n            files.\n          </Typography>\n\n          <Box flex=\"inherit\">\n            <Button\n              fullWidth\n              color=\"info\"\n              size=\"large\"\n              type=\"button\"\n              shape=\"circular\"\n              variant=\"contained\"\n            >\n              REMIND INVITES\n            </Button>\n          </Box>\n        </Stack>\n\n        <AutomationsTable />\n      </Container>\n    </GuestsProvider>\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');"],"names":["createSvgIcon","_jsx","d","CustomTableRow","row","selected","onSelectRow","onDeleteRow","guest","recordingDate","useState","openConfirm","setOpenConfirm","TableRow","hover","TableCell","padding","Checkbox","checked","onClick","component","scope","Stack","direction","alignItems","spacing","Avatar","alt","firstName","src","profile","picture","Typography","variant","noWrap","lastName","align","Date","toDateString","sx","display","flexDirection","gap","color","IconButton","Email","Edit","CalendarToday","PauseCircleOutline","CloudDownloadOutlined","Settings","Description","Delete","title","open","onClose","content","action","Button","GuestsContext","createContext","GuestsProvider","children","dispatch","useDispatch","user","useAuthContext","useSelector","state","guests","error","isLoading","useEffect","getGuestsList","show","_id","onGuestDelete","useCallback","guestId","deleteGuest","onManyGuestDelete","ids","deleteManyGuests","console","log","memoizedValue","useMemo","Provider","value","tableHead","id","label","AutomationsTable","useTable","page","order","onSort","orderBy","rowsPerPage","setSelected","onChangePage","onSelectAllRows","rowsPerPageOptions","onChangeRowsPerPage","enqueueSnackbar","useSnackbar","context","useContext","Error","useGuestsContext","totalGuests","length","handleCloseConfirm","Card","TableContainer","position","overflow","rowCount","numSelected","map","Tooltip","Table","minWidth","headLabel","TableBody","slice","includes","colSpan","CircularProgress","description","mb","href","PATH_DASHBOARD","TablePagination","count","onPageChange","onRowsPerPageChange","selectedRows","Automations","themeStretch","useSettingsContext","AppTitle","Container","maxWidth","paragraph","marginBottom","flex","Box","fullWidth","size","type","shape"],"sourceRoot":""}