{"version":3,"file":"static/js/480.5b8b76f7.chunk.js","mappings":"+KAGe,SAASA,EAASC,GAA2D,IAA1D,MAAEC,EAAQ,GAAE,cAAEC,EAAgB,GAAE,aAAEC,GAAe,GAAMH,EACvF,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPJ,MAAOA,EACPK,UAAU,EACVC,UAAS,aAAAC,OAAeL,EAAe,OAAS,IAChDM,iBAAkBP,EAAgB,CAACA,GAAiB,GACpDQ,WAAYC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAMC,GAAWR,EAAAA,EAAAA,KAACS,EAAAA,EAAa,KAAMT,EAAAA,EAAAA,KAACU,EAAAA,EAAY,GAAG,GAGpF,C,+ECVe,SAASC,EAAUf,GAAuB,IAAtB,KAAEgB,KAASC,GAAQjB,EAqBpD,OACEI,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAACH,KAAMA,KAAgB,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQG,eAAcC,UAC/CjB,EAAAA,EAAAA,KAACkB,IAAU,CAACC,MAAM,OAAOC,QAAS,CAAEC,QAtBjB,CACrB,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,aAAc,cACf,CAAC,OAAQ,SAET,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAEC,OAAQ,OAAS,CAAEA,OAAQ,UAC9B,CAAC,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,OAC7B,CAAC,CAAEC,UAAW,QAEd,CAAC,CAAEJ,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAE9B,CAAC,CAAEK,MAAO,IAAM,CAAEC,WAAY,KAC9B,CAAC,CAAEC,KAAM,KACT,CAAC,CAAEC,MAAO,KAEV,CAAC,cAKoEjB,KAGzE,C,0hBCpBe,SAASkB,EAAenC,GAAsB,IAArB,KAAEoC,EAAI,SAAEC,GAAUrC,EAYxD,OACEI,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CAACC,UAAQ,EAACH,KAAMA,EAAMI,QAAQ,EAAOC,MAAM,cAAcJ,SAAUA,EAAShB,UAChFjB,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAACC,MAAO,CAAEC,UAAW,sBAAuBC,aAAc,IAAKxB,UACvEjB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAI,CACHC,KAAK,QACLrB,QAAQ,EACRc,QAAQ,EACRlC,UAAU,EACV0C,WAnBY,CAClB,oBACA,+BACA,yBACA,iCACA,sCACA,wCACA,sCACA,wCAYMC,WAAYA,CAACC,EAAMC,KACjBC,EAAAA,EAAAA,MAACN,EAAAA,EAAK3B,KAAI,CAACZ,UAAU,YAAWc,SAAA,CAC7B8B,EAAQ,EAAE,MAAE/C,EAAAA,EAAAA,KAACiD,EAAAA,QAAWC,KAAI,CAACC,UAAQ,EAAAlC,SAAE6B,YAOtD,C,eCPA,MAAM,OAAEM,GAAWC,EAAAA,SACb,QAAEC,GAAYC,EAAAA,SACd,KAAEL,EAAI,UAAEM,GAAcP,EAAAA,QAEb,SAASQ,KACtB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,KAEXC,EAAO9C,EAAAA,EAAK+C,kBACZC,EAAehD,EAAAA,EAAKiD,SAAS,eAAgBH,GAC7CI,EAAgBlD,EAAAA,EAAKiD,SAAS,gBAAiBH,IAI9CK,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,IAC5CC,EAAcC,IAAmBF,EAAAA,EAAAA,WAAS,IAC1CG,EAAiBC,IAAsBJ,EAAAA,EAAAA,WAAS,IAChDK,EAAqBC,IAA0BN,EAAAA,EAAAA,WAAS,GAGzDO,GAAWC,EAAAA,EAAAA,OACX,MAAEC,EAAK,UAAEC,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMJ,QACjEK,EAASL,EAAMM,QAAOtF,IAAA,IAAC,KAAEuF,GAAMvF,EAAA,OAAKuF,IAASC,EAAAA,EAAUC,KAAK,IAE5DC,EAAe1E,GAAS,CAAC,mBAAoBA,GAE7C2E,EAAoBhF,IAAiC,IAAhC,MAAEiF,EAAK,MAAEnD,EAAK,SAAEoD,GAAUlF,EACnD,OACEyC,EAAAA,EAAAA,MAAA,OAAK7C,UAAS,wBAAAC,OAA0BsF,EAAAA,IAAY,+BAAgCzE,SAAA,EAClFjB,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CACRyE,MAAOA,EACP5E,KAAM0E,EAAY,GAADlF,OAAIqF,EAAQ,SAC7BtF,UAAWuF,EAAAA,GAAW,QAAU,WAChCC,MAAO,CAAC,CAAEC,IAAK,GAAIC,QAAS,sCAAuC5E,UAEnEjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CACJC,UAAW,GACXC,YAAY,sBACZC,QACEjG,EAAAA,EAAAA,KAACkG,EAAAA,EAAO,CAAC7D,MAAM,mBAAkBpB,UAC/BjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLhB,KAAK,OACLxC,KAAK,QACLyD,MAAMpG,EAAAA,EAAAA,KAACqG,EAAAA,EAAsB,IAC7BC,QAASA,IAAM/B,GAAmB,YAO5CvE,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CACRZ,UAAU,aACVqF,MAAK,GAAApF,OAAKiC,EAAK,aACfzB,KAAM0E,EAAY,GAADlF,OAAIqF,EAAQ,YAAWxE,UAExCjB,EAAAA,EAAAA,KAACuG,EAAAA,EAAW,CACVC,UAAQ,EACRC,iBAAmBC,GACjB9C,EAAK+C,cAAcrB,EAAY,GAADlF,OAAIqF,EAAQ,YAAYiB,EAAUE,oBAKtE5G,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CACRZ,UAAU,aACVqF,MAAK,GAAApF,OAAKiC,EAAK,eACfzB,KAAM0E,EAAY,GAADlF,OAAIqF,EAAQ,cAAaxE,UAE1CjB,EAAAA,EAAAA,KAACuG,EAAAA,EAAW,CACVC,UAAQ,EACRC,iBAAmBC,GACjB9C,EAAK+C,cAAcrB,EAAY,GAADlF,OAAIqF,EAAQ,cAAciB,EAAUE,qBAIpE,EAiEJ/G,EAAQ,CACZ,CACEgH,IAAK,mBACLrB,MAAO,qCACPvE,UACE+B,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACE+B,EAAAA,EAAAA,MAAA,OAAK7C,UAAS,wBAAAC,OAA0BsF,EAAAA,IAAY,eAAgBzE,SAAA,EAClEjB,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CACRyE,MAAM,kBACN5E,KAAM0E,EAAY,QAClBnF,UAAS,OAAAC,OAASsF,EAAAA,GAAW,QAAU,QAASzE,UAEhDjB,EAAAA,EAAAA,KAACqD,EAAAA,QAAM,CACL0D,QAASlC,EACTmC,SAAUnC,EACV1E,UAAU,aACV6F,YAAY,kBAAiB/E,SAE5BgE,EAAOgC,KAAIC,IAAA,IAAC,IAAEC,EAAG,KAAEvG,EAAI,OAAEwG,GAAQF,EAAA,OAChClE,EAAAA,EAAAA,MAACI,EAAM,CAAWiE,MAAOF,EAAIlG,SAAA,EAC3BjB,EAAAA,EAAAA,KAACsH,EAAAA,EAAM,CAACC,KAAKC,EAAAA,EAAAA,IAAaJ,GAASzE,KAAM,MACzC3C,EAAAA,EAAAA,KAACkD,EAAI,CAACX,MAAO,CAAEkF,WAAY,GAAIxG,SAAEL,MAFtBuG,EAGJ,SAIfnH,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLhB,KAAK,OACLuC,MAAOhC,EAAAA,GACPU,MAAMpG,EAAAA,EAAAA,KAACU,EAAAA,EAAY,IACnB4F,QAASA,IAAM7B,GAAuB,GAAMxD,SAC7C,0BAKHjB,EAAAA,EAAAA,KAACuF,EAAiB,CAACC,MAAM,gBAAgBnD,MAAM,WAAWoD,SAAS,YACnEzF,EAAAA,EAAAA,KAACuF,EAAiB,CAACC,MAAM,iBAAiBnD,MAAM,SAASoD,SAAS,YAIlEzC,EAAAA,EAAAA,MAAA,OAAK7C,UAAS,wBAAAC,OAA0BsF,EAAAA,IAAY,eAAgBzE,SAAA,EAClEjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLwB,QAAM,EACNxC,KAAK,UACLuC,MAAOhC,EAAAA,GACPqB,QAAS3C,EACTkC,QA5GqBsB,UAAa,IAADC,EAAAC,EAAAC,EAC3C,MAAMC,EAAapE,EAAKqE,kBAElB,MAAEC,EAAK,MAAEC,EAAK,iBAAEC,EAAgB,iBAAEC,EAAgB,kBAAEC,GAAsBN,EAG1EO,EAAuB,IACxBH,EACHF,QACAM,UAAe,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOM,UAAW,GAC5BC,SAAiE,QAAzDb,EAAE5C,EAAO0D,MAAKC,IAAA,IAAC,IAAEzB,GAAKyB,EAAA,OAAKzB,IAAQiB,EAAiBS,IAAI,WAAC,IAAAhB,OAAA,EAAvDA,EAAyDT,OACnE0B,KAAM,CACJC,UAAW,UACXvD,MAAO6C,EACPW,KAAK,GAAD5I,OAAKsD,EAAKuF,UAAS,KAAA7I,OAAIsD,EAAKwF,SAAQ,KAAA9I,OAClC,OAAJsD,QAAI,IAAJA,GAAa,QAAToE,EAAJpE,EAAMyF,eAAO,IAAArB,GAAbA,EAAesB,aAAY,IAAAhJ,OAAW,OAAJsD,QAAI,IAAJA,GAAa,QAATqE,EAAJrE,EAAMyF,eAAO,IAAApB,OAAT,EAAJA,EAAeqB,aAAY,KAAM,KAGvEjB,MAAO,CACLY,UAAW,UACXvD,MAAO8C,EACPU,KAAK,GAAD5I,OAAK+H,EAAMkB,SAAQ,KAAAjJ,OAAI+H,EAAMiB,aAAY,IAAAhJ,OAAO+H,EAAMiB,aAAY,KAAM,MAIhF,IAAKb,EAAqBC,SACxB,OAAOc,EAAAA,GAAaC,MAAM,CACxB1D,QAAS,QACT2D,YAAa,6CAEV,IAAKjB,EAAqBG,SAC/B,OAAOY,EAAAA,GAAaC,MAAM,CACxB1D,QAAS,QACT2D,YAAa,+BAIjBnF,GAAgB,GAChBH,EAAiBF,GAAiB,IAElC,IACE,MAAM,YAAEyF,EAAW,YAAEC,SAAsBC,EAAAA,EAAAA,IAAkBpB,GAE7D3E,EAAK+C,cAAc,eAAgB8C,GAC/BC,GAAa9F,EAAK+C,cAAc,qBAAsB+C,GAE1DJ,EAAAA,GAAaM,QAAQ,CACnB/D,QAAS,UACT2D,YAAa,mDAEjB,CAAE,MAAOD,GACPM,QAAQN,MAAMA,GACdD,EAAAA,GAAaC,MAAM,CACjB1D,QAAS,QACT2D,YAAa,wBAEjB,CAAC,QACCnF,GAAgB,EAClB,GAkD4CpD,SACnC,8BAWDjB,EAAAA,EAAAA,KAAC8J,EAAAA,EAAsB,CACrBhG,aAAcA,EACdiG,QACE/J,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CAAChB,KAAK,UAAUuC,MAAOhC,EAAAA,GAAUsB,UAAWlD,EAAa7C,SAAC,sCA0BzE+I,EAAc,CAClBpJ,KAAM,OACNqJ,UAAU,EACVC,gBAAgB,EAChBC,OAAQ,0BACRC,cAAexC,UAAqB,IAAd,KAAEyC,GAAMC,EAC5B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GAErBE,EAAOG,OAAS9C,UACd,MAAM+C,EAAYJ,EAAOK,OAAOC,MAAM,KAAK,GACrCC,EAAc,CAClB7F,OAAQ,CACN,CACErE,KAAMyJ,EAAKzJ,KACX+J,UAAU,QAADvK,OAAUiK,EAAKlF,KAAI,YAAA/E,OAAWuK,MAI7CjG,GAASqG,EAAAA,EAAAA,IAAaD,GAAa,CACpC,EAEHE,MAAAA,CAAOC,GACLpB,QAAQqB,IAAI,gBAAiBD,EAAEE,aAAavG,MAC9C,GAGF,OACE5B,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACEjB,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,MAAOA,EAAOC,cAAc,sBAEvCE,EAAAA,EAAAA,KAAC+B,EAAe,CAACC,KAAMsC,EAAiBrC,SAAUA,IAAMsC,GAAmB,MAE3EvB,EAAAA,EAAAA,MAACd,EAAAA,EAAK,CACJC,UAAQ,EACRC,QAAQ,EACRC,MAAM,oBACNL,KAAMwC,EACNvC,SAAUA,IAAMwC,GAAuB,GAAOxD,SAAA,EAE9CjB,EAAAA,EAAAA,KAACwD,EAAS,CAAAvC,SAAC,mBACXjB,EAAAA,EAAAA,KAACoL,EAAAA,EAAI,CAACC,SAAUvG,EAAawG,IAAI,eAAcrK,UAC7C+B,EAAAA,EAAAA,MAACM,EAAO,IAAK0G,EAAW/I,SAAA,EACtBjB,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBc,UACjCjB,EAAAA,EAAAA,KAACuL,EAAAA,EAAa,OAEhBvL,EAAAA,EAAAA,KAAA,KAAGG,UAAU,kBAAiBc,SAAC,+CAC/BjB,EAAAA,EAAAA,KAAA,KAAGG,UAAU,kBAAiBc,SAAC,6CAInCjB,EAAAA,EAAAA,KAACwL,EAAAA,EAAS,CAACjJ,MAAO,CAAEC,UAAW,IAAKC,aAAc,IAAKxB,UACrDjB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAI,CACHC,KAAK,QACLP,QAAQ,EACRlC,UAAU,EACV6G,QAASlC,EACTjC,WAAYqC,EACZ3D,OAAO,mBACPuB,WAAY4I,IAAA,IAAC,IAAEtE,EAAG,KAAEvG,EAAI,OAAEwG,GAAQqE,EAAA,OAChCzL,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK3B,KAAI,CACR2K,QAAS,EACP1L,EAAAA,EAAAA,KAAC2L,EAAAA,EAAU,CAETC,OAAO,MACPC,WAAW,KACXxJ,MAAM,eACNyJ,UAAWA,IAAMpH,GAASqH,EAAAA,EAAAA,IAAW5E,IACrCqC,YAAY,qCAAoCvI,UAEhDjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CAACwB,QAAM,EAAChF,KAAK,QAAO1B,SAAC,YAPxB,WAYRd,UAAU,YAAWc,UAErBjB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK3B,KAAKiL,KAAI,CACb3J,MAAOzB,EACP2B,MAAO,CAAE0J,WAAY,UACrBC,QAAQlM,EAAAA,EAAAA,KAACsH,EAAAA,EAAM,CAACC,KAAKC,EAAAA,EAAAA,IAAaJ,QAE1B,UAMpBpE,EAAAA,EAAAA,MAACd,EAAAA,EAAK,CACJC,UAAQ,EACRC,QAAQ,EACR+J,gBAAc,EACdC,UAAU,EACVC,UAAU,EACVrK,KAAMoC,EACNkI,cAAc,EACdjK,MAAM,gCAA+BpB,SAAA,EAErCjB,EAAAA,EAAAA,KAACwD,EAAS,CAACrD,UAAU,OAAMc,SAAC,4EAI5BjB,EAAAA,EAAAA,KAACuM,EAAAA,EAAUC,UAAS,CAClBC,OAAO,QACPpK,MAAM,kBACNlC,UAAU,6BACVkH,MAAOqF,KAAKC,MAAwB,EAAhB1I,EAAoB,IACxC2I,SAAUA,IAAM1I,EAAiBF,GAAiB,WAK5D,C,4BCpVA6I,IAAAA,OAAaC,KAEb,MAAQ5J,KAAI,SAAE6J,GAAOvJ,UAAU,IAAIP,EAAAA,SAC7B,WAAE+J,GAAU,aAAEC,IAAiBC,EAAAA,WAE/BC,GAAiB,CACrB,CACE3H,MAAO,YACP5E,KAAM,CAAC,QAAS,YAChB+E,MAAO,CAAC,CAAEyH,UAAU,KAEtB,CACE5H,MAAO,aACP5E,KAAM,CAAC,QAAS,UAElB,CACE4E,MAAO,gBACP5E,KAAM,CAAC,QAAS,SAChB+E,MAAO,CAAC,CAAEyH,UAAU,KAEtB,CACExM,KAAM,CAAC,QAAS,SAChB4E,MAAO,qBAET,CACE5E,KAAM,CAAC,QAAS,YAChB4E,MAAO,aAET,CACE5E,KAAM,CAAC,QAAS,gBAChB4E,MAAO,iBAIL6H,GAAc,CAAC,kBAAmB,mBAElCC,GAAiB,CACrB,CACE1M,KAAM,mBACN4E,MAAO,sBAET,CACE5E,KAAM,oBACN4E,MAAO,uBAET,CACE5E,KAAM,eACN4E,MAAO,mBAET,CACE5E,KAAM,gBACN4E,MAAO,oBAET,CACE4H,UAAU,EACVxM,KAAM,mBACN4E,MAAO,oCAIL+H,GAAkB,WAAqB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAnBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACjC,MAAO,CACLG,MAAc,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASI,MAChBC,MAAOL,EAAyB,QAAlBL,EAAGK,EAAQ1E,eAAO,IAAAqE,OAAA,EAAfA,EAAiBU,MAAQ,GAC1CC,MAAON,EAAiB,OAAPA,QAAO,IAAPA,GAAgB,QAATJ,EAAPI,EAAS1E,eAAO,IAAAsE,OAAT,EAAPA,EAAkBU,MAAQ,GAC3C1F,QAASoF,EAAiB,OAAPA,QAAO,IAAPA,GAAgB,QAATH,EAAPG,EAAS1E,eAAO,IAAAuE,OAAT,EAAPA,EAAkBjF,QAAU,GAC/C2F,SAAUP,EAAiB,OAAPA,QAAO,IAAPA,GAAgB,QAATF,EAAPE,EAAS1E,eAAO,IAAAwE,OAAT,EAAPA,EAAkBS,SAAW,GACjDhF,aAAcyE,EAAiB,OAAPA,QAAO,IAAPA,GAAgB,QAATD,EAAPC,EAAS1E,eAAO,IAAAyE,OAAT,EAAPA,EAAkBxE,aAAe,GACzDC,SAAUwE,EAAO,GAAAzN,OAAa,OAAPyN,QAAO,IAAPA,OAAO,EAAPA,EAAS5E,UAAS,KAAA7I,OAAW,OAAPyN,QAAO,IAAPA,OAAO,EAAPA,EAAS3E,UAAa,GAEvE,EAEMmF,GAA2BC,IAC/B,MAAM,KAAEzF,EAAI,OAAEvH,EAAS,KAAI,OAAEc,EAAS,MAASkM,GAAO,CAAC,EAEvD,MAAO,CACLzF,OACA0F,WAAajN,IAAgB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ0H,OAAS,GACxCwF,cAAgBlN,IAAgB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQmN,UAAY,UAC9CC,gBAAkBpN,GAAUA,EAAOqN,WAAc,UACjDC,WAAaxM,IAAgB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ4G,OAAS,GACxC6F,cAAgBzM,IAAgB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQqM,UAAY,UAC9CK,gBAAkB1M,IAAgB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQuM,YAAc,UACnD,EAGY,SAASI,GAAanP,GAAiC,IAADoP,EAAA,IAA/B,kBAAEC,GAAoB,GAAOrP,EACjE,MAAM,GAAEsP,IAAOC,EAAAA,EAAAA,OACRvL,GAAQ9C,EAAAA,EAAKsO,UACd1K,GAAWC,EAAAA,EAAAA,MACX0K,GAAWC,EAAAA,EAAAA,OACX,KAAE5L,IAASC,EAAAA,EAAAA,MAEV4L,EAAaC,IAAkBrL,EAAAA,EAAAA,UAAS,GAEzCsL,OAAezB,IAAPkB,EACRQ,EAAiB5O,EAAAA,EAAKiD,SAAS,YAAaH,GAC5C+L,EAAgBD,IAAmBzC,IACnC,MAAE9E,EAAK,MAAEoB,EAAK,UAAE1E,EAAS,YAAE+K,EAAW,aAAEC,IAAiB9K,EAAAA,EAAAA,KAC5DC,GAAUA,EAAM8K,UAGb,IACJ3I,EAAM,KAAI,MACVe,EAAQ,KAAI,QACZ6H,EAAU,GACV5H,MAAO6H,EAAS,aAChBlM,EAAe,GAAE,cACjBmM,EAAgB,KAAI,aACpBC,EAAe,KAAI,cACnBC,EAAgB,KAAI,cACpBC,EAAgB,KAAI,iBACpBC,EAAmB,GAAE,UACrBC,EAAYtD,GAAU,iBACtB3E,GAAmB,GAAE,kBACrBC,GAAoB,GAAE,mBACtBiI,GAAqB,GAAE,gBACvBC,GAAkB,CAAC,GAAI,IAAG,oBAC1BC,IAAsB,EAAK,cAC3BC,GAAgB,CACdC,QAAS,iCACTC,KAAK,unDAELzI,GAAS,CAAC,EAGR0I,IAAiBC,EAAAA,EAAAA,KAAoB,OAAJpN,QAAI,IAAJA,OAAI,EAAJA,EAAMqN,iBAAkB,KAE/DC,EAAAA,EAAAA,YAAU,KAERtM,GAASuM,EAAAA,EAAAA,QAEJxB,GAASP,GAAIxK,GAASwM,EAAAA,EAAAA,IAAWhC,IAElCO,GAAO/K,GAASyM,EAAAA,EAAAA,IAAY,CAAEhJ,MAAO,KAAMyH,aAAa,KAErD,IAAMlL,GAASyM,EAAAA,EAAAA,IAAY,CAAEhJ,MAAO,UAC1C,CAACsH,EAAOP,EAAIxK,KAEfsM,EAAAA,EAAAA,YAAU,KACR7I,GAASvE,EAAKwN,cAEP,IAAMxN,EAAKwN,gBACjB,CAACjJ,EAAOvE,KAEXoN,EAAAA,EAAAA,YAAU,KACR,MAAM,MAAE/C,EAAK,MAAEC,EAAK,MAAEC,EAAK,QAAE1F,EAAO,SAAEY,GAAakE,GACjDoC,EAAgBjM,EAAOsM,GAGzBpM,EAAKyN,eAAe,CAAElJ,MAAO,CAAE8F,QAAOC,QAAOC,QAAO1F,UAASY,aAAa,GACzE,CAAC3F,EAAMsM,EAAWpM,EAAM+L,KAG3BqB,EAAAA,EAAAA,YAAU,KACJzH,GAA0B,MAAjBA,EAAM+H,QAAgBjC,EAAS,QAErC,IAAM3K,GAASyM,EAAAA,EAAAA,IAAY,CAAE5H,MAAO,UAC1C,CAACA,EAAO8F,EAAU3K,IAErB,MAAM6M,GAAgB,CACpBjB,YACAxM,eACAoM,eACAQ,iBACAP,gBACAK,mBACAH,mBACAhI,oBACAC,qBACAiI,sBACAE,uBACAvI,OAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOf,MAAO,KACrBnD,eAAoB,OAALkE,QAAK,IAALA,OAAK,EAALA,EAAOsJ,WAAY,EAClCrJ,MAAOoF,GAAgByC,GACvBD,QAASA,EAAQhC,OAAS,EAAIgC,EAAUc,GACxCzI,iBAAkBiG,GAAwB4B,GAC1CG,cAAeA,EAAgBvD,IAAAA,IAAUuD,GAAeqB,QAAU,MAG9DC,GAAgBJ,IACpB1N,EACG+N,iBACAC,MAAMC,IACLA,EAAOP,OAASA,EAChBO,EAAOzB,cAAgBvD,IAAY,OAANgF,QAAM,IAANA,OAAM,EAANA,EAAQzB,eAAe3D,SAGlD/H,EADE+K,IAAUtI,GACH2K,EAAAA,EAAAA,IAASD,IAETE,EAAAA,EAAAA,IAAY7C,GAAM/H,EAAK0K,GAClC,IAEDG,MAAMnI,QAAQqB,IAAI,EAGjB+G,GAAY,CAChB,CACE5P,MAAO,gBACPlC,UAAW,eACX+R,SAASlS,EAAAA,EAAAA,KAAA,QAAAiB,SAAM,0BAEjB,CACEoB,MAAO,aACP6P,SACElP,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACEjB,EAAAA,EAAAA,KAAC+M,GAAK,CAACoF,MAAO,EAAElR,SAA6B,QAA7B+N,GAAEoD,EAAAA,EAAAA,IAAY1C,UAAe,IAAAV,OAAA,EAA3BA,EAA6BhG,OAE9CmE,GAAelG,KAAI1G,IAAA,IAAC,MAAEiF,EAAK,KAAE5E,EAAI,MAAE+E,EAAQ,MAAMpF,EAAA,OAChDP,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAAaH,KAAMA,EAAM4E,MAAOA,EAAOG,MAAOgK,EAAgB,KAAOhK,EAAM1E,UACnFjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CAACE,YAAaR,EAAOwB,SAAU2I,KADvBnK,EAEJ,KAGdxF,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAACH,KAAM,CAAC,QAAS,WAAY4E,MAAM,iBAAiBrF,UAAU,MAAKc,UAC3EjB,EAAAA,EAAAA,KAACqS,EAAAA,EAAa,CACZ5J,QAAS3H,EAAAA,EAAKiD,SAAS,CAAC,QAAS,WAAYH,GAC7C0O,SAAW7J,GAAY7E,EAAK+C,cAAc,CAAC,QAAS,WAAY8B,WAM1E,CACEpG,MAAO,cACP6P,SACElP,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACEjB,EAAAA,EAAAA,KAAC+M,GAAK,CAACoF,MAAO,EAAElR,SAAC,oBAEhBoM,GAAYpG,KAAI,CAACzB,EAAOzC,KACvB/C,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAERyE,MAAOA,EACPG,MAAO,CAAC,CAAEyH,UAAU,IACpBxM,KAAM,CAAC,kBAAmBmC,GAAO9B,UAEjCjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CAACE,YAAaR,KALfzC,KASRuK,GAAerG,KAAI,CAAA2B,EAAoC2J,KAAO,IAA1C,KAAE3R,EAAI,MAAE4E,EAAK,SAAE4H,GAAW,GAAOxE,EACpD,OACE5I,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAERH,KAAMA,EACN4E,MAAOA,EACPG,MAAO,CAAC,CAAEyH,aACVjN,UAAWmN,GAAeS,OAAS,IAAMwE,EAAI,MAAQ,GAAGtR,UAExDjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CAACE,YAAaR,KANfA,EAOK,QAMtB,CACEnD,MAAO,gBACP6P,SACElP,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACEjB,EAAAA,EAAAA,KAACyD,GAAgB,KACjBzD,EAAAA,EAAAA,KAACwS,GAAAA,EAAiB,QAIxB,CACEnQ,MAAO,gBACP6P,SACElP,EAAAA,EAAAA,MAACyP,EAAAA,EAAG,CAACC,OAAQ,CAAC,IAAIzR,SAAA,EAChB+B,EAAAA,EAAAA,MAAC2P,EAAAA,EAAG,CAACC,KAAMlN,EAAAA,GAAW,GAAK,GAAGzE,SAAA,EAC5BjB,EAAAA,EAAAA,KAAC+M,GAAK,CAACoF,MAAO,EAAGhS,UAAU,OAAMc,SAAC,kBAIlCjB,EAAAA,EAAAA,KAACwD,GAAS,CAACqP,QAAM,EAAC1S,UAAU,OAAMc,SAAC,aAGnCjB,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAACH,KAAM,CAAC,gBAAiB,WAAYkS,WAAY,GAAG7R,UAC5DjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CAACE,YAAY,eAGrBhG,EAAAA,EAAAA,KAACwD,GAAS,CAACqP,QAAM,EAAC1S,UAAU,OAAMc,SAAC,UAGnCjB,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CACTC,KAAM,CAAC,gBAAiB,QACxBoF,YAAY,0BACZhF,eAAgB,CAAEb,UAAW,MAAO2S,WAAY,UAGpD9P,EAAAA,EAAAA,MAAC2P,EAAAA,EAAG,CAACC,KAAMlN,EAAAA,GAAW,GAAK,EAAEzE,SAAA,EAC3BjB,EAAAA,EAAAA,KAAC+M,GAAK,CAACoF,MAAO,EAAGhS,UAAWuF,EAAAA,GAAW,OAAS,OAAOzE,SAAC,iBAIxDjB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAI,CACHxC,UAAQ,EACRyC,KAAK,QACLoQ,WAAW,aACXlQ,WAAaC,IAAS9C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK3B,KAAI,CAAAE,SAAE6B,IAClCF,WAAY,CACV,mBACA,kBACA,kBACA,oBACA,mBACA,mBACA,gCAOZ,CACEP,MAAO,iBACP6P,SACElP,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACEjB,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CACRH,KAAK,gBACL4E,MAAM,sBACNG,MAAO,CAAC,CAAEyH,UAAU,IACpBjN,UAAWuF,EAAAA,GAAW,QAAU,YAAYzE,UAE5CjB,EAAAA,EAAAA,KAACgT,EAAAA,EAAU,CACT7S,UAAWuF,EAAAA,GAAW,QAAU,YAChCuN,aAAeC,GACbA,IAAMA,EAAIrG,MAAQsG,SAAS,EAAG,QAAUD,EAAIrG,MAAQuG,IAAI,EAAG,eAKjEpQ,EAAAA,EAAAA,MAAA,OAAK7C,UAAU,8BAA6Bc,SAAA,EAC1CjB,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CACRZ,UAAU,MACVkT,SAAU,CAAET,KAAM,IAClBU,cAAc,UACd9N,MAAM,qBACN5E,KAAK,sBAAqBK,UAE1BjB,EAAAA,EAAAA,KAACuT,EAAAA,EAAM,CAACvM,SAAU2I,OAEpB3P,EAAAA,EAAAA,KAACkD,GAAI,CACHiC,KAAK,YACLhF,UAAU,OACVoC,MAAO,IAAMmD,EAAAA,IAAY,CAAE8N,KAAM,GAAIC,OAAQ,GAAIC,SAAU,aAAgBzS,SAC5E,+BAKH+B,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAK,CACJxT,UAAU,aACVwC,KAAM+C,EAAAA,GAAW,GAAK,GACtBhE,UAAWgE,EAAAA,GAAW,WAAa,aAAazE,SAAA,EAEhDjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CAACuB,MAAOhC,EAAAA,GAAUY,QAASA,IAAMkJ,GAAgBoE,GAAMA,EAAI,IAAG3S,SAAC,UAItEjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLuB,MAAOhC,EAAAA,GACPqB,QAASlC,IAAcgL,EACvBvJ,QAASA,IAAMoL,GAAamC,EAAAA,YAAYC,OAAO7S,SAChD,gBAGDjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLhB,KAAK,UACLuC,MAAOhC,EAAAA,GACPqB,QAASlC,GAAagL,EACtBvJ,QAASA,IAAMoL,GAAamC,EAAAA,YAAYE,WAAW9S,SACpD,8BASX,OACE+B,EAAAA,EAAAA,MAAA,OAAK7C,UAAU,kBAAiBc,SAAA,EAC5BgO,IAAqBjP,EAAAA,EAAAA,KAACgU,EAAAA,EAAQ,CAAC3R,MAAK,GAAAjC,OAAKqP,EAAQ,MAAQ,SAAQ,kBAEnEzM,EAAAA,EAAAA,MAAA,OAAK7C,UAAU,YAAWc,SAAA,EACxBjB,EAAAA,EAAAA,KAAC+M,GAAK,CAACoF,MAAOzM,EAAAA,GAAW,EAAI,EAAGvF,UAAU,MAAKc,SAAC,4BAI9C2O,IACA5P,EAAAA,EAAAA,KAAC+M,GAAK,CAACoF,MAAO,EAAGhS,UAAU,SAASgF,KAAK,YAAWlE,SAAC,oFAMvD2O,IACA5M,EAAAA,EAAAA,MAAClC,EAAAA,EAAI,CACH8C,KAAMA,EACNjB,KAAK,QACLsR,WAAW,EACXC,WAAW,OACXC,OAAO,aAEPd,SAAU,CAAET,KAAM,GAClBE,WAAY,CAAEF,KAAM,IACpBrB,cAAeA,GAActQ,SAAA,EAE7BjB,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAACqT,QAAM,EAACxT,KAAK,eAAe4E,MAAM,aAAYvE,UACtDjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CAACE,YAAY,kBAGrBhG,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAACqT,QAAM,EAACxT,KAAK,qBAAqB4E,MAAM,oBAAmBvE,UACnEjB,EAAAA,EAAAA,KAAC8F,EAAAA,EAAK,CAACE,YAAY,yBAGrBhG,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAACH,KAAK,YAAYT,UAAU,OAAMc,UAC1CjB,EAAAA,EAAAA,KAACqU,EAAAA,GAAAA,MAAW,CAACC,QAASC,EAAAA,QAGxBvU,EAAAA,EAAAA,KAAC+M,GAAK,CAACoF,MAAO,EAAGhS,UAAU,OAAMc,SAAC,kBAGlCjB,EAAAA,EAAAA,KAACwU,EAAAA,EAAK,CAACC,QAASlF,EAAa1P,MAAOoS,GAAWK,SAAU9C,IAExDyC,GAAUhL,KAAI,CAACnE,EAAMC,KACpB/C,EAAAA,EAAAA,KAAA,OAEEG,UAAU,YACVoC,MAAO,CAAEmS,QAASnF,IAAgBxM,EAAQ,QAAU,QAAS9B,SAExD,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAMoP,SAJFnP,KAURwM,IAAgB0C,GAAUlE,OAAS,IAClC/K,EAAAA,EAAAA,MAAA,OAAK7C,UAAU,8BAA6Bc,SAAA,CACzCsO,EAAc0C,GAAUlE,OAAS,IAChC/N,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLuB,MAAOhC,EAAAA,GACPP,KAAK,UACLmB,QAASA,KAKPkJ,GAAgBoE,GAAMA,EAAI,GAAE,EAC5B3S,SACH,cAKFsO,EAAc,IACbvP,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CAACuB,MAAOhC,EAAAA,GAAUY,QAASA,IAAMkJ,GAAgBoE,GAAMA,EAAI,IAAG3S,SAAC,eAS/E2O,IACC5P,EAAAA,EAAAA,KAAC2U,GAAAA,EAAkB,CACjBxM,MAAOA,EACPyM,gBAAc,EACdC,SAAUA,IAAMnQ,GAASyM,EAAAA,EAAAA,IAAY,CAAEvB,aAAa,SAK9D,C,6JCnfe,SAASkF,EAAQlV,GAAoD,IAAnD,KAAEoJ,EAAO,GAAE,UAAE7I,EAAY,GAAE,OAAE4U,EAASA,UAAUnV,EAC/E,OACEI,EAAAA,EAAAA,KAAA,OAAKG,UAAS,oCAAAC,OAAsCD,GAAYc,UAC9DjB,EAAAA,EAAAA,KAACiD,EAAAA,QAAWO,UAAS,CAACwR,UAAQ,EAAC7R,SAAU,CAAE4R,UAAU5U,UAAU,8BAA6Bc,SACzF+H,KAIT,C,eCLA,MAAM,MAAE+D,GAAU9J,EAAAA,QAEH,SAAS0R,EAAkB/U,GAA0D,IAAzD,MAAEuI,EAAK,eAAEyM,GAAiB,EAAK,SAAEC,EAAWA,UAAUjV,EAC/F,MAAMyP,GAAWC,EAAAA,EAAAA,OACX,KAAE5L,IAASC,EAAAA,EAAAA,KACX8M,GAA2B,OAALtI,QAAK,IAALA,OAAK,EAALA,EAAOsI,uBAAuB,EAEpDwE,IAAyB,OAAL9M,QAAK,IAALA,OAAK,EAALA,EAAO4H,UAAW,IAAImF,QAAO,CAACC,EAAKrS,KAC3D,IAAKA,IAASA,EAAKsS,YAAa,OAAOD,EAEvC,MAAM,KAAEhQ,EAAI,QAAEkQ,GAAYvS,EAE1B,MAAO,IAAIqS,EAAI,GAAD/U,OAAKkV,EAAAA,EAAcnQ,GAAK,KAAA/E,OAAIiV,GAAU,GACnD,IAEH,OACErS,EAAAA,EAAAA,MAAA,OAAK7C,UAAS,yBAAAC,OAA2BsF,EAAAA,GAAW,MAAQ,OAAQzE,SAAA,EAClEjB,EAAAA,EAAAA,KAAC+M,EAAK,CAACoF,MAAOzM,EAAAA,GAAW,EAAI,EAAEzE,SAAC,+EAGhC+B,EAAAA,EAAAA,MAAC+J,EAAK,CAACoF,MAAO,EAAElR,SAAA,CAAC,8BACa,KAC5BjB,EAAAA,EAAAA,KAACuV,EAAAA,GAAI,CAACC,OAAO,SAASC,GAAE,SAAArV,OAAe,OAAJsD,QAAI,IAAJA,OAAI,EAAJA,EAAMgS,SAAQ,KAAAtV,OAAS,OAAL+H,QAAK,IAALA,OAAK,EAALA,EAAOwN,UAAW1U,SAAC,oBAK1EjB,EAAAA,EAAAA,KAAC+M,EAAK,CAACoF,MAAO,EAAElR,SAAC,uBACjBjB,EAAAA,EAAAA,KAAA,MAAAiB,SACGgU,EAAiBhO,KAAI,CAACnE,EAAM+D,KAC3B7G,EAAAA,EAAAA,KAAA,MAAcG,UAAU,aAAYc,SACjC6B,GADM+D,QAMb7D,EAAAA,EAAAA,MAAC+J,EAAK,CAACoF,MAAO,EAAElR,SAAA,CAAC,sCACqB,KAEpCjB,EAAAA,EAAAA,KAAC8J,EAAAA,EAAsB,CACrB3J,UAAU,OACV2D,aAAmB,OAALqE,QAAK,IAALA,OAAK,EAALA,EAAOrE,aACrBiG,QAAQ/J,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CAACxD,KAAK,QAAO1B,SAAC,kBAIjC+B,EAAAA,EAAAA,MAAC+J,EAAK,CAACoF,MAAO,EAAGhS,UAAU,OAAMc,SAAA,CAAC,8CACY,KAC5CjB,EAAAA,EAAAA,KAACuV,EAAAA,GAAI,CAACC,OAAO,SAASC,GAAE,qBAAArV,OAA2B,OAAJsD,QAAI,IAAJA,OAAI,EAAJA,EAAMgS,SAAQ,KAAAtV,OAAS,OAAL+H,QAAK,IAALA,OAAK,EAALA,EAAOwN,UAAW1U,SAAC,8BAItF+B,EAAAA,EAAAA,MAAC+J,EAAK,CAACoF,MAAO,EAAGhS,UAAS,QAAAC,OAAUsF,EAAAA,IAAY,QAASzE,SAAA,CAAC,oCACtB,KAClCjB,EAAAA,EAAAA,KAAC8U,EAAQ,CACP9L,KAAW,OAALb,QAAK,IAALA,OAAK,EAALA,EAAOyN,SACbzV,UAAS,kBAAAC,OAAoBsF,EAAAA,GAAW,QAAU,sBAItD1C,EAAAA,EAAAA,MAAC+J,EAAK,CAACoF,MAAOzM,EAAAA,GAAW,EAAI,EAAGvF,UAAWuF,EAAAA,IAAY,OAAOzE,SAAA,CAAC,sBACzC,IACnBwP,EAAsB,+CAAiD,kBAGzEmE,IACC5R,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACEjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLxD,KAAK,QACLwC,KAAK,UACLuC,MAAOhC,EAAAA,GACPY,QAASuO,EACTzO,MAAMpG,EAAAA,EAAAA,KAAC6V,EAAAA,EAAiB,IAAI5U,SAC7B,kCAIDjB,EAAAA,EAAAA,KAACmG,EAAAA,GAAM,CACLxD,KAAK,QACLwC,KAAK,UACLuC,MAAOhC,EAAAA,GACPU,MAAMpG,EAAAA,EAAAA,KAAC8V,EAAAA,EAAa,IACpB3V,UAAU,yBACVmG,QAASA,IAAM+I,EAAS0G,EAAAA,eAAeC,UAAUC,aAAahV,SAC/D,+DAOX,C,mFClGe,SAAS6I,EAAsBlK,GAI1C,IAJ2C,OAC7CmK,EAAS,KAAI,UACb5J,EAAY,GAAE,aACd2D,EAAe,IAChBlE,EACC,MAAOsW,EAAsBC,IAA2BhS,EAAAA,EAAAA,WAAS,GAEjE,OACEnB,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA7F,SAAA,EACEjB,EAAAA,EAAAA,KAAA,QAAMG,UAAWA,EAAWmG,QAASA,IAAM6P,GAAwB,GAAMlV,SACtE8I,GAAU,aAGb/J,EAAAA,EAAAA,KAACoW,EAAAA,EAAK,CACJ7T,MAAO,CAAEmS,QAAS,QAClBnN,KAAKC,EAAAA,EAAAA,IAAa1D,GAClBuS,QAAS,CACPC,QAASJ,EACTK,gBAAkBlP,GAAU8O,EAAwB9O,QAK9D,C,+JCrBe,SAASmL,IACtB,MAAM5O,EAAO9C,EAAAA,EAAK+C,kBACZ2S,EAAc1V,EAAAA,EAAKiD,SAAS,UAAWH,IAAS,GAEhD6S,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAGxP,KAAKI,IAAK,CAC5CA,QACA7B,MAAM,SAADpF,OAAWiH,EAAK,kBAIjBqP,EAAcA,CAACvP,EAAKwP,EAAOtP,KAC/B,MAAMxH,EAAQ2W,EAAYvP,KAAKnE,GAC7BA,EAAKqE,MAAQA,EAAM,IAAKrE,EAAM,CAAC6T,GAAQtP,GAAUvE,IAGnDc,EAAK+C,cAAc,UAAW9G,EAAM,EAGhC+W,EAAaJ,EAAYzI,OAAS,EAClClO,EAAQ,CACZ,CACEgH,IAAK,SACLrB,MAAO,sCACPvE,UACE+B,EAAAA,EAAAA,MAAA,OAAK7C,UAAU,6CAA4Cc,SAAA,EACzDjB,EAAAA,EAAAA,KAACc,EAAAA,EAAKC,KAAI,CAACH,KAAK,UAAUwT,QAAM,EAAAnT,UAC9BjB,EAAAA,EAAAA,KAAA,cAGD4W,GACCJ,EAAYvP,KACVrH,IAAA,IAAC,IAAEuH,EAAG,KAAEhC,EAAI,QAAEkQ,EAAO,YAAEwB,EAAc,GAAE,SAAErW,EAAQ,UAAEsW,EAAS,YAAE1B,GAAaxV,EAAA,OACzEoD,EAAAA,EAAAA,MAAA,OAEE7C,UAAS,6BAAAC,OAA+BsF,EAAAA,IAAY,qBAAsBzE,SAAA,EAE1EjB,EAAAA,EAAAA,KAAC+W,EAAAA,EAAQ,CACPC,QAASxW,EACTwG,UAAWoO,EACXjV,UAAS,aAAAC,OAAesF,EAAAA,IAAY,SACpC4M,SAAWrH,GAAMyL,EAAYvP,EAAK,WAAY8D,EAAEuK,OAAOwB,SAAS/V,UAE/DgW,EAAAA,EAAAA,IAAe9R,EAAMkQ,EAASwB,MAEjC7W,EAAAA,EAAAA,KAACqD,EAAAA,QAAM,CACLV,KAAK,QACLuU,aAAc,EACd7P,MAAOyP,EACP9Q,YAAY,SACZgB,UAAWoO,EACXd,QAASmC,EACTlU,MAAO,CAAE4U,SAAU,KACnBhX,UAAWuF,EAAAA,IAAY,QACvB4M,SAAWjL,GAAUqP,EAAYvP,EAAK,YAAaE,MAGnD+N,IACApV,EAAAA,EAAAA,KAACkG,EAAAA,EAAO,CACNvE,MAAM,MACNyV,OAAO,EACP/U,MAAM,gEAA+DpB,UAErE+B,EAAAA,EAAAA,MAACmD,EAAAA,GAAM,CACLwB,QAAM,EACNxC,KAAK,OACLxC,KAAK,QACL0U,MAAM,SACN3P,MAAOhC,EAAAA,GACPU,MAAMpG,EAAAA,EAAAA,KAACsX,EAAAA,EAAkB,IAAIrW,SAAA,CAC9B,uBACsB,WArCtBkG,EAyCD,KAIVyP,IACA5W,EAAAA,EAAAA,KAACuX,EAAAA,EAAK,CACJC,UAAQ,EACRjV,MAAO,CAAEkV,WAAY,KACrB5R,QAAQ,0FAQpB,OAAO7F,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,MAAOA,EAAOC,cAAc,SAASC,cAAc,GACvE,C,yIC5Fe,SAAS2X,EAAY9X,GAA6D,IAA5D,WAAE+X,EAAU,SAAE1W,EAAQ,UAAE2W,EAAY,QAAO,OAAEC,EAAS,GAAGjY,EAC5F,MAAOkF,EAAagT,IAAkB3T,EAAAA,EAAAA,WAAS,GAEzC4T,EAAgB1N,KACf,CAAC,YAAa,YAAa,cAAc2N,SAAS3N,EAAKlF,KAAK8S,iBAC/DpS,EAAAA,GAAQ0D,MAAM,sCACP,GAML2O,EAAQ,CACZtX,KAAM,OACNmX,eACA9N,UAAU,EACVC,gBAAgB,EAChBC,OAAQ,oBACRC,cAAe7J,IAAe,IAAd,KAAE8J,GAAM9J,EACtB,MAAMgK,EAAS,IAAIC,WACnBD,EAAO4N,UAAYvQ,UACjB,IACEkQ,GAAe,GACf,MAAMlN,QAAewN,EAAAA,EAAAA,IAAmB,CAAEzN,UAAWJ,EAAOK,SAC5DkN,GAAe,GACfH,EAAiB,OAAN/M,QAAM,IAANA,OAAM,EAANA,EAAQxD,OACrB,CAAE,MAAOmC,GACPM,QAAQqB,IAAI3B,GACZuO,GAAe,EACjB,GAEFvN,EAAOE,cAAcJ,EAAK,GAI9B,OACErK,EAAAA,EAAAA,KAACqY,EAAAA,EAAO,CACNC,WAAS,EACTC,gBAAc,EACdV,OAAQA,EACRW,QAAQ,SACRZ,UAAWA,EACXa,UAAU,cACVC,WAAYX,EAAa9W,UAEzBjB,EAAAA,EAAAA,KAACuD,EAAAA,QAAM,IAAK2U,EAAKjX,UACfjB,EAAAA,EAAAA,KAACoL,EAAAA,EAAI,CAACC,SAAUvG,EAAY7D,SAAEA,OAItC,C,0BClDe,SAASoR,EAAazS,GAA8B,IAA7B,QAAE6I,EAAU,GAAE,SAAE6J,GAAU1S,EAC9D,MAAM+Y,EAAalQ,EACfA,EAAQmQ,WAAW,QACjBnQ,GACAjB,EAAAA,EAAAA,IAAaiB,GACf,KAEJ,OACEzF,EAAAA,EAAAA,MAAA,OAAK7C,UAAU,YAAWc,SAAA,CACvB0X,IAAc3Y,EAAAA,EAAAA,KAACsH,EAAAA,EAAM,CAAC3E,KAAK,QAAQ4E,IAAKoR,KAEzC3Y,EAAAA,EAAAA,KAAC0X,EAAY,CAACC,WAAYrF,EAASrR,UACjC+B,EAAAA,EAAAA,MAACmD,EAAAA,GAAM,CAACC,MAAMpG,EAAAA,EAAAA,KAAC6Y,EAAAA,EAAc,IAAI5X,SAAA,CAAC,YAAU0X,EAAa,SAAW,gBAI5E,C,kHClBA,MAAM,WAAE3L,EAAU,aAAEC,GAAiBC,EAAAA,YAC/B,QAAE4L,EAAO,KAAEC,EAAI,MAAEC,GAAUC,EAAAA,gBAE3BC,EAAS,CACb,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEWC,EAAiBA,IAAMD,EAAOE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOnL,SAEhEwL,EAAiBC,GAAc,IAAI9M,KAAK8M,GAAWC,eAEnDlF,EAAkB,CAC7B,CAAE1N,IAAKmG,EAAY3F,MAAO2F,EAAYxH,MAAO,gBAAiBwD,KAAM,cACpE,CAAEnC,IAAKoG,EAAc5F,MAAO4F,EAAczH,MAAO,eAAgBwD,KAAM,cAI5DoJ,EAAc,eAACvL,EAAGiH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGd,EAAU,OAAKuH,EAAgB5L,MAAM7F,GAASA,EAAK+D,MAAQA,GAAK,EAIrFoQ,EAAiB,SAAC9R,EAAMkQ,GAA+B,IAAtBwB,EAAW/I,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC1D,MAAMzL,EAHuB8C,IAASmQ,EAAAA,EAAcnQ,GAGtCuU,CAAevU,GAE7B,OAAIkQ,IAAYyD,EAAe,QAAN1Y,OAAeiC,EAAK,YACzCgT,IAAY0D,EAAY,QAAN3Y,OAAeiC,EAAK,WAAAjC,OAAUyW,GAChDxB,IAAY2D,EAAa,QAAN5Y,OAAeiC,EAAK,YAAAjC,OAAWyW,GAE/C,EACT,EAEa/F,EAAkB,WAC7B,OAD4ChD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACzBoH,QAAO,CAACrV,EAAOiD,KACnC,GAAS,OAAJA,QAAI,IAAJA,IAAAA,EAAMsS,YAAa,OAAOvV,EAE/B,MAAM,KAAEsF,EAAI,SAAEwU,EAAQ,KAAEC,GAAS9W,EAE3B+W,EAAgB,SAACxE,EAASyE,GAAgD,IAArCjD,EAAW/I,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIgJ,EAAShJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACvE,MAAMsH,GAAe0E,GAAa,IAAIC,WAAWhM,OAAS,EAE1D,MAAO,CACL5I,OACAkQ,UACAyB,YACAgD,YACAjD,cACAzB,cACA5U,SAAU4U,EACVjO,IAAI,GAAD/G,OAAK+E,EAAI,KAAA/E,OAAIiV,GAEpB,EAKA,MAAO,IACFxV,EACHga,EAAcf,EAASa,GACvBE,EAAcd,EAAU,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMD,SANJ7W,KAAI,IAAAkX,EAAA,OACtB,OAAJlX,QAAI,IAAJA,GAAsD,QAAlDkX,EAAJlX,EAAMmX,SAAStR,MAAK/I,IAAA,IAAC,GAAEsP,GAAItP,EAAA,OAAKsP,KAAW,OAAJpM,QAAI,IAAJA,OAAI,EAAJA,EAAM6W,SAAS,eAAAK,OAAlD,EAAJA,EAAwDpZ,OAAQ,EAAE,EAK9BsZ,CAAeN,IACpD,GACA,GACL,EAGaO,EAAiBC,IAC5B,MAAMC,EAAW,IAAIC,EAAAA,SACfC,EAAQF,EAASG,aAAa,gBAE9B,qBAAEC,EAAuB,IAAOL,EAAM,IAAM,CAAC,GAC5CM,EAAQC,EAAQC,EAAQC,GAAUJ,EAEzCF,EAAMO,QAAU,CACd,CAAExZ,OAAQ,iBAAkBuF,IAAK,SACjC,CAAEvF,OAAQ,aAAcuF,IAAK,cAC7B,CAAEvF,OAAQ,cAAeuF,IAAK,eAC9B,CAAEvF,OAAQ,mBAAoBuF,IAAK,mBACnC,CAAEvF,OAAQ,iBAAkBuF,IAAK,gBACjC,CAAEvF,OAAQ,kBAAmBuF,IAAK,mBAClC,CAAEvF,OAAQ,oBAAqBuF,IAAK,qBACpC,CAAEvF,OAAO,eAADlB,OAAuB,OAANsa,QAAM,IAANA,OAAM,EAANA,EAAQK,UAAYlU,IAAK,UAClD,CAAEvF,OAAO,eAADlB,OAAuB,OAANua,QAAM,IAANA,OAAM,EAANA,EAAQI,UAAYlU,IAAK,UAClD,CAAEvF,OAAQ,aAAcuF,IAAK,oBAC7B,CAAEvF,OAAQ,aAAcuF,IAAK,oBAC7B,CAAEvF,OAAQ,OAAQuF,IAAK,eACvB,CAAEvF,OAAQ,QAASuF,IAAK,gBACxB,CAAEvF,OAAO,eAADlB,OAAuB,OAANwa,QAAM,IAANA,OAAM,EAANA,EAAQG,UAAYlU,IAAK,UAClD,CAAEvF,OAAO,eAADlB,OAAuB,OAANya,QAAM,IAANA,OAAM,EAANA,EAAQE,UAAYlU,IAAK,UAClD,CAAEvF,OAAQ,YAAauF,IAAK,cAG9BuT,EAAMY,SAASC,IAAU,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACtB,MAAM,cAAEC,EAAa,MAAEC,EAAK,aAAEC,EAAY,YAAEC,EAAW,UAAEC,EAAS,qBAAEnB,GAClEQ,GAEKP,EAAQC,EAAQC,EAAQC,GAAUJ,EAEzCF,EAAMsB,OAAO,CACXC,OAAoB,OAAbN,QAAa,IAAbA,OAAa,EAAbA,EAAeM,QAAS,QAC/BC,YAAiB,OAALN,QAAK,IAALA,OAAK,EAALA,EAAO7a,OAAQ,KAC3Bob,aAAkB,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOxN,QAAS,KAC7BgO,iBAAsB,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOS,aAAc,KACtCR,aAAcA,EAAe,MAAQ,KACrCS,iBAA4B,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaG,QAAS,KACvCM,mBAA8B,OAAXT,QAAW,IAAXA,OAAW,EAAXA,EAAaU,UAAW,KAC3C3B,OAAQA,IAAe,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ4B,UAAkB,KAC3C3B,OAAc,OAANA,QAAM,IAANA,GAAAA,EAAQ2B,QAAO,YAAAlc,QAAqB,OAANua,QAAM,IAANA,GAAe,QAATO,EAANP,EAAQ2B,eAAO,IAAApB,OAAT,EAANA,EAAiBqB,UAAW,MAAS,KAC3EC,kBAAwB,OAAN7B,QAAM,IAANA,GAAe,QAATQ,EAANR,EAAQ2B,eAAO,IAAAnB,OAAT,EAANA,EAAiBsB,YAAa,KAChDC,kBAAwB,OAAN/B,QAAM,IAANA,GAAe,QAATS,EAANT,EAAQ2B,eAAO,IAAAlB,OAAT,EAANA,EAAiBuB,YAAa,KAChDC,aAAmB,OAANjC,QAAM,IAANA,GAAe,QAATU,EAANV,EAAQ2B,eAAO,IAAAjB,OAAT,EAANA,EAAiBza,OAAQ,KACtCic,cAAoB,OAANlC,QAAM,IAANA,GAAe,QAATW,EAANX,EAAQ2B,eAAO,IAAAhB,OAAT,EAANA,EAAiBrN,QAAS,KACxC2M,OAAQA,IAAe,OAANA,QAAM,IAANA,GAAe,QAATW,EAANX,EAAQ0B,eAAO,IAAAf,OAAT,EAANA,EAAiBuB,SAAiB,KACnDjC,OAAQA,EAAgB,OAANA,QAAM,IAANA,GAAAA,EAAQkC,YAAc,MAAQ,KAAQ,KACxDvD,UAAW,IAAI9M,KAAKkP,GAAWoB,kBAC/B,IAGJ3C,EAAS4C,KAAKC,cAActL,MAAMuL,IAChC,MAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9BhY,KAAM,sEAEFmY,EAAMC,OAAOC,IAAIC,gBAAgBL,GACjCM,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOP,EACTI,EAAEI,SAAW,kBACbJ,EAAEK,OAAO,GACT,C","sources":["components/Accordian.js","components/TextEditor.js","pages/layouts/SuggestionModal.js","pages/dashboard/layouts/PollSharingImage.js","pages/dashboard/NewAutomation.js","components/CopyText.js","pages/dashboard/layouts/AutomationCongrats.js","pages/dashboard/layouts/PreviewAutomationImage.js","pages/dashboard/layouts/SocialPostingItem.js","pages/layouts/CustomUpload.js","pages/layouts/HeadshotImage.js","utils/common.js"],"sourcesContent":["import { Collapse } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\n\nexport default function Accordian({ items = [], defaultActive = '', marginBottom = true }) {\n  return (\n    <Collapse\n      items={items}\n      bordered={false}\n      className={`bg-F7F3F9 ${marginBottom ? 'mb-2' : ''}`}\n      defaultActiveKey={defaultActive ? [defaultActive] : []}\n      expandIcon={({ isActive }) => (isActive ? <MinusOutlined /> : <PlusOutlined />)}\n    />\n  );\n}\n","import { Form } from 'antd';\nimport ReactQuill from 'react-quill';\n\nexport default function TextEditor({ name, ...params }) {\n  const toolbarOptions = [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'],\n    ['link', 'image'],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n    [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n    [{ direction: 'rtl' }], // text direction\n\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    ['clean'], // remove formatting button\n  ];\n\n  return (\n    <Form.Item name={name} {...params?.formItemParams}>\n      <ReactQuill theme=\"snow\" modules={{ toolbar: toolbarOptions }} {...params} />\n    </Form.Item>\n  );\n}\n","import PropTypes from 'prop-types';\nimport SimpleBar from 'simplebar-react';\nimport { Modal, List, Typography } from 'antd';\n\nSuggestionModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nexport default function SuggestionModal({ open, onCancel }) {\n  const suggestions = [\n    'BENEFIT TO VOTER:',\n    'Learn 3 mistakes to avoid...',\n    'Hear the juicy details',\n    'Ask Anything & Hear The Answer',\n    'Make our podcast perfect for you...',\n    'Have us discuss what you want to know',\n    'Hear some step by step instructions',\n    'Get free help from our guest speaker',\n  ];\n\n  return (\n    <Modal centered open={open} footer={false} title=\"Suggestions\" onCancel={onCancel}>\n      <SimpleBar style={{ maxHeight: 'calc(100vh - 200px)', paddingRight: 10 }}>\n        <List\n          size=\"small\"\n          header={false}\n          footer={false}\n          bordered={false}\n          dataSource={suggestions}\n          renderItem={(item, index) => (\n            <List.Item className=\"pl-0 pr-0\">\n              {index + 1}. <Typography.Text copyable>{item}</Typography.Text>\n            </List.Item>\n          )}\n        />\n      </SimpleBar>\n    </Modal>\n  );\n}\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { FILE_TYPE } from '../../../utils/types';\nimport { getFullS3Url } from '../../../config-global';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuthContext } from '../../../auth/AuthProvider';\nimport { deleteFile, uploadImages, generatePollImage } from '../../../reducers/fileSlice';\nimport {\n  List,\n  Form,\n  Spin,\n  Modal,\n  Select,\n  Button,\n  Input,\n  Avatar,\n  Upload,\n  Tooltip,\n  Statistic,\n  Typography,\n  Popconfirm,\n  ColorPicker,\n  notification,\n} from 'antd';\nimport { PlusOutlined, InboxOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport Simplebar from 'simplebar-react';\n// import PollAudioRecord from './PollAudioRecord';\nimport Accordian from '../../../components/Accordian';\n// import CustomUpload from '../../layouts/CustomUpload';\nimport SuggestionModal from '../../layouts/SuggestionModal';\nimport PreviewAutomationImage from './PreviewAutomationImage';\n\nconst { Option } = Select;\nconst { Dragger } = Upload;\nconst { Text, Paragraph } = Typography;\n\nexport default function PollSharingImage() {\n  const { user } = useAuthContext();\n\n  const form = Form.useFormInstance();\n  const pollImageSrc = Form.useWatch('pollImageSrc', form);\n  const audioDuration = Form.useWatch('audioDuration', form);\n  // const socialShareFileSrc = Form.useWatch('socialShareFileSrc', form);\n\n  // Local States\n  const [countdownTime, setCountdownTime] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [showAddManageImages, setShowAddManageImages] = useState(false);\n\n  // Redux States\n  const dispatch = useDispatch();\n  const { files, isLoading, isUploading } = useSelector((state) => state.files);\n  const images = files.filter(({ type }) => type === FILE_TYPE.IMAGE);\n\n  const getFormName = (name) => ['pollSharingImage', name];\n\n  const TextColorFormItem = ({ label, title, formType }) => {\n    return (\n      <div className={`flex-item gap-2 mb-2 ${isMobile && 'flex-column full-width-cols'}`}>\n        <Form.Item\n          label={label}\n          name={getFormName(`${formType}Text`)}\n          className={isMobile ? 'w-100' : 'w-40 m-0'}\n          rules={[{ max: 45, message: 'Maximum 45 character are allowed.' }]}\n        >\n          <Input\n            maxLength={45}\n            placeholder=\"Enter the text here\"\n            suffix={\n              <Tooltip title=\"Show Suggestions\">\n                <Button\n                  type=\"text\"\n                  size=\"small\"\n                  icon={<QuestionCircleOutlined />}\n                  onClick={() => setShowSuggestions(true)}\n                />\n              </Tooltip>\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} BG COLOR`}\n          name={getFormName(`${formType}BgColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}BgColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          className=\"flex-1 m-0\"\n          label={`${title} TEXT COLOR`}\n          name={getFormName(`${formType}TextColor`)}\n        >\n          <ColorPicker\n            showText\n            onChangeComplete={(metaColor) =>\n              form.setFieldValue(getFormName(`${formType}TextColor`), metaColor.toHexString())\n            }\n          />\n        </Form.Item>\n      </div>\n    );\n  };\n\n  const onPollImageGenerateClick = async () => {\n    const formValues = form.getFieldsValue();\n\n    const { audio, guest, pollSharingImage, hostSpeakerLabel, guestSpeakerLabel } = formValues;\n\n    // user logo\n    const pollSharingImageInfo = {\n      ...pollSharingImage,\n      audio,\n      userLogo: guest?.picture || '',\n      showLogo: images.find(({ _id }) => _id === pollSharingImage.logo)?.s3Path,\n      host: {\n        fontColor: '#000000',\n        label: hostSpeakerLabel,\n        text: `${user.firstName} ${user.lastName} ${\n          user?.profile?.organization ? `(${user?.profile?.organization})` : ''\n        }`,\n      },\n      guest: {\n        fontColor: '#000000',\n        label: guestSpeakerLabel,\n        text: `${guest.fullName} ${guest.organization ? `(${guest.organization})` : ''}`,\n      },\n    };\n\n    if (!pollSharingImageInfo.userLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please upload your headshot image first.',\n      });\n    } else if (!pollSharingImageInfo.showLogo) {\n      return notification.error({\n        message: 'Error',\n        description: 'Please select a logo image',\n      });\n    }\n\n    setIsGenerating(true);\n    setCountdownTime(audioDuration || 60);\n\n    try {\n      const { imageS3Path, videoS3Path } = await generatePollImage(pollSharingImageInfo);\n\n      form.setFieldValue('pollImageSrc', imageS3Path);\n      if (videoS3Path) form.setFieldValue('socialShareFileSrc', videoS3Path);\n\n      notification.success({\n        message: 'Success',\n        description: 'Automation sharing image generated successfully',\n      });\n    } catch (error) {\n      console.error(error);\n      notification.error({\n        message: 'Error',\n        description: 'Something went wrong',\n      });\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const items = [\n    {\n      key: 'pollSharingImage',\n      label: 'Customize Automation Sharing Image',\n      children: (\n        <>\n          <div className={`flex-item gap-2 mb-2 ${isMobile && 'flex-column'}`}>\n            <Form.Item\n              label=\"LOGO IMAGE FROM\"\n              name={getFormName('logo')}\n              className={`m-0 ${isMobile ? 'w-100' : 'w-40'}`}\n            >\n              <Select\n                loading={isLoading}\n                disabled={isLoading}\n                className=\"minw-200px\"\n                placeholder=\"Select an Image\"\n              >\n                {images.map(({ _id, name, s3Path }) => (\n                  <Option key={_id} value={_id}>\n                    <Avatar src={getFullS3Url(s3Path)} size={32} />\n                    <Text style={{ marginLeft: 5 }}>{name}</Text>\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n            <Button\n              type=\"link\"\n              block={isMobile}\n              icon={<PlusOutlined />}\n              onClick={() => setShowAddManageImages(true)}\n            >\n              ADD/MANAGE IMAGES\n            </Button>\n          </div>\n\n          <TextColorFormItem label=\"HEADLINE HOOK\" title=\"HEADLINE\" formType=\"header\" />\n          <TextColorFormItem label=\"FOOTER BENEFIT\" title=\"FOOTER\" formType=\"footer\" />\n\n          {/* <PollAudioRecord name={getFormName('audio')} /> */}\n\n          <div className={`flex-item gap-2 mt-4 ${isMobile && 'flex-column'}`}>\n            <Button\n              danger\n              type=\"primary\"\n              block={isMobile}\n              loading={isGenerating}\n              onClick={onPollImageGenerateClick}\n            >\n              Generate Invitation Post\n            </Button>\n            {/* <CustomUpload\n              cropShape=\"rect\"\n              aspect={1.91 / 1}\n              onComplete={(value) => form.setFieldValue('pollImageSrc', value)}\n            >\n              <Button type=\"default\">UPLOAD YOUR OWN</Button>\n            </CustomUpload> */}\n\n            <PreviewAutomationImage\n              pollImageSrc={pollImageSrc}\n              prevEl={\n                <Button type=\"default\" block={isMobile} disabled={!pollImageSrc}>\n                  Preview Invitation Post\n                </Button>\n              }\n            />\n\n            {/* <Modal\n              centered\n              footer={false}\n              open={showPollImagePreview}\n              width={isMobile ? '100%' : '50%'}\n              title=\"Preview Video Invitation Post\"\n              onCancel={() => setShowPollImagePreview(false)}\n            >\n              <video\n                controls\n                src={getFullS3Url(socialShareFileSrc)}\n                style={{ width: '100%', height: 'auto' }}\n              />\n            </Modal> */}\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  const uploadProps = {\n    name: 'file',\n    multiple: true,\n    showUploadList: false,\n    accept: '.png, .gif, .jpeg, .jpg',\n    customRequest: async ({ file }) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = async () => {\n        const imageData = reader.result.split(',')[1];\n        const requestBody = {\n          images: [\n            {\n              name: file.name,\n              imageData: `data:${file.type};base64,${imageData}`,\n            },\n          ],\n        };\n        dispatch(uploadImages(requestBody));\n      };\n    },\n    onDrop(e) {\n      console.log('Dropped files', e.dataTransfer.files);\n    },\n  };\n\n  return (\n    <>\n      <Accordian items={items} defaultActive=\"pollSharingImage\" />\n\n      <SuggestionModal open={showSuggestions} onCancel={() => setShowSuggestions(false)} />\n\n      <Modal\n        centered\n        footer={false}\n        title=\"Add/Manage Images\"\n        open={showAddManageImages}\n        onCancel={() => setShowAddManageImages(false)}\n      >\n        <Paragraph>Add New Image</Paragraph>\n        <Spin spinning={isUploading} tip=\"Uploading...\">\n          <Dragger {...uploadProps}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n            <p className=\"ant-upload-hint\">Supported file types: PNG/JPG/JPEG</p>\n          </Dragger>\n        </Spin>\n\n        <Simplebar style={{ maxHeight: 420, paddingRight: 10 }}>\n          <List\n            size=\"small\"\n            footer={false}\n            bordered={false}\n            loading={isLoading}\n            dataSource={images}\n            header=\"Available Images\"\n            renderItem={({ _id, name, s3Path }) => (\n              <List.Item\n                actions={[\n                  <Popconfirm\n                    key=\"delete\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Delete Image\"\n                    onConfirm={() => dispatch(deleteFile(_id))}\n                    description=\"Are you sure to delete this image?\"\n                  >\n                    <Button danger size=\"small\">\n                      Delete\n                    </Button>\n                  </Popconfirm>,\n                ]}\n                className=\"pl-0 pr-0\"\n              >\n                <List.Item.Meta\n                  title={name}\n                  style={{ alignItems: 'center' }}\n                  avatar={<Avatar src={getFullS3Url(s3Path)} />}\n                />\n              </List.Item>\n            )}\n          />\n        </Simplebar>\n      </Modal>\n\n      <Modal\n        centered\n        footer={false}\n        destroyOnClose\n        closable={false}\n        keyboard={false}\n        open={isGenerating}\n        maskClosable={false}\n        title=\"Video is getting Generated...\"\n      >\n        <Paragraph className=\"mt-2\">\n          Please wait while we generate your video. This may take a few minutes.\n        </Paragraph>\n\n        <Statistic.Countdown\n          format=\"mm:ss\"\n          title=\"Estimated Time:\"\n          className=\"text-center wait-countdown\"\n          value={Date.now() + countdownTime * 3 * 1000}\n          onFinish={() => setCountdownTime(audioDuration || 60)}\n        />\n      </Modal>\n    </>\n  );\n}\n","import dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { useState, useEffect } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { getFiles } from '../../reducers/fileSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAuthContext } from '../../auth/AuthProvider';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { GUEST_TYPE, POLL_STATUS } from '../../utils/types';\nimport { pollTypeOptions, getPollType, getSocialsItems } from '../../utils/common';\nimport { addGuest, fetchGuest, updateGuest, updateState } from '../../reducers/guestsSlice';\nimport {\n  Row,\n  Col,\n  List,\n  Form,\n  Space,\n  Input,\n  Radio,\n  Steps,\n  Button,\n  Switch,\n  DatePicker,\n  Typography,\n} from 'antd';\nimport AppTitle from '../../components/AppTitle';\nimport TextEditor from '../../components/TextEditor';\nimport HeadshotImage from '../layouts/HeadshotImage';\nimport PollSharingImage from './layouts/PollSharingImage';\nimport SocialPostingItem from './layouts/SocialPostingItem';\nimport AutomationCongrats from './layouts/AutomationCongrats';\n\ndayjs.extend(utc);\n\nconst { Text, Title, Paragraph } = Typography;\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\n\nconst hostInfoFields = [\n  {\n    label: 'FULL NAME',\n    name: ['guest', 'fullName'],\n    rules: [{ required: true }],\n  },\n  {\n    label: 'CELL PHONE',\n    name: ['guest', 'phone'],\n  },\n  {\n    label: 'EMAIL ADDRESS',\n    name: ['guest', 'email'],\n    rules: [{ required: true }],\n  },\n  {\n    name: ['guest', 'about'],\n    label: 'BIO OR SOCIAL URL',\n  },\n  {\n    name: ['guest', 'jobTitle'],\n    label: 'JOB TITLE',\n  },\n  {\n    name: ['guest', 'organization'],\n    label: 'ORGANIZATION',\n  },\n];\n\nconst topicLabels = ['TOPIC OR STORY1', 'TOPIC OR STORY2'];\n\nconst pollInfoFields = [\n  {\n    name: 'hostSpeakerLabel',\n    label: 'YOUR SPEAKER LABEL',\n  },\n  {\n    name: 'guestSpeakerLabel',\n    label: 'THEIR SPEAKER LABEL',\n  },\n  {\n    name: 'hostOfferUrl',\n    label: 'YOUR REWARD URL',\n  },\n  {\n    name: 'guestOfferUrl',\n    label: 'THEIR REWARD URL',\n  },\n  {\n    required: true,\n    name: 'presentationName',\n    label: 'Name of presentation or podcast',\n  },\n];\n\nconst getGuesUsertObj = (userObj = null) => {\n  return {\n    email: userObj?.email,\n    phone: userObj ? userObj.profile?.phone : '',\n    about: userObj ? userObj?.profile?.about : '',\n    picture: userObj ? userObj?.profile?.picture : '',\n    jobTitle: userObj ? userObj?.profile?.jobTitle : '',\n    organization: userObj ? userObj?.profile?.organization : '',\n    fullName: userObj ? `${userObj?.firstName} ${userObj?.lastName}` : '',\n  };\n};\n\nconst getPostSharingImageInfo = (obj) => {\n  const { logo, header = null, footer = null } = obj || {};\n\n  return {\n    logo,\n    headerText: (header && header?.text) || '',\n    headerBgColor: (header && header?.bgColor) || '#1677FF',\n    headerTextColor: (header && header.textColor) || '#FFFFFF',\n    footerText: (footer && footer?.text) || '',\n    footerBgColor: (footer && footer?.bgColor) || '#1677FF',\n    footerTextColor: (footer && footer?.textColor) || '#FFFFFF',\n  };\n};\n\nexport default function NewAutomation({ isGuestAcceptance = false }) {\n  const { id } = useParams();\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useAuthContext();\n\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const isNew = id === undefined; // new automation\n  const guestTypeValue = Form.useWatch('guestType', form);\n  const isSoloSession = guestTypeValue === SOLO_SESSION;\n  const { guest, error, isLoading, isPublished, isPublishing } = useSelector(\n    (state) => state.guests\n  );\n\n  const {\n    _id = null,\n    audio = null,\n    socials = [],\n    guest: guestUser,\n    pollImageSrc = '',\n    pollImageInfo = null,\n    hostOfferUrl = null,\n    guestOfferUrl = null,\n    recordingDate = null,\n    presentationName = '',\n    guestType = HOST_GUEST,\n    hostSpeakerLabel = '',\n    guestSpeakerLabel = '',\n    socialShareFileSrc = '',\n    potentialTopics = ['', ''],\n    startHostAutomation = false,\n    emailTemplate = {\n      subject: '[PRESENTATION_NAME] NEXT STEPS',\n      body: `<blockquote>Hi [GUEST_FIRSTNAME], it's [USER_FULLNAME]. (To reach me, please reply all.) I use Upplaud to grow my audience; you can use it at no cost to reach more people too:</blockquote><blockquote>Can we post on our LinkedIn &amp; Facebook about [PODCAST / PRESENTATION NAME] before we do it? Upplaud makes it easy &amp; engaging. (See your private link &amp; password at the end.)</blockquote><blockquote>Here's how Upplaud grows our audience:</blockquote><blockquote>Instead of guessing what others want to know from both of us... Let's ask them! I chose 2 possible topics for our connections to vote on. They can even suggest their own topics privately.</blockquote><blockquote>I've already setup everything, including voting invitation posts for our Facebook &amp; LinkedIn. (It doesn't matter how active you are: Influencers on social media love engaging like this, and will share you with more people!)</blockquote><blockquote>We can also share our Upplaud voting page through email &amp; elsewhere. All you need to do is click the Grow Audience link below. It only takes a few seconds to connect your LinkedIn and/or Facebook to Upplaud. (I've connected mine already.)</blockquote><blockquote>Thanks for doing this now (and not procrastinating!) Every day counts to grow our audience: More time for more votes, more shares &amp; more results.</blockquote><blockquote>The link to click is below my name (be sure to reference your Private Password, to securely connect your social media). I'm excited to grow together.</blockquote><blockquote><br></blockquote><blockquote>Thanks again, see you soon. - [USER_FIRSTNAME]</blockquote><p><br></p>`,\n    },\n  } = guest || {};\n\n  // Default Socials Items\n  const defaultSocials = getSocialsItems(user?.socialAccounts || []);\n\n  useEffect(() => {\n    // Get files\n    dispatch(getFiles());\n\n    if (!isNew && id) dispatch(fetchGuest(id));\n\n    if (isNew) dispatch(updateState({ guest: null, isPublished: false }));\n\n    return () => dispatch(updateState({ guest: null }));\n  }, [isNew, id, dispatch]);\n\n  useEffect(() => {\n    guest && form.resetFields();\n\n    return () => form.resetFields();\n  }, [guest, form]);\n\n  useEffect(() => {\n    const { email, phone, about, picture, fullName } = getGuesUsertObj(\n      isSoloSession ? user : guestUser\n    );\n\n    form.setFieldsValue({ guest: { email, phone, about, picture, fullName } });\n  }, [user, guestUser, form, isSoloSession]);\n\n  // Handle Error\n  useEffect(() => {\n    if (error && error.status === 403) navigate('/403');\n\n    return () => dispatch(updateState({ error: null }));\n  }, [error, navigate, dispatch]);\n\n  const initialValues = {\n    guestType,\n    pollImageSrc,\n    hostOfferUrl,\n    emailTemplate,\n    guestOfferUrl,\n    potentialTopics,\n    presentationName,\n    hostSpeakerLabel,\n    guestSpeakerLabel,\n    socialShareFileSrc,\n    startHostAutomation,\n    audio: audio?._id || null,\n    audioDuration: audio?.duration || 0,\n    guest: getGuesUsertObj(guestUser),\n    socials: socials.length > 0 ? socials : defaultSocials,\n    pollSharingImage: getPostSharingImageInfo(pollImageInfo),\n    recordingDate: recordingDate ? dayjs.utc(recordingDate).local() : null,\n  };\n\n  const onFormSubmit = (status) => {\n    form\n      .validateFields()\n      .then((values) => {\n        values.status = status;\n        values.recordingDate = dayjs(values?.recordingDate).format();\n\n        if (isNew && !_id) {\n          dispatch(addGuest(values));\n        } else {\n          dispatch(updateGuest(id || _id, values));\n        }\n      })\n      .catch(console.log);\n  };\n\n  const stepItems = [\n    {\n      title: 'Got your info',\n      className: 'pointer-none',\n      content: <span>current-user-details</span>,\n    },\n    {\n      title: 'Guest info',\n      content: (\n        <>\n          <Title level={5}>{getPollType(guestTypeValue)?.text}</Title>\n\n          {hostInfoFields.map(({ label, name, rules = null }) => (\n            <Form.Item key={label} name={name} label={label} rules={isSoloSession ? null : rules}>\n              <Input placeholder={label} disabled={isSoloSession} />\n            </Form.Item>\n          ))}\n\n          <Form.Item name={['guest', 'picture']} label=\"HEADSHOT IMAGE\" className=\"m-0\">\n            <HeadshotImage\n              picture={Form.useWatch(['guest', 'picture'], form)}\n              onChange={(picture) => form.setFieldValue(['guest', 'picture'], picture)}\n            />\n          </Form.Item>\n        </>\n      ),\n    },\n    {\n      title: 'Topics info',\n      content: (\n        <>\n          <Title level={5}>Automation Info</Title>\n\n          {topicLabels.map((label, index) => (\n            <Form.Item\n              key={index}\n              label={label}\n              rules={[{ required: true }]}\n              name={['potentialTopics', index]}\n            >\n              <Input placeholder={label} />\n            </Form.Item>\n          ))}\n\n          {pollInfoFields.map(({ name, label, required = false }, i) => {\n            return (\n              <Form.Item\n                key={label}\n                name={name}\n                label={label}\n                rules={[{ required }]}\n                className={pollInfoFields.length - 1 === i ? 'm-0' : ''}\n              >\n                <Input placeholder={label} />\n              </Form.Item>\n            );\n          })}\n        </>\n      ),\n    },\n    {\n      title: 'Voter invites',\n      content: (\n        <>\n          <PollSharingImage />\n          <SocialPostingItem />\n        </>\n      ),\n    },\n    {\n      title: 'Guest invites',\n      content: (\n        <Row gutter={[24]}>\n          <Col span={isMobile ? 24 : 18}>\n            <Title level={4} className=\"mt-0\">\n              Invite Email\n            </Title>\n\n            <Paragraph strong className=\"mb-1\">\n              Subject\n            </Paragraph>\n            <Form.Item name={['emailTemplate', 'subject']} wrapperCol={24}>\n              <Input placeholder=\"Subject\" />\n            </Form.Item>\n\n            <Paragraph strong className=\"mb-1\">\n              Body\n            </Paragraph>\n            <TextEditor\n              name={['emailTemplate', 'body']}\n              placeholder=\"Enter your text here...\"\n              formItemParams={{ className: 'm-0', wrapperCol: 24 }}\n            />\n          </Col>\n          <Col span={isMobile ? 24 : 6}>\n            <Title level={5} className={isMobile ? 'mt-2' : 'mt-0'}>\n              Short Codes\n            </Title>\n\n            <List\n              bordered\n              size=\"small\"\n              itemLayout=\"horizontal\"\n              renderItem={(item) => <List.Item>{item}</List.Item>}\n              dataSource={[\n                '[USER_FIRSTNAME]',\n                '[USER_LASTNAME]',\n                '[USER_FULLNAME]',\n                '[GUEST_FIRSTNAME]',\n                '[GUEST_LASTNAME]',\n                '[GUEST_FULLNAME]',\n                '[PRESENTATION_NAME]',\n              ]}\n            />\n          </Col>\n        </Row>\n      ),\n    },\n    {\n      title: 'UPPLAUD LAUNCH',\n      content: (\n        <>\n          <Form.Item\n            name=\"recordingDate\"\n            label=\"Automation End Date\"\n            rules={[{ required: true }]}\n            className={isMobile ? 'w-100' : 'w-50 mt-4'}\n          >\n            <DatePicker\n              className={isMobile ? 'w-100' : 'w-75 ml-0'}\n              disabledDate={(d) =>\n                d && (d < dayjs().subtract(1, 'day') || d > dayjs().add(1, 'years'))\n              }\n            />\n          </Form.Item>\n\n          <div className=\"flex-item position-relative\">\n            <Form.Item\n              className=\"m-0\"\n              labelCol={{ span: 20 }}\n              valuePropName=\"checked\"\n              label=\"POSTING STARTS NOW\"\n              name=\"startHostAutomation\"\n            >\n              <Switch disabled={isSoloSession} />\n            </Form.Item>\n            <Text\n              type=\"secondary\"\n              className=\"ml-1\"\n              style={{ ...(isMobile && { left: 50, bottom: 10, position: 'absolute' }) }}\n            >\n              Start when they starts\n            </Text>\n          </div>\n\n          <Space\n            className=\"mt-4 w-100\"\n            size={isMobile ? 12 : 20}\n            direction={isMobile ? 'vertical' : 'horizontal'}\n          >\n            <Button block={isMobile} onClick={() => setCurrentStep((c) => c - 1)}>\n              Back\n            </Button>\n\n            <Button\n              block={isMobile}\n              loading={isLoading && !isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.DRAFT)}\n            >\n              SAVE DRAFT\n            </Button>\n            <Button\n              type=\"primary\"\n              block={isMobile}\n              loading={isLoading && isPublishing}\n              onClick={() => onFormSubmit(POLL_STATUS.PUBLISHED)}\n            >\n              LAUNCH AUTOMATION\n            </Button>\n          </Space>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"automation-form\">\n      {!isGuestAcceptance && <AppTitle title={`${isNew ? 'New' : 'Update'} Automation`} />}\n\n      <div className=\"add-guest\">\n        <Title level={isMobile ? 3 : 1} className=\"m-0\">\n          NEW UPPLAUD AUTOMATION\n        </Title>\n\n        {!isPublished && (\n          <Title level={5} className=\"fw-400\" type=\"secondary\">\n            Pull in more interest when your upplaud automation is posted automatically.\n          </Title>\n        )}\n      </div>\n\n      {!isPublished && (\n        <Form\n          form={form}\n          size=\"large\"\n          labelWrap={true}\n          labelAlign=\"left\"\n          layout=\"horizontal\"\n          // requiredMark={false}\n          labelCol={{ span: 7 }}\n          wrapperCol={{ span: 17 }}\n          initialValues={initialValues}\n        >\n          <Form.Item hidden name=\"pollImageSrc\" label=\"Poll Image\">\n            <Input placeholder=\"Poll Image\" />\n          </Form.Item>\n\n          <Form.Item hidden name=\"socialShareFileSrc\" label=\"Social Share File\">\n            <Input placeholder=\"Social Share File\" />\n          </Form.Item>\n\n          <Form.Item name=\"guestType\" className=\"mb-1\">\n            <Radio.Group options={pollTypeOptions} />\n          </Form.Item>\n\n          <Title level={4} className=\"mt-0\">\n            Quick Steps:\n          </Title>\n          <Steps current={currentStep} items={stepItems} onChange={setCurrentStep} />\n\n          {stepItems.map((item, index) => (\n            <div\n              key={index}\n              className=\"mt-2 mb-2\"\n              style={{ display: currentStep === index ? 'block' : 'none' }}\n            >\n              {item?.content}\n            </div>\n          ))}\n\n          {/* <div className=\"mt-2 mb-2\">{stepItems[currentStep]?.content}</div> */}\n\n          {currentStep !== stepItems.length - 1 && (\n            <div className=\"flex-item gap-1 flex-center\">\n              {currentStep < stepItems.length - 1 && (\n                <Button\n                  block={isMobile}\n                  type=\"primary\"\n                  onClick={() => {\n                    // form\n                    //   .validateFields()\n                    //   .then(() => setCurrentStep((c) => c + 1))\n                    //   .catch(console.log);\n                    setCurrentStep((c) => c + 1);\n                  }}\n                >\n                  Next Step\n                </Button>\n              )}\n\n              {currentStep > 1 && (\n                <Button block={isMobile} onClick={() => setCurrentStep((c) => c - 1)}>\n                  Back\n                </Button>\n              )}\n            </div>\n          )}\n        </Form>\n      )}\n\n      {isPublished && (\n        <AutomationCongrats\n          guest={guest}\n          showActionBtns\n          onGoBack={() => dispatch(updateState({ isPublished: false }))}\n        />\n      )}\n    </div>\n  );\n}\n","import { Typography } from 'antd';\nimport PropTypes from 'prop-types';\n\nCopyText.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default function CopyText({ text = '', className = '', onCopy = () => {} }) {\n  return (\n    <div className={`p-1 br-5px bg-sky-6 border-sky-1 ${className}`}>\n      <Typography.Paragraph ellipsis copyable={{ onCopy }} className=\"m-0 flex-item space-between\">\n        {text}\n      </Typography.Paragraph>\n    </div>\n  );\n}\n","import { Button, Typography } from 'antd';\nimport { isMobile } from 'react-device-detect';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\nimport { SOCIAL_TITLES } from '../../../utils/types';\nimport { useAuthContext } from '../../../auth/AuthProvider';\nimport { ArrowLeftOutlined, CheckOutlined } from '@ant-design/icons';\nimport CopyText from '../../../components/CopyText';\n// import PreviewAutomationVideo from './PreviewAutomationVideo';\nimport PreviewAutomationImage from './PreviewAutomationImage';\n\nconst { Title } = Typography;\n\nexport default function AutomationCongrats({ guest, showActionBtns = false, onGoBack = () => {} }) {\n  const navigate = useNavigate();\n  const { user } = useAuthContext();\n  const startHostAutomation = guest?.startHostAutomation || false;\n\n  const connectedSocials = (guest?.socials || []).reduce((acc, item) => {\n    if (!item || !item.isConnected) return acc;\n\n    const { type, subType } = item;\n\n    return [...acc, `${SOCIAL_TITLES[type]} ${subType}`];\n  }, []);\n\n  return (\n    <div className={`mt-2 bg-F7F3F9 br-5px ${isMobile ? 'p-2' : 'p-3'}`}>\n      <Title level={isMobile ? 4 : 3}>\n        👏 Congrats, your new Upplaud is ready to pull in new interest!\n      </Title>\n      <Title level={5}>\n        Voters will be directed to:{' '}\n        <Link target=\"_blank\" to={`/vote/${user?.userName}/${guest?.uniqueId}`}>\n          Voting Page\n        </Link>\n      </Title>\n\n      <Title level={5}>You've connected:</Title>\n      <ul>\n        {connectedSocials.map((item, key) => (\n          <li key={key} className=\"capitalize\">\n            {item}\n          </li>\n        ))}\n      </ul>\n\n      <Title level={5}>\n        Preview your voter invitation post:{' '}\n        {/* <PreviewAutomationVideo className=\"ml-1\" socialShareFileSrc={guest?.socialShareFileSrc} />{' '} */}\n        <PreviewAutomationImage\n          className=\"ml-1\"\n          pollImageSrc={guest?.pollImageSrc}\n          prevEl={<Button size=\"small\">Preview</Button>}\n        />\n      </Title>\n\n      <Title level={5} className=\"mb-1\">\n        Your guest will be invited to connect here:{' '}\n        <Link target=\"_blank\" to={`/guest-acceptance/${user?.userName}/${guest?.uniqueId}`}>\n          Guest Invitation Page\n        </Link>\n      </Title>\n      <Title level={5} className={`mt-0 ${isMobile && 'mb-0'}`}>\n        Their private invite password is:{' '}\n        <CopyText\n          text={guest?.password}\n          className={`d-inline-block ${isMobile ? 'w-100' : 'w-125px ml-1'}`}\n        />\n      </Title>\n\n      <Title level={isMobile ? 5 : 4} className={isMobile && 'mt-2'}>\n        We'll start posting{' '}\n        {startHostAutomation ? 'when your guest connects their social media.' : 'later today!'}\n      </Title>\n\n      {showActionBtns && (\n        <>\n          <Button\n            size=\"large\"\n            type=\"default\"\n            block={isMobile}\n            onClick={onGoBack}\n            icon={<ArrowLeftOutlined />}\n          >\n            Go back to make any changes.\n          </Button>\n\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            block={isMobile}\n            icon={<CheckOutlined />}\n            className=\"d-block mt-2 text-wrap\"\n            onClick={() => navigate(PATH_DASHBOARD.dashboard.automations)}\n          >\n            CONFIRM YOUR NEW UPPLAUD & SEE YOUR OTHER AUTOMATIONS\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n","import { Image } from 'antd';\nimport { useState } from 'react';\nimport { getFullS3Url } from '../../../config-global';\n\nexport default function PreviewAutomationImage({\n  prevEl = null,\n  className = '',\n  pollImageSrc = '',\n}) {\n  const [showPollImagePreview, setShowPollImagePreview] = useState(false);\n\n  return (\n    <>\n      <span className={className} onClick={() => setShowPollImagePreview(true)}>\n        {prevEl || 'Preview'}\n      </span>\n\n      <Image\n        style={{ display: 'none' }}\n        src={getFullS3Url(pollImageSrc)}\n        preview={{\n          visible: showPollImagePreview,\n          onVisibleChange: (value) => setShowPollImagePreview(value),\n        }}\n      />\n    </>\n  );\n}\n","import Accordian from '../../../components/Accordian';\nimport { isMobile } from 'react-device-detect';\nimport { getSocialLabel } from '../../../utils/common';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Select, Form, Alert, Tooltip } from 'antd';\n\nexport default function SocialPostingItem() {\n  const form = Form.useFormInstance();\n  const socialItems = Form.useWatch('socials', form) || [];\n\n  const postingOptions = [4, 3, 2, 1].map((value) => ({\n    value,\n    label: `Post [${value}x] monthly`,\n  }));\n\n  // Update Socials\n  const onChangeSet = (_id, field, value) => {\n    const items = socialItems.map((item) =>\n      item._id === _id ? { ...item, [field]: value } : item\n    );\n\n    form.setFieldValue('socials', items);\n  };\n\n  const hasSocials = socialItems.length > 0;\n  const items = [\n    {\n      key: 'social',\n      label: 'Confirm Socials & Posting Frequency',\n      children: (\n        <div className=\"flex-item gap-1 flex-column align-baseline\">\n          <Form.Item name=\"socials\" hidden>\n            <input />\n          </Form.Item>\n\n          {hasSocials &&\n            socialItems.map(\n              ({ _id, type, subType, subTypeName = '', isActive, frequency, isConnected }) => (\n                <div\n                  key={_id}\n                  className={`flex-item gap-1 flex-auto ${isMobile && 'flex-column w-100'}`}\n                >\n                  <Checkbox\n                    checked={isActive}\n                    disabled={!isConnected}\n                    className={`uppercase ${isMobile && 'w-100'}`}\n                    onChange={(e) => onChangeSet(_id, 'isActive', e.target.checked)}\n                  >\n                    {getSocialLabel(type, subType, subTypeName)}\n                  </Checkbox>\n                  <Select\n                    size=\"small\"\n                    defaultValue={4}\n                    value={frequency}\n                    placeholder=\"Select\"\n                    disabled={!isConnected}\n                    options={postingOptions}\n                    style={{ minWidth: 200 }}\n                    className={isMobile && 'w-100'}\n                    onChange={(value) => onChangeSet(_id, 'frequency', value)}\n                  />\n\n                  {!isConnected && (\n                    <Tooltip\n                      color=\"red\"\n                      arrow={false}\n                      title=\"Please connect your social account to enable this automation.\"\n                    >\n                      <Button\n                        danger\n                        type=\"text\"\n                        size=\"small\"\n                        shape=\"circle\"\n                        block={isMobile}\n                        icon={<InfoCircleOutlined />}\n                      >\n                        Account Disconnected{' '}\n                      </Button>\n                    </Tooltip>\n                  )}\n                </div>\n              )\n            )}\n\n          {!hasSocials && (\n            <Alert\n              showIcon\n              style={{ fontWeight: 600 }}\n              message=\"No social media accounts found. Please connect your social media accounts first.\"\n            />\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  return <Accordian items={items} defaultActive=\"social\" marginBottom={false} />;\n}\n","import ImgCrop from 'antd-img-crop';\nimport { useState } from 'react';\nimport { Spin, Upload, message } from 'antd';\nimport { uploadAndGetS3Path } from '../../reducers/fileSlice';\n\nexport default function CustomUpload({ onComplete, children, cropShape = 'round', aspect = 1 }) {\n  const [isUploading, setIsUploading] = useState(false);\n\n  const beforeUpload = (file) => {\n    if (!['image/png', 'image/jpg', 'image/jpeg'].includes(file.type.toLowerCase())) {\n      message.error('You can only upload JPG/PNG file!');\n      return false;\n    }\n\n    return true;\n  };\n\n  const props = {\n    name: 'file',\n    beforeUpload,\n    multiple: false,\n    showUploadList: false,\n    accept: '.png, .jpeg, .jpg',\n    customRequest: ({ file }) => {\n      const reader = new FileReader();\n      reader.onloadend = async () => {\n        try {\n          setIsUploading(true);\n          const result = await uploadAndGetS3Path({ imageData: reader.result });\n          setIsUploading(false);\n          onComplete(result?.s3Path);\n        } catch (error) {\n          console.log(error);\n          setIsUploading(false);\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n  };\n\n  return (\n    <ImgCrop\n      showReset\n      rotationSlider\n      aspect={aspect}\n      modalOk=\"Upload\"\n      cropShape={cropShape}\n      fillColor=\"transparent\"\n      beforeCrop={beforeUpload}\n    >\n      <Upload {...props}>\n        <Spin spinning={isUploading}>{children}</Spin>\n      </Upload>\n    </ImgCrop>\n  );\n}\n","import { Button, Avatar } from 'antd';\nimport CustomUpload from './CustomUpload';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { getFullS3Url } from '../../config-global';\n\nexport default function HeadshotImage({ picture = '', onChange }) {\n  const pictureUrl = picture\n    ? picture.startsWith('http')\n      ? picture\n      : getFullS3Url(picture)\n    : null;\n\n  return (\n    <div className=\"flex-item\">\n      {pictureUrl && <Avatar size=\"large\" src={pictureUrl} />}\n\n      <CustomUpload onComplete={onChange}>\n        <Button icon={<UploadOutlined />}>Click to {pictureUrl ? 'Change' : 'Upload'}</Button>\n      </CustomUpload>\n    </div>\n  );\n}\n","import * as ExcelJS from 'exceljs';\nimport { GUEST_TYPE, SOCIAL_TITLES, SOCIAL_SUB_TYPE } from './types';\n\nconst { HOST_GUEST, SOLO_SESSION } = GUEST_TYPE;\nconst { PROFILE, PAGE, GROUP } = SOCIAL_SUB_TYPE;\n\nconst colors = [\n  '##E91E63',\n  '#673AB7',\n  '#2196F3',\n  '#00BCD4',\n  '#FF9800',\n  '#8BC34A',\n  '#009688',\n  '#FF5722',\n  '#607D8B',\n  '#F44336',\n];\nexport const getRandomColor = () => colors[Math.floor(Math.random() * colors.length)];\n\nexport const getDateString = (timestamp) => new Date(timestamp).toDateString();\n\nexport const pollTypeOptions = [\n  { key: HOST_GUEST, value: HOST_GUEST, label: 'JOINT SESSION', text: 'Their Info' },\n  { key: SOLO_SESSION, value: SOLO_SESSION, label: 'SOLO SESSION', text: 'Your Info' },\n  // { key: GUEST_SPEAKER, value: GUEST_SPEAKER, label: \"I'M A GUEST SPEAKER\", text: 'Host Info' },\n];\n\nexport const getPollType = (key = HOST_GUEST) => pollTypeOptions.find((item) => item.key === key);\n\nexport const getSocialTitle = (type) => SOCIAL_TITLES[type];\n\nexport const getSocialLabel = (type, subType, subTypeName = '') => {\n  const title = getSocialTitle(type);\n\n  if (subType === PROFILE) return `YOUR ${title} PROFILE`;\n  if (subType === PAGE) return `YOUR ${title} PAGE: ${subTypeName}`;\n  if (subType === GROUP) return `YOUR ${title} GROUP: ${subTypeName}`;\n\n  return '';\n};\n\nexport const getSocialsItems = (socialAccounts = []) => {\n  return socialAccounts.reduce((items, item) => {\n    if (!item?.isConnected) return items;\n\n    const { type, socialId, page } = item;\n\n    const getSocialItem = (subType, subTypeId, subTypeName = '', frequency = 4) => {\n      const isConnected = (subTypeId || '').toString().length > 0;\n\n      return {\n        type,\n        subType,\n        frequency,\n        subTypeId,\n        subTypeName,\n        isConnected,\n        isActive: isConnected,\n        _id: `${type}_${subType}`,\n      };\n    };\n\n    const getSubTypeName = (item) =>\n      item?.accounts.find(({ id }) => id === item?.socialId)?.name || '';\n\n    return [\n      ...items,\n      getSocialItem(PROFILE, socialId),\n      getSocialItem(PAGE, page?.socialId, getSubTypeName(page)),\n    ];\n  }, []);\n};\n\n// download votes\nexport const downloadVotes = (votes) => {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet('Voting Data');\n\n  const { questionnaireAnswers = [] } = votes[0] || {};\n  const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n  sheet.columns = [\n    { header: 'Selected Topic', key: 'topic' },\n    { header: 'Voter Name', key: 'voter_name' },\n    { header: 'Voter Email', key: 'voter_email' },\n    { header: 'Voter Cell Phone', key: 'voter_cellphone' },\n    { header: 'User Suggested', key: 'isSuggestion' },\n    { header: 'Suggested Topic', key: 'suggested_topic' },\n    { header: 'Suggested Speaker', key: 'suggested_speaker' },\n    { header: `Question 1: ${quest1?.question}`, key: 'quest1' },\n    { header: `Question 2: ${quest2?.question}`, key: 'quest2' },\n    { header: 'Referral 1', key: 'quest2_referral1' },\n    { header: 'Referral 2', key: 'quest2_referral2' },\n    { header: 'Name', key: 'quest2_name' },\n    { header: 'Email', key: 'quest2_email' },\n    { header: `Question 3: ${quest3?.question}`, key: 'quest3' },\n    { header: `Question 4: ${quest4?.question}`, key: 'quest4' },\n    { header: 'Timestamp', key: 'timestamp' },\n  ];\n\n  votes.forEach((vote) => {\n    const { selectedTopic, voter, isSuggestion, suggestions, createdAt, questionnaireAnswers } =\n      vote;\n\n    const [quest1, quest2, quest3, quest4] = questionnaireAnswers;\n\n    sheet.addRow({\n      topic: selectedTopic?.topic || 'Other',\n      voter_name: voter?.name || '--',\n      voter_email: voter?.email || '--',\n      voter_cellphone: voter?.cell_phone || '--',\n      isSuggestion: isSuggestion ? 'Yes' : 'No',\n      suggested_topic: suggestions?.topic || '--',\n      suggested_speaker: suggestions?.speaker || '--',\n      quest1: quest1 ? quest1?.answers || '--' : '--',\n      quest2: quest2?.answers ? `Comment: ${quest2?.answers?.comment || '--'}` : '--',\n      quest2_referral1: quest2?.answers?.referral1 || '--',\n      quest2_referral2: quest2?.answers?.referral2 || '--',\n      quest2_name: quest2?.answers?.name || '--',\n      quest2_email: quest2?.answers?.email || '--',\n      quest3: quest3 ? quest3?.answers?.answer || '--' : '--',\n      quest4: quest4 ? (quest4?.doneSharing ? 'Yes' : 'No') : '--',\n      timestamp: new Date(createdAt).toLocaleString(),\n    });\n  });\n\n  workbook.xlsx.writeBuffer().then((buffer) => {\n    const blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'VotingData.xlsx';\n    a.click();\n  });\n};\n"],"names":["Accordian","_ref","items","defaultActive","marginBottom","_jsx","Collapse","bordered","className","concat","defaultActiveKey","expandIcon","_ref2","isActive","MinusOutlined","PlusOutlined","TextEditor","name","params","Form","Item","formItemParams","children","ReactQuill","theme","modules","toolbar","header","list","script","indent","direction","color","background","font","align","SuggestionModal","open","onCancel","Modal","centered","footer","title","SimpleBar","style","maxHeight","paddingRight","List","size","dataSource","renderItem","item","index","_jsxs","Typography","Text","copyable","Option","Select","Dragger","Upload","Paragraph","PollSharingImage","user","useAuthContext","form","useFormInstance","pollImageSrc","useWatch","audioDuration","countdownTime","setCountdownTime","useState","isGenerating","setIsGenerating","showSuggestions","setShowSuggestions","showAddManageImages","setShowAddManageImages","dispatch","useDispatch","files","isLoading","isUploading","useSelector","state","images","filter","type","FILE_TYPE","IMAGE","getFormName","TextColorFormItem","label","formType","isMobile","rules","max","message","Input","maxLength","placeholder","suffix","Tooltip","Button","icon","QuestionCircleOutlined","onClick","ColorPicker","showText","onChangeComplete","metaColor","setFieldValue","toHexString","key","_Fragment","loading","disabled","map","_ref4","_id","s3Path","value","Avatar","src","getFullS3Url","marginLeft","block","danger","async","_images$find","_user$profile","_user$profile2","formValues","getFieldsValue","audio","guest","pollSharingImage","hostSpeakerLabel","guestSpeakerLabel","pollSharingImageInfo","userLogo","picture","showLogo","find","_ref3","logo","host","fontColor","text","firstName","lastName","profile","organization","fullName","notification","error","description","imageS3Path","videoS3Path","generatePollImage","success","console","PreviewAutomationImage","prevEl","uploadProps","multiple","showUploadList","accept","customRequest","file","_ref5","reader","FileReader","readAsDataURL","onload","imageData","result","split","requestBody","uploadImages","onDrop","e","log","dataTransfer","Spin","spinning","tip","InboxOutlined","Simplebar","_ref6","actions","Popconfirm","okText","cancelText","onConfirm","deleteFile","Meta","alignItems","avatar","destroyOnClose","closable","keyboard","maskClosable","Statistic","Countdown","format","Date","now","onFinish","dayjs","utc","Title","HOST_GUEST","SOLO_SESSION","GUEST_TYPE","hostInfoFields","required","topicLabels","pollInfoFields","getGuesUsertObj","_userObj$profile","_userObj$profile2","_userObj$profile3","_userObj$profile4","_userObj$profile5","userObj","arguments","length","undefined","email","phone","about","jobTitle","getPostSharingImageInfo","obj","headerText","headerBgColor","bgColor","headerTextColor","textColor","footerText","footerBgColor","footerTextColor","NewAutomation","_getPollType","isGuestAcceptance","id","useParams","useForm","navigate","useNavigate","currentStep","setCurrentStep","isNew","guestTypeValue","isSoloSession","isPublished","isPublishing","guests","socials","guestUser","pollImageInfo","hostOfferUrl","guestOfferUrl","recordingDate","presentationName","guestType","socialShareFileSrc","potentialTopics","startHostAutomation","emailTemplate","subject","body","defaultSocials","getSocialsItems","socialAccounts","useEffect","getFiles","fetchGuest","updateState","resetFields","setFieldsValue","status","initialValues","duration","local","onFormSubmit","validateFields","then","values","addGuest","updateGuest","catch","stepItems","content","level","getPollType","HeadshotImage","onChange","i","SocialPostingItem","Row","gutter","Col","span","strong","wrapperCol","itemLayout","DatePicker","disabledDate","d","subtract","add","labelCol","valuePropName","Switch","left","bottom","position","Space","c","POLL_STATUS","DRAFT","PUBLISHED","AppTitle","labelWrap","labelAlign","layout","hidden","Radio","options","pollTypeOptions","Steps","current","display","AutomationCongrats","showActionBtns","onGoBack","CopyText","onCopy","ellipsis","connectedSocials","reduce","acc","isConnected","subType","SOCIAL_TITLES","Link","target","to","userName","uniqueId","password","ArrowLeftOutlined","CheckOutlined","PATH_DASHBOARD","dashboard","automations","showPollImagePreview","setShowPollImagePreview","Image","preview","visible","onVisibleChange","socialItems","postingOptions","onChangeSet","field","hasSocials","subTypeName","frequency","Checkbox","checked","getSocialLabel","defaultValue","minWidth","arrow","shape","InfoCircleOutlined","Alert","showIcon","fontWeight","CustomUpload","onComplete","cropShape","aspect","setIsUploading","beforeUpload","includes","toLowerCase","props","onloadend","uploadAndGetS3Path","ImgCrop","showReset","rotationSlider","modalOk","fillColor","beforeCrop","pictureUrl","startsWith","UploadOutlined","PROFILE","PAGE","GROUP","SOCIAL_SUB_TYPE","colors","getRandomColor","Math","floor","random","getDateString","timestamp","toDateString","getSocialTitle","socialId","page","getSocialItem","subTypeId","toString","_item$accounts$find","accounts","getSubTypeName","downloadVotes","votes","workbook","ExcelJS","sheet","addWorksheet","questionnaireAnswers","quest1","quest2","quest3","quest4","columns","question","forEach","vote","_quest2$answers","_quest2$answers2","_quest2$answers3","_quest2$answers4","_quest2$answers5","_quest3$answers","selectedTopic","voter","isSuggestion","suggestions","createdAt","addRow","topic","voter_name","voter_email","voter_cellphone","cell_phone","suggested_topic","suggested_speaker","speaker","answers","comment","quest2_referral1","referral1","quest2_referral2","referral2","quest2_name","quest2_email","answer","doneSharing","toLocaleString","xlsx","writeBuffer","buffer","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click"],"sourceRoot":""}