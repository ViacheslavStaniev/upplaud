{"version":3,"file":"static/js/617.07a70be2.chunk.js","mappings":"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","sources":["pages/dashboard/UserCreatePage.js","sections/@dashboard/user/UserNewEditForm.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { Container } from '@mui/material';\nimport { PATH_DASHBOARD } from '../../routes/paths';\nimport { useSettingsContext } from '../../components/settings';\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\nimport UserNewEditForm from '../../sections/@dashboard/user/UserNewEditForm';\nimport AppTitle from '../../components/AppTitle';\n\nexport default function UserCreatePage() {\n  const { themeStretch } = useSettingsContext();\n\n  return (\n    <>\n      <AppTitle title=\"User: Create a new user\" />\n\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <CustomBreadcrumbs\n          heading=\"Create a new user\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            {\n              name: 'User',\n              href: PATH_DASHBOARD.user.list,\n            },\n            { name: 'New user' },\n          ]}\n        />\n        <UserNewEditForm />\n      </Container>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, Typography, FormControlLabel } from '@mui/material';\n// utils\nimport { fData } from '../../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// assets\nimport { countries } from '../../../assets/data';\n// components\nimport Label from '../../../components/label';\nimport { useSnackbar } from '../../../components/snackbar';\nimport FormProvider, {\n  RHFSelect,\n  RHFSwitch,\n  RHFTextField,\n  RHFUploadAvatar,\n} from '../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nUserNewEditForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object,\n};\n\nexport default function UserNewEditForm({ isEdit = false, currentUser }) {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\n    phoneNumber: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    country: Yup.string().required('Country is required'),\n    company: Yup.string().required('Company is required'),\n    state: Yup.string().required('State is required'),\n    city: Yup.string().required('City is required'),\n    role: Yup.string().required('Role is required'),\n    avatarUrl: Yup.string().required('Avatar is required').nullable(true),\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      phoneNumber: currentUser?.phoneNumber || '',\n      address: currentUser?.address || '',\n      country: currentUser?.country || '',\n      state: currentUser?.state || '',\n      city: currentUser?.city || '',\n      zipCode: currentUser?.zipCode || '',\n      avatarUrl: currentUser?.avatarUrl || null,\n      isVerified: currentUser?.isVerified || true,\n      status: currentUser?.status,\n      company: currentUser?.company || '',\n      role: currentUser?.role || '',\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentUser]\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewUserSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n\n  useEffect(() => {\n    if (isEdit && currentUser) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, currentUser]);\n\n  const onSubmit = async (data) => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      reset();\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\n      navigate(PATH_DASHBOARD.user.list);\n      console.log('DATA', data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n\n      const newFile = Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      });\n\n      if (file) {\n        setValue('avatarUrl', newFile, { shouldValidate: true });\n      }\n    },\n    [setValue]\n  );\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Card sx={{ pt: 10, pb: 5, px: 3 }}>\n            {isEdit && (\n              <Label\n                color={values.status === 'active' ? 'success' : 'error'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.status}\n              </Label>\n            )}\n\n            <Box sx={{ mb: 5 }}>\n              <RHFUploadAvatar\n                name=\"avatarUrl\"\n                maxSize={3145728}\n                onDrop={handleDrop}\n                helperText={\n                  <Typography\n                    variant=\"caption\"\n                    sx={{\n                      mt: 2,\n                      mx: 'auto',\n                      display: 'block',\n                      textAlign: 'center',\n                      color: 'text.secondary',\n                    }}\n                  >\n                    Allowed *.jpeg, *.jpg, *.png, *.gif\n                    <br /> max size of {fData(3145728)}\n                  </Typography>\n                }\n              />\n            </Box>\n\n            {isEdit && (\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={\n                  <Controller\n                    name=\"status\"\n                    control={control}\n                    render={({ field }) => (\n                      <Switch\n                        {...field}\n                        checked={field.value !== 'active'}\n                        onChange={(event) =>\n                          field.onChange(event.target.checked ? 'banned' : 'active')\n                        }\n                      />\n                    )}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Banned\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Apply disable account\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n            )}\n\n            <RHFSwitch\n              name=\"isVerified\"\n              labelPlacement=\"start\"\n              label={\n                <>\n                  <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                    Email Verified\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                    Disabling this will automatically send the user a verification email\n                  </Typography>\n                </>\n              }\n              sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\n            />\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={8}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              rowGap={3}\n              columnGap={2}\n              display=\"grid\"\n              gridTemplateColumns={{\n                xs: 'repeat(1, 1fr)',\n                sm: 'repeat(2, 1fr)',\n              }}\n            >\n              <RHFTextField name=\"name\" label=\"Full Name\" />\n              <RHFTextField name=\"email\" label=\"Email Address\" />\n              <RHFTextField name=\"phoneNumber\" label=\"Phone Number\" />\n\n              <RHFSelect native name=\"country\" label=\"Country\" placeholder=\"Country\">\n                <option value=\"\" />\n                {countries.map((country) => (\n                  <option key={country.code} value={country.label}>\n                    {country.label}\n                  </option>\n                ))}\n              </RHFSelect>\n\n              <RHFTextField name=\"state\" label=\"State/Region\" />\n              <RHFTextField name=\"city\" label=\"City\" />\n              <RHFTextField name=\"address\" label=\"Address\" />\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\n              <RHFTextField name=\"company\" label=\"Company\" />\n              <RHFTextField name=\"role\" label=\"Role\" />\n            </Box>\n\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {!isEdit ? 'Create User' : 'Save Changes'}\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["UserCreatePage","themeStretch","useSettingsContext","title","maxWidth","heading","links","name","href","PATH_DASHBOARD","UserNewEditForm","isEdit","currentUser","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewUserSchema","Yup","shape","required","email","phoneNumber","address","country","company","state","city","role","avatarUrl","nullable","defaultValues","useMemo","zipCode","isVerified","status","methods","useForm","resolver","yupResolver","reset","watch","control","setValue","handleSubmit","isSubmitting","formState","values","useEffect","onSubmit","data","Promise","resolve","setTimeout","console","log","error","handleDrop","useCallback","acceptedFiles","file","newFile","Object","assign","preview","URL","createObjectURL","shouldValidate","container","spacing","item","xs","md","sx","pt","pb","px","color","textTransform","position","top","right","mb","maxSize","onDrop","helperText","variant","mt","mx","display","textAlign","fData","labelPlacement","render","field","checked","value","onChange","event","target","label","width","justifyContent","p","rowGap","columnGap","gridTemplateColumns","sm","native","placeholder","countries","code","alignItems","type","loading","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined"],"sourceRoot":""}