{"version":3,"file":"static/js/382.07323d95.chunk.js","mappings":"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","sources":["pages/dashboard/PostingTemplate.js"],"sourcesContent":["import AppTitle from '../../components/AppTitle';\nimport CustomIcon from '../../components/CustomIcon';\nimport { SketchPicker } from 'react-color';\nimport { BgColorsOutlined, PictureOutlined } from '@ant-design/icons';\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  Popover,\n  Typography,\n  Space,\n  Input,\n  // Select,\n  Divider,\n  Tooltip,\n} from 'antd';\nimport { useCallback } from 'react';\n\nexport default function PostingTemplate() {\n  const [form] = Form.useForm();\n\n  const { Title, Paragraph } = Typography;\n\n  const onSubmit = async (data) => {\n    try {\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const options = Array(5)\n  //   .fill(0)\n  //   .map((_, i) => ({ value: i, label: `Postcard ${i + 1}` }));\n\n  const bgColor = Form.useWatch('bgColor', form);\n  const textColor = Form.useWatch('textColor', form);\n\n  const ColorPicker = useCallback(\n    ({ name, value }) => {\n      return (\n        <Popover\n          trigger=\"click\"\n          title=\"Pick a Color\"\n          content={\n            <SketchPicker\n              color={value}\n              onChangeComplete={(color) => form.setFieldValue(name, color.hex)}\n            />\n          }\n        >\n          <Tooltip title=\"Pick a Color\">\n            <Button size=\"small\" type=\"text\" icon={<BgColorsOutlined />} />\n          </Tooltip>\n        </Popover>\n      );\n    },\n    [form]\n  );\n\n  return (\n    <>\n      <AppTitle title=\"Posting Template\" />\n\n      <div className=\"posting-template\">\n        <Title className=\"m-0 mb-1\">Posting Template</Title>\n\n        <div className=\"bg-F7F3F9 br-8px p-2 mb-4\">\n          <Paragraph>\n            Customize the default color & headline text for your Poll’s Postcard.\n          </Paragraph>\n          <Paragraph>\n            Plus, you’ll be able to customize the posting schedule for your social media. Guests can\n            tailor their own schedule.\n          </Paragraph>\n          <Paragraph className=\"m-0\">\n            What you see below is a template. Each postcard will be updated with your Guest’s info.\n          </Paragraph>\n        </div>\n\n        <Row>\n          <Col span={10}>\n            <Title level={3} className=\"m-0 mb-2\">\n              Select Postcard to Edit\n            </Title>\n\n            <Form\n              form={form}\n              size=\"large\"\n              layout=\"vertical\"\n              onFinish={onSubmit}\n              initialValues={{\n                // postcard: 0,\n                headline: '',\n                textColor: '#000000',\n                bgColor: '#000000',\n              }}\n            >\n              {/* <Form.Item name=\"postcard\" label=\"SELECT POSTCARD\">\n                <Select options={options} placeholder=\"Select a postcard\" onChange={console.log} />\n              </Form.Item> */}\n\n              <Form.Item name=\"headline\" label=\"HEADLINE TEXT\">\n                <Input placeholder=\"Enter your headline text here...\" />\n              </Form.Item>\n\n              <Form.Item name=\"textColor\" label=\"TEXT COLOR\">\n                <Input\n                  readOnly\n                  placeholder=\"e.g #000000\"\n                  suffix={<ColorPicker name=\"textColor\" value={textColor} />}\n                  prefix={<CustomIcon name=\"square_fill\" style={{ color: textColor }} />}\n                />\n              </Form.Item>\n\n              <Form.Item name=\"bgColor\" label=\"BACKGROUND COLOR\">\n                <Input\n                  placeholder=\"e.g #000000\"\n                  suffix={<ColorPicker name=\"bgColor\" value={bgColor} />}\n                  prefix={<CustomIcon name=\"square_fill\" style={{ color: bgColor }} />}\n                />\n              </Form.Item>\n\n              <Space direction=\"vertical\" size={16}>\n                <Button\n                  shape=\"round\"\n                  htmlType=\"submit\"\n                  className=\"primary-outlined\"\n                  loading={false}\n                >\n                  SAVE CUSTOMIZATION\n                </Button>\n\n                <Button type=\"info\" shape=\"round\">\n                  CUSTOMIZE YOUR POSTING SCHEDULE\n                </Button>\n              </Space>\n            </Form>\n          </Col>\n\n          <Col span={2} className=\"text-center\">\n            <Divider type=\"vertical\" className=\"h-100\" />\n          </Col>\n\n          <Col span={10}>\n            <Title level={3} className=\"m-0 mb-2\">\n              Postcard Preview\n            </Title>\n\n            <Card\n              bodyStyle={{ textAlign: 'center' }}\n              className=\"flex-item flex-center br-12px\"\n              style={{\n                width: 'min(100%, 560px)',\n                background: 'rgba(0, 204, 204, 0.02)',\n                height: 'min(calc(100% - 2rem), 315px)',\n                border: '1px solid rgba(0, 204, 204, 0.5)',\n              }}\n            >\n              <PictureOutlined className=\"color-0AB6B6 font-80px\" />\n              <Title level={4} className=\"color-6b0d88 mt-2\">\n                No preview available yet\n              </Title>\n              <Paragraph className=\"font-16px\">\n                Please select the postcard first to get a preview\n              </Paragraph>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n"],"names":["PostingTemplate","_Form$useForm","Form","useForm","form","_slicedToArray","Title","Typography","Paragraph","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","console","log","error","stop","_x","apply","arguments","bgColor","useWatch","textColor","ColorPicker","useCallback","_ref2","name","value","_jsx","Popover","trigger","title","content","SketchPicker","color","onChangeComplete","setFieldValue","hex","children","Tooltip","Button","size","type","icon","BgColorsOutlined","_jsxs","_Fragment","AppTitle","className","Row","Col","span","level","layout","onFinish","initialValues","headline","Item","label","Input","placeholder","readOnly","suffix","prefix","CustomIcon","style","Space","direction","shape","htmlType","loading","Divider","Card","bodyStyle","textAlign","width","background","height","border","PictureOutlined"],"sourceRoot":""}